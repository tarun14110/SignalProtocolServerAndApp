/*
  Copyright (c) 2015-16, Princeton University.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are 
  met:
  * Redistributions of source code must retain the above copyright 
  notice, this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above 
  copyright notice, this list of conditions and the following disclaimer 
  in the documentation and/or other materials provided with the 
  distribution.
  * Neither the name of Princeton University nor the names of its
  contributors may be used to endorse or promote products derived from
  this software without specific prior written permission.
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c2s.proto

package org.coniks.coniks_common;

/** Implements all protobufs messages exchanged between the
 * a CONIKS server and clients.
 *
 *@author Marcela S. Melara (melara@cs.princeton.edu)
 *@author Michael Rochlin
 */
public final class C2SProtos {
  private C2SProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DSAPublicKeyProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.DSAPublicKeyProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    boolean hasP();
    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    java.lang.String getP();
    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    com.google.protobuf.ByteString
        getPBytes();

    /**
     * <code>required string q = 2;</code>
     */
    boolean hasQ();
    /**
     * <code>required string q = 2;</code>
     */
    java.lang.String getQ();
    /**
     * <code>required string q = 2;</code>
     */
    com.google.protobuf.ByteString
        getQBytes();

    /**
     * <code>required string g = 3;</code>
     */
    boolean hasG();
    /**
     * <code>required string g = 3;</code>
     */
    java.lang.String getG();
    /**
     * <code>required string g = 3;</code>
     */
    com.google.protobuf.ByteString
        getGBytes();

    /**
     * <code>required string y = 4;</code>
     */
    boolean hasY();
    /**
     * <code>required string y = 4;</code>
     */
    java.lang.String getY();
    /**
     * <code>required string y = 4;</code>
     */
    com.google.protobuf.ByteString
        getYBytes();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.DSAPublicKeyProto}
   */
  public static final class DSAPublicKeyProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.DSAPublicKeyProto)
      DSAPublicKeyProtoOrBuilder {
    // Use DSAPublicKeyProto.newBuilder() to construct.
    private DSAPublicKeyProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DSAPublicKeyProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DSAPublicKeyProto defaultInstance;
    public static DSAPublicKeyProto getDefaultInstance() {
      return defaultInstance;
    }

    public DSAPublicKeyProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DSAPublicKeyProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              p_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              q_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              g_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              y_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_DSAPublicKeyProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.class, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder.class);
    }

    public static com.google.protobuf.Parser<DSAPublicKeyProto> PARSER =
        new com.google.protobuf.AbstractParser<DSAPublicKeyProto>() {
      public DSAPublicKeyProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DSAPublicKeyProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DSAPublicKeyProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int P_FIELD_NUMBER = 1;
    private java.lang.Object p_;
    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    public boolean hasP() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    public java.lang.String getP() {
      java.lang.Object ref = p_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          p_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string p = 1;</code>
     *
     * <pre>
     * send the bigintegers (or something) as strings across the wire
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPBytes() {
      java.lang.Object ref = p_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        p_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int Q_FIELD_NUMBER = 2;
    private java.lang.Object q_;
    /**
     * <code>required string q = 2;</code>
     */
    public boolean hasQ() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string q = 2;</code>
     */
    public java.lang.String getQ() {
      java.lang.Object ref = q_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          q_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string q = 2;</code>
     */
    public com.google.protobuf.ByteString
        getQBytes() {
      java.lang.Object ref = q_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        q_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int G_FIELD_NUMBER = 3;
    private java.lang.Object g_;
    /**
     * <code>required string g = 3;</code>
     */
    public boolean hasG() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string g = 3;</code>
     */
    public java.lang.String getG() {
      java.lang.Object ref = g_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          g_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string g = 3;</code>
     */
    public com.google.protobuf.ByteString
        getGBytes() {
      java.lang.Object ref = g_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        g_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int Y_FIELD_NUMBER = 4;
    private java.lang.Object y_;
    /**
     * <code>required string y = 4;</code>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string y = 4;</code>
     */
    public java.lang.String getY() {
      java.lang.Object ref = y_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          y_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string y = 4;</code>
     */
    public com.google.protobuf.ByteString
        getYBytes() {
      java.lang.Object ref = y_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        y_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      p_ = "";
      q_ = "";
      g_ = "";
      y_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasG()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getQBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getGBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getYBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getQBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getYBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.DSAPublicKeyProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.DSAPublicKeyProto)
        org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_DSAPublicKeyProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.class, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        p_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        q_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        g_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto build() {
        org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto buildPartial() {
        org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto result = new org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.p_ = p_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.q_ = q_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.g_ = g_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto other) {
        if (other == org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance()) return this;
        if (other.hasP()) {
          bitField0_ |= 0x00000001;
          p_ = other.p_;
          onChanged();
        }
        if (other.hasQ()) {
          bitField0_ |= 0x00000002;
          q_ = other.q_;
          onChanged();
        }
        if (other.hasG()) {
          bitField0_ |= 0x00000004;
          g_ = other.g_;
          onChanged();
        }
        if (other.hasY()) {
          bitField0_ |= 0x00000008;
          y_ = other.y_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasP()) {
          
          return false;
        }
        if (!hasQ()) {
          
          return false;
        }
        if (!hasG()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object p_ = "";
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public boolean hasP() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public java.lang.String getP() {
        java.lang.Object ref = p_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            p_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPBytes() {
        java.lang.Object ref = p_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          p_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public Builder setP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        p_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public Builder clearP() {
        bitField0_ = (bitField0_ & ~0x00000001);
        p_ = getDefaultInstance().getP();
        onChanged();
        return this;
      }
      /**
       * <code>required string p = 1;</code>
       *
       * <pre>
       * send the bigintegers (or something) as strings across the wire
       * </pre>
       */
      public Builder setPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        p_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object q_ = "";
      /**
       * <code>required string q = 2;</code>
       */
      public boolean hasQ() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string q = 2;</code>
       */
      public java.lang.String getQ() {
        java.lang.Object ref = q_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            q_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string q = 2;</code>
       */
      public com.google.protobuf.ByteString
          getQBytes() {
        java.lang.Object ref = q_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          q_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string q = 2;</code>
       */
      public Builder setQ(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string q = 2;</code>
       */
      public Builder clearQ() {
        bitField0_ = (bitField0_ & ~0x00000002);
        q_ = getDefaultInstance().getQ();
        onChanged();
        return this;
      }
      /**
       * <code>required string q = 2;</code>
       */
      public Builder setQBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        q_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object g_ = "";
      /**
       * <code>required string g = 3;</code>
       */
      public boolean hasG() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string g = 3;</code>
       */
      public java.lang.String getG() {
        java.lang.Object ref = g_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            g_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string g = 3;</code>
       */
      public com.google.protobuf.ByteString
          getGBytes() {
        java.lang.Object ref = g_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          g_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string g = 3;</code>
       */
      public Builder setG(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        g_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string g = 3;</code>
       */
      public Builder clearG() {
        bitField0_ = (bitField0_ & ~0x00000004);
        g_ = getDefaultInstance().getG();
        onChanged();
        return this;
      }
      /**
       * <code>required string g = 3;</code>
       */
      public Builder setGBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        g_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object y_ = "";
      /**
       * <code>required string y = 4;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string y = 4;</code>
       */
      public java.lang.String getY() {
        java.lang.Object ref = y_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            y_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string y = 4;</code>
       */
      public com.google.protobuf.ByteString
          getYBytes() {
        java.lang.Object ref = y_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          y_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string y = 4;</code>
       */
      public Builder setY(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string y = 4;</code>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = getDefaultInstance().getY();
        onChanged();
        return this;
      }
      /**
       * <code>required string y = 4;</code>
       */
      public Builder setYBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        y_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.DSAPublicKeyProto)
    }

    static {
      defaultInstance = new DSAPublicKeyProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.DSAPublicKeyProto)
  }

  public interface RegistrationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.Registration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    boolean hasBlob();
    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    java.lang.String getBlob();
    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    com.google.protobuf.ByteString
        getBlobBytes();

    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    boolean hasChangeKey();
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey();
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder();

    /**
     * <code>optional bool allows_unsigned_keychange = 4;</code>
     */
    boolean hasAllowsUnsignedKeychange();
    /**
     * <code>optional bool allows_unsigned_keychange = 4;</code>
     */
    boolean getAllowsUnsignedKeychange();

    /**
     * <code>optional bool allows_public_lookup = 5;</code>
     */
    boolean hasAllowsPublicLookup();
    /**
     * <code>optional bool allows_public_lookup = 5;</code>
     */
    boolean getAllowsPublicLookup();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.Registration}
   */
  public static final class Registration extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.Registration)
      RegistrationOrBuilder {
    // Use Registration.newBuilder() to construct.
    private Registration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Registration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Registration defaultInstance;
    public static Registration getDefaultInstance() {
      return defaultInstance;
    }

    public Registration getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Registration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              blob_ = bs;
              break;
            }
            case 26: {
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = changeKey_.toBuilder();
              }
              changeKey_ = input.readMessage(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(changeKey_);
                changeKey_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              allowsUnsignedKeychange_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              allowsPublicLookup_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_Registration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_Registration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.Registration.class, org.coniks.coniks_common.C2SProtos.Registration.Builder.class);
    }

    public static com.google.protobuf.Parser<Registration> PARSER =
        new com.google.protobuf.AbstractParser<Registration>() {
      public Registration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Registration(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Registration> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server must make sure that these two fields are specified
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLOB_FIELD_NUMBER = 2;
    private java.lang.Object blob_;
    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    public boolean hasBlob() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    public java.lang.String getBlob() {
      java.lang.Object ref = blob_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blob_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string blob = 2;</code>
     *
     * <pre>
     *server will parse this from C S expression
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBlobBytes() {
      java.lang.Object ref = blob_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blob_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANGEKEY_FIELD_NUMBER = 3;
    private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto changeKey_;
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    public boolean hasChangeKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey() {
      return changeKey_;
    }
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder() {
      return changeKey_;
    }

    public static final int ALLOWS_UNSIGNED_KEYCHANGE_FIELD_NUMBER = 4;
    private boolean allowsUnsignedKeychange_;
    /**
     * <code>optional bool allows_unsigned_keychange = 4;</code>
     */
    public boolean hasAllowsUnsignedKeychange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool allows_unsigned_keychange = 4;</code>
     */
    public boolean getAllowsUnsignedKeychange() {
      return allowsUnsignedKeychange_;
    }

    public static final int ALLOWS_PUBLIC_LOOKUP_FIELD_NUMBER = 5;
    private boolean allowsPublicLookup_;
    /**
     * <code>optional bool allows_public_lookup = 5;</code>
     */
    public boolean hasAllowsPublicLookup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool allows_public_lookup = 5;</code>
     */
    public boolean getAllowsPublicLookup() {
      return allowsPublicLookup_;
    }

    private void initFields() {
      name_ = "";
      blob_ = "";
      changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
      allowsUnsignedKeychange_ = false;
      allowsPublicLookup_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasChangeKey()) {
        if (!getChangeKey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBlobBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, changeKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, allowsUnsignedKeychange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, allowsPublicLookup_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBlobBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, changeKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, allowsUnsignedKeychange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, allowsPublicLookup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.Registration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.Registration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.Registration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.Registration)
        org.coniks.coniks_common.C2SProtos.RegistrationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_Registration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_Registration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.Registration.class, org.coniks.coniks_common.C2SProtos.Registration.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.Registration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChangeKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        blob_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (changeKeyBuilder_ == null) {
          changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
        } else {
          changeKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        allowsUnsignedKeychange_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        allowsPublicLookup_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_Registration_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.Registration getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.Registration.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.Registration build() {
        org.coniks.coniks_common.C2SProtos.Registration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.Registration buildPartial() {
        org.coniks.coniks_common.C2SProtos.Registration result = new org.coniks.coniks_common.C2SProtos.Registration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.blob_ = blob_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (changeKeyBuilder_ == null) {
          result.changeKey_ = changeKey_;
        } else {
          result.changeKey_ = changeKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.allowsUnsignedKeychange_ = allowsUnsignedKeychange_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.allowsPublicLookup_ = allowsPublicLookup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.Registration) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.Registration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.Registration other) {
        if (other == org.coniks.coniks_common.C2SProtos.Registration.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasBlob()) {
          bitField0_ |= 0x00000002;
          blob_ = other.blob_;
          onChanged();
        }
        if (other.hasChangeKey()) {
          mergeChangeKey(other.getChangeKey());
        }
        if (other.hasAllowsUnsignedKeychange()) {
          setAllowsUnsignedKeychange(other.getAllowsUnsignedKeychange());
        }
        if (other.hasAllowsPublicLookup()) {
          setAllowsPublicLookup(other.getAllowsPublicLookup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasChangeKey()) {
          if (!getChangeKey().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.Registration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.Registration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server must make sure that these two fields are specified
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object blob_ = "";
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public boolean hasBlob() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public java.lang.String getBlob() {
        java.lang.Object ref = blob_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blob_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBlobBytes() {
        java.lang.Object ref = blob_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blob_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public Builder setBlob(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        blob_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public Builder clearBlob() {
        bitField0_ = (bitField0_ & ~0x00000002);
        blob_ = getDefaultInstance().getBlob();
        onChanged();
        return this;
      }
      /**
       * <code>optional string blob = 2;</code>
       *
       * <pre>
       *server will parse this from C S expression
       * </pre>
       */
      public Builder setBlobBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        blob_ = value;
        onChanged();
        return this;
      }

      private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> changeKeyBuilder_;
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public boolean hasChangeKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey() {
        if (changeKeyBuilder_ == null) {
          return changeKey_;
        } else {
          return changeKeyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public Builder setChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
        if (changeKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          changeKey_ = value;
          onChanged();
        } else {
          changeKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public Builder setChangeKey(
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder builderForValue) {
        if (changeKeyBuilder_ == null) {
          changeKey_ = builderForValue.build();
          onChanged();
        } else {
          changeKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public Builder mergeChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
        if (changeKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              changeKey_ != org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance()) {
            changeKey_ =
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.newBuilder(changeKey_).mergeFrom(value).buildPartial();
          } else {
            changeKey_ = value;
          }
          onChanged();
        } else {
          changeKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public Builder clearChangeKey() {
        if (changeKeyBuilder_ == null) {
          changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
          onChanged();
        } else {
          changeKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder getChangeKeyBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getChangeKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder() {
        if (changeKeyBuilder_ != null) {
          return changeKeyBuilder_.getMessageOrBuilder();
        } else {
          return changeKey_;
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> 
          getChangeKeyFieldBuilder() {
        if (changeKeyBuilder_ == null) {
          changeKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder>(
                  getChangeKey(),
                  getParentForChildren(),
                  isClean());
          changeKey_ = null;
        }
        return changeKeyBuilder_;
      }

      private boolean allowsUnsignedKeychange_ ;
      /**
       * <code>optional bool allows_unsigned_keychange = 4;</code>
       */
      public boolean hasAllowsUnsignedKeychange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool allows_unsigned_keychange = 4;</code>
       */
      public boolean getAllowsUnsignedKeychange() {
        return allowsUnsignedKeychange_;
      }
      /**
       * <code>optional bool allows_unsigned_keychange = 4;</code>
       */
      public Builder setAllowsUnsignedKeychange(boolean value) {
        bitField0_ |= 0x00000008;
        allowsUnsignedKeychange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allows_unsigned_keychange = 4;</code>
       */
      public Builder clearAllowsUnsignedKeychange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        allowsUnsignedKeychange_ = false;
        onChanged();
        return this;
      }

      private boolean allowsPublicLookup_ ;
      /**
       * <code>optional bool allows_public_lookup = 5;</code>
       */
      public boolean hasAllowsPublicLookup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool allows_public_lookup = 5;</code>
       */
      public boolean getAllowsPublicLookup() {
        return allowsPublicLookup_;
      }
      /**
       * <code>optional bool allows_public_lookup = 5;</code>
       */
      public Builder setAllowsPublicLookup(boolean value) {
        bitField0_ |= 0x00000010;
        allowsPublicLookup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allows_public_lookup = 5;</code>
       */
      public Builder clearAllowsPublicLookup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        allowsPublicLookup_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.Registration)
    }

    static {
      defaultInstance = new Registration(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.Registration)
  }

  public interface ULNChangeReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.ULNChangeReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string newBlob = 2;</code>
     */
    boolean hasNewBlob();
    /**
     * <code>optional string newBlob = 2;</code>
     */
    java.lang.String getNewBlob();
    /**
     * <code>optional string newBlob = 2;</code>
     */
    com.google.protobuf.ByteString
        getNewBlobBytes();

    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    boolean hasNewChangeKey();
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getNewChangeKey();
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getNewChangeKeyOrBuilder();

    /**
     * <code>optional bool allowsUnsignedKeychange = 4;</code>
     */
    boolean hasAllowsUnsignedKeychange();
    /**
     * <code>optional bool allowsUnsignedKeychange = 4;</code>
     */
    boolean getAllowsUnsignedKeychange();

    /**
     * <code>optional bool allowsPublicLookup = 5;</code>
     */
    boolean hasAllowsPublicLookup();
    /**
     * <code>optional bool allowsPublicLookup = 5;</code>
     */
    boolean getAllowsPublicLookup();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.ULNChangeReq}
   */
  public static final class ULNChangeReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.ULNChangeReq)
      ULNChangeReqOrBuilder {
    // Use ULNChangeReq.newBuilder() to construct.
    private ULNChangeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ULNChangeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ULNChangeReq defaultInstance;
    public static ULNChangeReq getDefaultInstance() {
      return defaultInstance;
    }

    public ULNChangeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ULNChangeReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              newBlob_ = bs;
              break;
            }
            case 26: {
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = newChangeKey_.toBuilder();
              }
              newChangeKey_ = input.readMessage(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(newChangeKey_);
                newChangeKey_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              allowsUnsignedKeychange_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              allowsPublicLookup_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_ULNChangeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.ULNChangeReq.class, org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<ULNChangeReq> PARSER =
        new com.google.protobuf.AbstractParser<ULNChangeReq>() {
      public ULNChangeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ULNChangeReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ULNChangeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEWBLOB_FIELD_NUMBER = 2;
    private java.lang.Object newBlob_;
    /**
     * <code>optional string newBlob = 2;</code>
     */
    public boolean hasNewBlob() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string newBlob = 2;</code>
     */
    public java.lang.String getNewBlob() {
      java.lang.Object ref = newBlob_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          newBlob_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string newBlob = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNewBlobBytes() {
      java.lang.Object ref = newBlob_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        newBlob_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEWCHANGEKEY_FIELD_NUMBER = 3;
    private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto newChangeKey_;
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    public boolean hasNewChangeKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getNewChangeKey() {
      return newChangeKey_;
    }
    /**
     * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getNewChangeKeyOrBuilder() {
      return newChangeKey_;
    }

    public static final int ALLOWSUNSIGNEDKEYCHANGE_FIELD_NUMBER = 4;
    private boolean allowsUnsignedKeychange_;
    /**
     * <code>optional bool allowsUnsignedKeychange = 4;</code>
     */
    public boolean hasAllowsUnsignedKeychange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool allowsUnsignedKeychange = 4;</code>
     */
    public boolean getAllowsUnsignedKeychange() {
      return allowsUnsignedKeychange_;
    }

    public static final int ALLOWSPUBLICLOOKUP_FIELD_NUMBER = 5;
    private boolean allowsPublicLookup_;
    /**
     * <code>optional bool allowsPublicLookup = 5;</code>
     */
    public boolean hasAllowsPublicLookup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool allowsPublicLookup = 5;</code>
     */
    public boolean getAllowsPublicLookup() {
      return allowsPublicLookup_;
    }

    private void initFields() {
      name_ = "";
      newBlob_ = "";
      newChangeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
      allowsUnsignedKeychange_ = false;
      allowsPublicLookup_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasNewChangeKey()) {
        if (!getNewChangeKey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNewBlobBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, newChangeKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, allowsUnsignedKeychange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, allowsPublicLookup_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNewBlobBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, newChangeKey_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, allowsUnsignedKeychange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, allowsPublicLookup_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.ULNChangeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.ULNChangeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.ULNChangeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.ULNChangeReq)
        org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_ULNChangeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.ULNChangeReq.class, org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.ULNChangeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewChangeKeyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        newBlob_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (newChangeKeyBuilder_ == null) {
          newChangeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
        } else {
          newChangeKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        allowsUnsignedKeychange_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        allowsPublicLookup_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.ULNChangeReq getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.ULNChangeReq build() {
        org.coniks.coniks_common.C2SProtos.ULNChangeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.ULNChangeReq buildPartial() {
        org.coniks.coniks_common.C2SProtos.ULNChangeReq result = new org.coniks.coniks_common.C2SProtos.ULNChangeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.newBlob_ = newBlob_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (newChangeKeyBuilder_ == null) {
          result.newChangeKey_ = newChangeKey_;
        } else {
          result.newChangeKey_ = newChangeKeyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.allowsUnsignedKeychange_ = allowsUnsignedKeychange_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.allowsPublicLookup_ = allowsPublicLookup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.ULNChangeReq) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.ULNChangeReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.ULNChangeReq other) {
        if (other == org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasNewBlob()) {
          bitField0_ |= 0x00000002;
          newBlob_ = other.newBlob_;
          onChanged();
        }
        if (other.hasNewChangeKey()) {
          mergeNewChangeKey(other.getNewChangeKey());
        }
        if (other.hasAllowsUnsignedKeychange()) {
          setAllowsUnsignedKeychange(other.getAllowsUnsignedKeychange());
        }
        if (other.hasAllowsPublicLookup()) {
          setAllowsPublicLookup(other.getAllowsPublicLookup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasNewChangeKey()) {
          if (!getNewChangeKey().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.ULNChangeReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.ULNChangeReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object newBlob_ = "";
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public boolean hasNewBlob() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public java.lang.String getNewBlob() {
        java.lang.Object ref = newBlob_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            newBlob_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNewBlobBytes() {
        java.lang.Object ref = newBlob_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          newBlob_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public Builder setNewBlob(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        newBlob_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public Builder clearNewBlob() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newBlob_ = getDefaultInstance().getNewBlob();
        onChanged();
        return this;
      }
      /**
       * <code>optional string newBlob = 2;</code>
       */
      public Builder setNewBlobBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        newBlob_ = value;
        onChanged();
        return this;
      }

      private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto newChangeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> newChangeKeyBuilder_;
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public boolean hasNewChangeKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getNewChangeKey() {
        if (newChangeKeyBuilder_ == null) {
          return newChangeKey_;
        } else {
          return newChangeKeyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public Builder setNewChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
        if (newChangeKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          newChangeKey_ = value;
          onChanged();
        } else {
          newChangeKeyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public Builder setNewChangeKey(
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder builderForValue) {
        if (newChangeKeyBuilder_ == null) {
          newChangeKey_ = builderForValue.build();
          onChanged();
        } else {
          newChangeKeyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public Builder mergeNewChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
        if (newChangeKeyBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              newChangeKey_ != org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance()) {
            newChangeKey_ =
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.newBuilder(newChangeKey_).mergeFrom(value).buildPartial();
          } else {
            newChangeKey_ = value;
          }
          onChanged();
        } else {
          newChangeKeyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public Builder clearNewChangeKey() {
        if (newChangeKeyBuilder_ == null) {
          newChangeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
          onChanged();
        } else {
          newChangeKeyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder getNewChangeKeyBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getNewChangeKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getNewChangeKeyOrBuilder() {
        if (newChangeKeyBuilder_ != null) {
          return newChangeKeyBuilder_.getMessageOrBuilder();
        } else {
          return newChangeKey_;
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto newChangeKey = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> 
          getNewChangeKeyFieldBuilder() {
        if (newChangeKeyBuilder_ == null) {
          newChangeKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder>(
                  getNewChangeKey(),
                  getParentForChildren(),
                  isClean());
          newChangeKey_ = null;
        }
        return newChangeKeyBuilder_;
      }

      private boolean allowsUnsignedKeychange_ ;
      /**
       * <code>optional bool allowsUnsignedKeychange = 4;</code>
       */
      public boolean hasAllowsUnsignedKeychange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool allowsUnsignedKeychange = 4;</code>
       */
      public boolean getAllowsUnsignedKeychange() {
        return allowsUnsignedKeychange_;
      }
      /**
       * <code>optional bool allowsUnsignedKeychange = 4;</code>
       */
      public Builder setAllowsUnsignedKeychange(boolean value) {
        bitField0_ |= 0x00000008;
        allowsUnsignedKeychange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allowsUnsignedKeychange = 4;</code>
       */
      public Builder clearAllowsUnsignedKeychange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        allowsUnsignedKeychange_ = false;
        onChanged();
        return this;
      }

      private boolean allowsPublicLookup_ ;
      /**
       * <code>optional bool allowsPublicLookup = 5;</code>
       */
      public boolean hasAllowsPublicLookup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool allowsPublicLookup = 5;</code>
       */
      public boolean getAllowsPublicLookup() {
        return allowsPublicLookup_;
      }
      /**
       * <code>optional bool allowsPublicLookup = 5;</code>
       */
      public Builder setAllowsPublicLookup(boolean value) {
        bitField0_ |= 0x00000010;
        allowsPublicLookup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allowsPublicLookup = 5;</code>
       */
      public Builder clearAllowsPublicLookup() {
        bitField0_ = (bitField0_ & ~0x00000010);
        allowsPublicLookup_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.ULNChangeReq)
    }

    static {
      defaultInstance = new ULNChangeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.ULNChangeReq)
  }

  public interface SignedULNChangeReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.SignedULNChangeReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    boolean hasReq();
    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    org.coniks.coniks_common.C2SProtos.ULNChangeReq getReq();
    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder getReqOrBuilder();

    /**
     * <code>optional bytes sig = 2;</code>
     */
    boolean hasSig();
    /**
     * <code>optional bytes sig = 2;</code>
     */
    com.google.protobuf.ByteString getSig();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.SignedULNChangeReq}
   */
  public static final class SignedULNChangeReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.SignedULNChangeReq)
      SignedULNChangeReqOrBuilder {
    // Use SignedULNChangeReq.newBuilder() to construct.
    private SignedULNChangeReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SignedULNChangeReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SignedULNChangeReq defaultInstance;
    public static SignedULNChangeReq getDefaultInstance() {
      return defaultInstance;
    }

    public SignedULNChangeReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SignedULNChangeReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = req_.toBuilder();
              }
              req_ = input.readMessage(org.coniks.coniks_common.C2SProtos.ULNChangeReq.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(req_);
                req_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              sig_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_SignedULNChangeReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.class, org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.Builder.class);
    }

    public static com.google.protobuf.Parser<SignedULNChangeReq> PARSER =
        new com.google.protobuf.AbstractParser<SignedULNChangeReq>() {
      public SignedULNChangeReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedULNChangeReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SignedULNChangeReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int REQ_FIELD_NUMBER = 1;
    private org.coniks.coniks_common.C2SProtos.ULNChangeReq req_;
    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    public boolean hasReq() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    public org.coniks.coniks_common.C2SProtos.ULNChangeReq getReq() {
      return req_;
    }
    /**
     * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
     *
     * <pre>
     * This should be generated / verified
     * by parsing / building the ULNChangeReq
     * Then converting to a byte[]
     * Then signing/verifying
     * </pre>
     */
    public org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder getReqOrBuilder() {
      return req_;
    }

    public static final int SIG_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString sig_;
    /**
     * <code>optional bytes sig = 2;</code>
     */
    public boolean hasSig() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes sig = 2;</code>
     */
    public com.google.protobuf.ByteString getSig() {
      return sig_;
    }

    private void initFields() {
      req_ = org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance();
      sig_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasReq()) {
        if (!getReq().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, req_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, sig_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, req_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, sig_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.SignedULNChangeReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.SignedULNChangeReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.SignedULNChangeReq)
        org.coniks.coniks_common.C2SProtos.SignedULNChangeReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_SignedULNChangeReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.class, org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReqFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (reqBuilder_ == null) {
          req_ = org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance();
        } else {
          reqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        sig_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.SignedULNChangeReq getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.SignedULNChangeReq build() {
        org.coniks.coniks_common.C2SProtos.SignedULNChangeReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.SignedULNChangeReq buildPartial() {
        org.coniks.coniks_common.C2SProtos.SignedULNChangeReq result = new org.coniks.coniks_common.C2SProtos.SignedULNChangeReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (reqBuilder_ == null) {
          result.req_ = req_;
        } else {
          result.req_ = reqBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sig_ = sig_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.SignedULNChangeReq) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.SignedULNChangeReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.SignedULNChangeReq other) {
        if (other == org.coniks.coniks_common.C2SProtos.SignedULNChangeReq.getDefaultInstance()) return this;
        if (other.hasReq()) {
          mergeReq(other.getReq());
        }
        if (other.hasSig()) {
          setSig(other.getSig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasReq()) {
          if (!getReq().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.SignedULNChangeReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.SignedULNChangeReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.coniks.coniks_common.C2SProtos.ULNChangeReq req_ = org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.ULNChangeReq, org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder, org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder> reqBuilder_;
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public boolean hasReq() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.ULNChangeReq getReq() {
        if (reqBuilder_ == null) {
          return req_;
        } else {
          return reqBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public Builder setReq(org.coniks.coniks_common.C2SProtos.ULNChangeReq value) {
        if (reqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          req_ = value;
          onChanged();
        } else {
          reqBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public Builder setReq(
          org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder builderForValue) {
        if (reqBuilder_ == null) {
          req_ = builderForValue.build();
          onChanged();
        } else {
          reqBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public Builder mergeReq(org.coniks.coniks_common.C2SProtos.ULNChangeReq value) {
        if (reqBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              req_ != org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance()) {
            req_ =
              org.coniks.coniks_common.C2SProtos.ULNChangeReq.newBuilder(req_).mergeFrom(value).buildPartial();
          } else {
            req_ = value;
          }
          onChanged();
        } else {
          reqBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public Builder clearReq() {
        if (reqBuilder_ == null) {
          req_ = org.coniks.coniks_common.C2SProtos.ULNChangeReq.getDefaultInstance();
          onChanged();
        } else {
          reqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder getReqBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getReqFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder getReqOrBuilder() {
        if (reqBuilder_ != null) {
          return reqBuilder_.getMessageOrBuilder();
        } else {
          return req_;
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.ULNChangeReq req = 1;</code>
       *
       * <pre>
       * This should be generated / verified
       * by parsing / building the ULNChangeReq
       * Then converting to a byte[]
       * Then signing/verifying
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.ULNChangeReq, org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder, org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder> 
          getReqFieldBuilder() {
        if (reqBuilder_ == null) {
          reqBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.coniks.coniks_common.C2SProtos.ULNChangeReq, org.coniks.coniks_common.C2SProtos.ULNChangeReq.Builder, org.coniks.coniks_common.C2SProtos.ULNChangeReqOrBuilder>(
                  getReq(),
                  getParentForChildren(),
                  isClean());
          req_ = null;
        }
        return reqBuilder_;
      }

      private com.google.protobuf.ByteString sig_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes sig = 2;</code>
       */
      public boolean hasSig() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes sig = 2;</code>
       */
      public com.google.protobuf.ByteString getSig() {
        return sig_;
      }
      /**
       * <code>optional bytes sig = 2;</code>
       */
      public Builder setSig(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sig_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes sig = 2;</code>
       */
      public Builder clearSig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sig_ = getDefaultInstance().getSig();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.SignedULNChangeReq)
    }

    static {
      defaultInstance = new SignedULNChangeReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.SignedULNChangeReq)
  }

  public interface CommitmentReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.CommitmentReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
     *
     * <pre>
     * server checks that type, and epoch are specified
     * </pre>
     */
    boolean hasType();
    /**
     * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
     *
     * <pre>
     * server checks that type, and epoch are specified
     * </pre>
     */
    org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType getType();

    /**
     * <code>optional uint64 epoch = 2;</code>
     *
     * <pre>
     * epoch  should &lt;= than current epoch
     * </pre>
     */
    boolean hasEpoch();
    /**
     * <code>optional uint64 epoch = 2;</code>
     *
     * <pre>
     * epoch  should &lt;= than current epoch
     * </pre>
     */
    long getEpoch();

    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    boolean hasProvider();
    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    java.lang.String getProvider();
    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    com.google.protobuf.ByteString
        getProviderBytes();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.CommitmentReq}
   */
  public static final class CommitmentReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.CommitmentReq)
      CommitmentReqOrBuilder {
    // Use CommitmentReq.newBuilder() to construct.
    private CommitmentReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CommitmentReq(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CommitmentReq defaultInstance;
    public static CommitmentReq getDefaultInstance() {
      return defaultInstance;
    }

    public CommitmentReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CommitmentReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType value = org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              epoch_ = input.readUInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              provider_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_CommitmentReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_CommitmentReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.CommitmentReq.class, org.coniks.coniks_common.C2SProtos.CommitmentReq.Builder.class);
    }

    public static com.google.protobuf.Parser<CommitmentReq> PARSER =
        new com.google.protobuf.AbstractParser<CommitmentReq>() {
      public CommitmentReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CommitmentReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CommitmentReq> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code org.coniks.coniks_common.CommitmentReq.CommitmentType}
     *
     * <pre>
     * ok to use same format for getComm and getWitness calls
     * </pre>
     */
    public enum CommitmentType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SELF = 0;</code>
       */
      SELF(0, 0),
      /**
       * <code>WITNESS = 1;</code>
       */
      WITNESS(1, 1),
      ;

      /**
       * <code>SELF = 0;</code>
       */
      public static final int SELF_VALUE = 0;
      /**
       * <code>WITNESS = 1;</code>
       */
      public static final int WITNESS_VALUE = 1;


      public final int getNumber() { return value; }

      public static CommitmentType valueOf(int value) {
        switch (value) {
          case 0: return SELF;
          case 1: return WITNESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CommitmentType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CommitmentType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CommitmentType>() {
              public CommitmentType findValueByNumber(int number) {
                return CommitmentType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.CommitmentReq.getDescriptor().getEnumTypes().get(0);
      }

      private static final CommitmentType[] VALUES = values();

      public static CommitmentType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private CommitmentType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.coniks.coniks_common.CommitmentReq.CommitmentType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType type_;
    /**
     * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
     *
     * <pre>
     * server checks that type, and epoch are specified
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
     *
     * <pre>
     * server checks that type, and epoch are specified
     * </pre>
     */
    public org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType getType() {
      return type_;
    }

    public static final int EPOCH_FIELD_NUMBER = 2;
    private long epoch_;
    /**
     * <code>optional uint64 epoch = 2;</code>
     *
     * <pre>
     * epoch  should &lt;= than current epoch
     * </pre>
     */
    public boolean hasEpoch() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 epoch = 2;</code>
     *
     * <pre>
     * epoch  should &lt;= than current epoch
     * </pre>
     */
    public long getEpoch() {
      return epoch_;
    }

    public static final int PROVIDER_FIELD_NUMBER = 3;
    private java.lang.Object provider_;
    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    public java.lang.String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          provider_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string provider = 3;</code>
     *
     * <pre>
     * provider MUST be specified if type is WITNESS
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType.SELF;
      epoch_ = 0L;
      provider_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, epoch_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getProviderBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, epoch_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getProviderBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.CommitmentReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.CommitmentReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.CommitmentReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.CommitmentReq)
        org.coniks.coniks_common.C2SProtos.CommitmentReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_CommitmentReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_CommitmentReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.CommitmentReq.class, org.coniks.coniks_common.C2SProtos.CommitmentReq.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.CommitmentReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType.SELF;
        bitField0_ = (bitField0_ & ~0x00000001);
        epoch_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_CommitmentReq_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.CommitmentReq getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.CommitmentReq.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.CommitmentReq build() {
        org.coniks.coniks_common.C2SProtos.CommitmentReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.CommitmentReq buildPartial() {
        org.coniks.coniks_common.C2SProtos.CommitmentReq result = new org.coniks.coniks_common.C2SProtos.CommitmentReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.epoch_ = epoch_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.provider_ = provider_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.CommitmentReq) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.CommitmentReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.CommitmentReq other) {
        if (other == org.coniks.coniks_common.C2SProtos.CommitmentReq.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasEpoch()) {
          setEpoch(other.getEpoch());
        }
        if (other.hasProvider()) {
          bitField0_ |= 0x00000004;
          provider_ = other.provider_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.CommitmentReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.CommitmentReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType type_ = org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType.SELF;
      /**
       * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
       *
       * <pre>
       * server checks that type, and epoch are specified
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
       *
       * <pre>
       * server checks that type, and epoch are specified
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType getType() {
        return type_;
      }
      /**
       * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
       *
       * <pre>
       * server checks that type, and epoch are specified
       * </pre>
       */
      public Builder setType(org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.CommitmentReq.CommitmentType type = 1;</code>
       *
       * <pre>
       * server checks that type, and epoch are specified
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.coniks.coniks_common.C2SProtos.CommitmentReq.CommitmentType.SELF;
        onChanged();
        return this;
      }

      private long epoch_ ;
      /**
       * <code>optional uint64 epoch = 2;</code>
       *
       * <pre>
       * epoch  should &lt;= than current epoch
       * </pre>
       */
      public boolean hasEpoch() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       *
       * <pre>
       * epoch  should &lt;= than current epoch
       * </pre>
       */
      public long getEpoch() {
        return epoch_;
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       *
       * <pre>
       * epoch  should &lt;= than current epoch
       * </pre>
       */
      public Builder setEpoch(long value) {
        bitField0_ |= 0x00000002;
        epoch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       *
       * <pre>
       * epoch  should &lt;= than current epoch
       * </pre>
       */
      public Builder clearEpoch() {
        bitField0_ = (bitField0_ & ~0x00000002);
        epoch_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object provider_ = "";
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public java.lang.String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            provider_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProviderBytes() {
        java.lang.Object ref = provider_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          provider_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public Builder setProvider(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        provider_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000004);
        provider_ = getDefaultInstance().getProvider();
        onChanged();
        return this;
      }
      /**
       * <code>optional string provider = 3;</code>
       *
       * <pre>
       * provider MUST be specified if type is WITNESS
       * </pre>
       */
      public Builder setProviderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        provider_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.CommitmentReq)
    }

    static {
      defaultInstance = new CommitmentReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.CommitmentReq)
  }

  public interface KeyLookupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.KeyLookup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional uint64 epoch = 2;</code>
     */
    boolean hasEpoch();
    /**
     * <code>optional uint64 epoch = 2;</code>
     */
    long getEpoch();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.KeyLookup}
   */
  public static final class KeyLookup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.KeyLookup)
      KeyLookupOrBuilder {
    // Use KeyLookup.newBuilder() to construct.
    private KeyLookup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private KeyLookup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final KeyLookup defaultInstance;
    public static KeyLookup getDefaultInstance() {
      return defaultInstance;
    }

    public KeyLookup getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private KeyLookup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              epoch_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_KeyLookup_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_KeyLookup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.KeyLookup.class, org.coniks.coniks_common.C2SProtos.KeyLookup.Builder.class);
    }

    public static com.google.protobuf.Parser<KeyLookup> PARSER =
        new com.google.protobuf.AbstractParser<KeyLookup>() {
      public KeyLookup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyLookup(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<KeyLookup> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * server checks that name and epoch are specified
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EPOCH_FIELD_NUMBER = 2;
    private long epoch_;
    /**
     * <code>optional uint64 epoch = 2;</code>
     */
    public boolean hasEpoch() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 epoch = 2;</code>
     */
    public long getEpoch() {
      return epoch_;
    }

    private void initFields() {
      name_ = "";
      epoch_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, epoch_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, epoch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.KeyLookup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.KeyLookup prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.KeyLookup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.KeyLookup)
        org.coniks.coniks_common.C2SProtos.KeyLookupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_KeyLookup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_KeyLookup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.KeyLookup.class, org.coniks.coniks_common.C2SProtos.KeyLookup.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.KeyLookup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        epoch_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_KeyLookup_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.KeyLookup getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.KeyLookup.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.KeyLookup build() {
        org.coniks.coniks_common.C2SProtos.KeyLookup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.KeyLookup buildPartial() {
        org.coniks.coniks_common.C2SProtos.KeyLookup result = new org.coniks.coniks_common.C2SProtos.KeyLookup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.epoch_ = epoch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.KeyLookup) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.KeyLookup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.KeyLookup other) {
        if (other == org.coniks.coniks_common.C2SProtos.KeyLookup.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasEpoch()) {
          setEpoch(other.getEpoch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.KeyLookup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.KeyLookup) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * server checks that name and epoch are specified
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private long epoch_ ;
      /**
       * <code>optional uint64 epoch = 2;</code>
       */
      public boolean hasEpoch() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       */
      public long getEpoch() {
        return epoch_;
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       */
      public Builder setEpoch(long value) {
        bitField0_ |= 0x00000002;
        epoch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 epoch = 2;</code>
       */
      public Builder clearEpoch() {
        bitField0_ = (bitField0_ & ~0x00000002);
        epoch_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.KeyLookup)
    }

    static {
      defaultInstance = new KeyLookup(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.KeyLookup)
  }

  public interface RegistrationRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.RegistrationResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 init_epoch = 1;</code>
     *
     * <pre>
     * client checks that initial epoch and epoch interval are specified
     * </pre>
     */
    boolean hasInitEpoch();
    /**
     * <code>optional uint64 init_epoch = 1;</code>
     *
     * <pre>
     * client checks that initial epoch and epoch interval are specified
     * </pre>
     */
    long getInitEpoch();

    /**
     * <code>optional uint32 epoch_interval = 2;</code>
     */
    boolean hasEpochInterval();
    /**
     * <code>optional uint32 epoch_interval = 2;</code>
     */
    int getEpochInterval();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.RegistrationResp}
   */
  public static final class RegistrationResp extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.RegistrationResp)
      RegistrationRespOrBuilder {
    // Use RegistrationResp.newBuilder() to construct.
    private RegistrationResp(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RegistrationResp(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RegistrationResp defaultInstance;
    public static RegistrationResp getDefaultInstance() {
      return defaultInstance;
    }

    public RegistrationResp getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RegistrationResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              initEpoch_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              epochInterval_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_RegistrationResp_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_RegistrationResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.RegistrationResp.class, org.coniks.coniks_common.C2SProtos.RegistrationResp.Builder.class);
    }

    public static com.google.protobuf.Parser<RegistrationResp> PARSER =
        new com.google.protobuf.AbstractParser<RegistrationResp>() {
      public RegistrationResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegistrationResp(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RegistrationResp> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int INIT_EPOCH_FIELD_NUMBER = 1;
    private long initEpoch_;
    /**
     * <code>optional uint64 init_epoch = 1;</code>
     *
     * <pre>
     * client checks that initial epoch and epoch interval are specified
     * </pre>
     */
    public boolean hasInitEpoch() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 init_epoch = 1;</code>
     *
     * <pre>
     * client checks that initial epoch and epoch interval are specified
     * </pre>
     */
    public long getInitEpoch() {
      return initEpoch_;
    }

    public static final int EPOCH_INTERVAL_FIELD_NUMBER = 2;
    private int epochInterval_;
    /**
     * <code>optional uint32 epoch_interval = 2;</code>
     */
    public boolean hasEpochInterval() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 epoch_interval = 2;</code>
     */
    public int getEpochInterval() {
      return epochInterval_;
    }

    private void initFields() {
      initEpoch_ = 0L;
      epochInterval_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, initEpoch_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, epochInterval_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, initEpoch_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, epochInterval_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.RegistrationResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.RegistrationResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.RegistrationResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.RegistrationResp)
        org.coniks.coniks_common.C2SProtos.RegistrationRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_RegistrationResp_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_RegistrationResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.RegistrationResp.class, org.coniks.coniks_common.C2SProtos.RegistrationResp.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.RegistrationResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        initEpoch_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        epochInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_RegistrationResp_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.RegistrationResp getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.RegistrationResp.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.RegistrationResp build() {
        org.coniks.coniks_common.C2SProtos.RegistrationResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.RegistrationResp buildPartial() {
        org.coniks.coniks_common.C2SProtos.RegistrationResp result = new org.coniks.coniks_common.C2SProtos.RegistrationResp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.initEpoch_ = initEpoch_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.epochInterval_ = epochInterval_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.RegistrationResp) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.RegistrationResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.RegistrationResp other) {
        if (other == org.coniks.coniks_common.C2SProtos.RegistrationResp.getDefaultInstance()) return this;
        if (other.hasInitEpoch()) {
          setInitEpoch(other.getInitEpoch());
        }
        if (other.hasEpochInterval()) {
          setEpochInterval(other.getEpochInterval());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.RegistrationResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.RegistrationResp) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long initEpoch_ ;
      /**
       * <code>optional uint64 init_epoch = 1;</code>
       *
       * <pre>
       * client checks that initial epoch and epoch interval are specified
       * </pre>
       */
      public boolean hasInitEpoch() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 init_epoch = 1;</code>
       *
       * <pre>
       * client checks that initial epoch and epoch interval are specified
       * </pre>
       */
      public long getInitEpoch() {
        return initEpoch_;
      }
      /**
       * <code>optional uint64 init_epoch = 1;</code>
       *
       * <pre>
       * client checks that initial epoch and epoch interval are specified
       * </pre>
       */
      public Builder setInitEpoch(long value) {
        bitField0_ |= 0x00000001;
        initEpoch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 init_epoch = 1;</code>
       *
       * <pre>
       * client checks that initial epoch and epoch interval are specified
       * </pre>
       */
      public Builder clearInitEpoch() {
        bitField0_ = (bitField0_ & ~0x00000001);
        initEpoch_ = 0L;
        onChanged();
        return this;
      }

      private int epochInterval_ ;
      /**
       * <code>optional uint32 epoch_interval = 2;</code>
       */
      public boolean hasEpochInterval() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 epoch_interval = 2;</code>
       */
      public int getEpochInterval() {
        return epochInterval_;
      }
      /**
       * <code>optional uint32 epoch_interval = 2;</code>
       */
      public Builder setEpochInterval(int value) {
        bitField0_ |= 0x00000002;
        epochInterval_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 epoch_interval = 2;</code>
       */
      public Builder clearEpochInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        epochInterval_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.RegistrationResp)
    }

    static {
      defaultInstance = new RegistrationResp(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.RegistrationResp)
  }

  public interface AuthPathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.AuthPath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    boolean hasLeaf();
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode getLeaf();
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder getLeafOrBuilder();

    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> 
        getInteriorList();
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode getInterior(int index);
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    int getInteriorCount();
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    java.util.List<? extends org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder> 
        getInteriorOrBuilderList();
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder getInteriorOrBuilder(
        int index);

    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    boolean hasRoot();
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.RootNode getRoot();
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder getRootOrBuilder();
  }
  /**
   * Protobuf type {@code org.coniks.coniks_common.AuthPath}
   */
  public static final class AuthPath extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.AuthPath)
      AuthPathOrBuilder {
    // Use AuthPath.newBuilder() to construct.
    private AuthPath(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AuthPath(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AuthPath defaultInstance;
    public static AuthPath getDefaultInstance() {
      return defaultInstance;
    }

    public AuthPath getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AuthPath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = leaf_.toBuilder();
              }
              leaf_ = input.readMessage(org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leaf_);
                leaf_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                interior_ = new java.util.ArrayList<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode>();
                mutable_bitField0_ |= 0x00000002;
              }
              interior_.add(input.readMessage(org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = root_.toBuilder();
              }
              root_ = input.readMessage(org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(root_);
                root_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          interior_ = java.util.Collections.unmodifiableList(interior_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.coniks.coniks_common.C2SProtos.AuthPath.class, org.coniks.coniks_common.C2SProtos.AuthPath.Builder.class);
    }

    public static com.google.protobuf.Parser<AuthPath> PARSER =
        new com.google.protobuf.AbstractParser<AuthPath>() {
      public AuthPath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AuthPath(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AuthPath> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code org.coniks.coniks_common.AuthPath.PrunedChild}
     *
     * <pre>
     * indicates if the hash is for the left or right subtree
     * </pre>
     */
    public enum PrunedChild
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>LEFT = 0;</code>
       */
      LEFT(0, 0),
      /**
       * <code>RIGHT = 1;</code>
       */
      RIGHT(1, 1),
      ;

      /**
       * <code>LEFT = 0;</code>
       */
      public static final int LEFT_VALUE = 0;
      /**
       * <code>RIGHT = 1;</code>
       */
      public static final int RIGHT_VALUE = 1;


      public final int getNumber() { return value; }

      public static PrunedChild valueOf(int value) {
        switch (value) {
          case 0: return LEFT;
          case 1: return RIGHT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PrunedChild>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PrunedChild>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PrunedChild>() {
              public PrunedChild findValueByNumber(int number) {
                return PrunedChild.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.AuthPath.getDescriptor().getEnumTypes().get(0);
      }

      private static final PrunedChild[] VALUES = values();

      public static PrunedChild valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private PrunedChild(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.coniks.coniks_common.AuthPath.PrunedChild)
    }

    public interface UserLeafNodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.AuthPath.UserLeafNode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string publickey = 2;</code>
       */
      boolean hasPublickey();
      /**
       * <code>optional string publickey = 2;</code>
       */
      java.lang.String getPublickey();
      /**
       * <code>optional string publickey = 2;</code>
       */
      com.google.protobuf.ByteString
          getPublickeyBytes();

      /**
       * <code>optional uint64 epoch_added = 3;</code>
       */
      boolean hasEpochAdded();
      /**
       * <code>optional uint64 epoch_added = 3;</code>
       */
      long getEpochAdded();

      /**
       * <code>optional uint64 epoch_changed = 4;</code>
       */
      boolean hasEpochChanged();
      /**
       * <code>optional uint64 epoch_changed = 4;</code>
       */
      long getEpochChanged();

      /**
       * <code>optional bool allows_unsigned_keychange = 5;</code>
       */
      boolean hasAllowsUnsignedKeychange();
      /**
       * <code>optional bool allows_unsigned_keychange = 5;</code>
       */
      boolean getAllowsUnsignedKeychange();

      /**
       * <code>optional bool allows_public_lookup = 6;</code>
       */
      boolean hasAllowsPublicLookup();
      /**
       * <code>optional bool allows_public_lookup = 6;</code>
       */
      boolean getAllowsPublicLookup();

      /**
       * <code>optional bytes lookup_index = 7;</code>
       */
      boolean hasLookupIndex();
      /**
       * <code>optional bytes lookup_index = 7;</code>
       */
      com.google.protobuf.ByteString getLookupIndex();

      /**
       * <code>optional uint32 intlevels = 8;</code>
       *
       * <pre>
       * needed so client can loop over interior nodes
       * </pre>
       */
      boolean hasIntlevels();
      /**
       * <code>optional uint32 intlevels = 8;</code>
       *
       * <pre>
       * needed so client can loop over interior nodes
       * </pre>
       */
      int getIntlevels();

      /**
       * <code>optional bytes signature = 9;</code>
       */
      boolean hasSignature();
      /**
       * <code>optional bytes signature = 9;</code>
       */
      com.google.protobuf.ByteString getSignature();

      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      boolean hasChangeKey();
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey();
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder();

      /**
       * <code>optional bytes lastMsg = 11;</code>
       */
      boolean hasLastMsg();
      /**
       * <code>optional bytes lastMsg = 11;</code>
       */
      com.google.protobuf.ByteString getLastMsg();
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.AuthPath.UserLeafNode}
     *
     * <pre>
     * auth path consists of user leaf node, possibly interior nodes, and root node
     * </pre>
     */
    public static final class UserLeafNode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.AuthPath.UserLeafNode)
        UserLeafNodeOrBuilder {
      // Use UserLeafNode.newBuilder() to construct.
      private UserLeafNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private UserLeafNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final UserLeafNode defaultInstance;
      public static UserLeafNode getDefaultInstance() {
        return defaultInstance;
      }

      public UserLeafNode getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private UserLeafNode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                name_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                publickey_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                epochAdded_ = input.readUInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                epochChanged_ = input.readUInt64();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                allowsUnsignedKeychange_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                allowsPublicLookup_ = input.readBool();
                break;
              }
              case 58: {
                bitField0_ |= 0x00000040;
                lookupIndex_ = input.readBytes();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                intlevels_ = input.readUInt32();
                break;
              }
              case 74: {
                bitField0_ |= 0x00000100;
                signature_ = input.readBytes();
                break;
              }
              case 82: {
                org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                  subBuilder = changeKey_.toBuilder();
                }
                changeKey_ = input.readMessage(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(changeKey_);
                  changeKey_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000200;
                break;
              }
              case 90: {
                bitField0_ |= 0x00000400;
                lastMsg_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder.class);
      }

      public static com.google.protobuf.Parser<UserLeafNode> PARSER =
          new com.google.protobuf.AbstractParser<UserLeafNode>() {
        public UserLeafNode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserLeafNode(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<UserLeafNode> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed leaf node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PUBLICKEY_FIELD_NUMBER = 2;
      private java.lang.Object publickey_;
      /**
       * <code>optional string publickey = 2;</code>
       */
      public boolean hasPublickey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string publickey = 2;</code>
       */
      public java.lang.String getPublickey() {
        java.lang.Object ref = publickey_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            publickey_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string publickey = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPublickeyBytes() {
        java.lang.Object ref = publickey_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          publickey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EPOCH_ADDED_FIELD_NUMBER = 3;
      private long epochAdded_;
      /**
       * <code>optional uint64 epoch_added = 3;</code>
       */
      public boolean hasEpochAdded() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 epoch_added = 3;</code>
       */
      public long getEpochAdded() {
        return epochAdded_;
      }

      public static final int EPOCH_CHANGED_FIELD_NUMBER = 4;
      private long epochChanged_;
      /**
       * <code>optional uint64 epoch_changed = 4;</code>
       */
      public boolean hasEpochChanged() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 epoch_changed = 4;</code>
       */
      public long getEpochChanged() {
        return epochChanged_;
      }

      public static final int ALLOWS_UNSIGNED_KEYCHANGE_FIELD_NUMBER = 5;
      private boolean allowsUnsignedKeychange_;
      /**
       * <code>optional bool allows_unsigned_keychange = 5;</code>
       */
      public boolean hasAllowsUnsignedKeychange() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool allows_unsigned_keychange = 5;</code>
       */
      public boolean getAllowsUnsignedKeychange() {
        return allowsUnsignedKeychange_;
      }

      public static final int ALLOWS_PUBLIC_LOOKUP_FIELD_NUMBER = 6;
      private boolean allowsPublicLookup_;
      /**
       * <code>optional bool allows_public_lookup = 6;</code>
       */
      public boolean hasAllowsPublicLookup() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool allows_public_lookup = 6;</code>
       */
      public boolean getAllowsPublicLookup() {
        return allowsPublicLookup_;
      }

      public static final int LOOKUP_INDEX_FIELD_NUMBER = 7;
      private com.google.protobuf.ByteString lookupIndex_;
      /**
       * <code>optional bytes lookup_index = 7;</code>
       */
      public boolean hasLookupIndex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes lookup_index = 7;</code>
       */
      public com.google.protobuf.ByteString getLookupIndex() {
        return lookupIndex_;
      }

      public static final int INTLEVELS_FIELD_NUMBER = 8;
      private int intlevels_;
      /**
       * <code>optional uint32 intlevels = 8;</code>
       *
       * <pre>
       * needed so client can loop over interior nodes
       * </pre>
       */
      public boolean hasIntlevels() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 intlevels = 8;</code>
       *
       * <pre>
       * needed so client can loop over interior nodes
       * </pre>
       */
      public int getIntlevels() {
        return intlevels_;
      }

      public static final int SIGNATURE_FIELD_NUMBER = 9;
      private com.google.protobuf.ByteString signature_;
      /**
       * <code>optional bytes signature = 9;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bytes signature = 9;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }

      public static final int CHANGEKEY_FIELD_NUMBER = 10;
      private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto changeKey_;
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      public boolean hasChangeKey() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey() {
        return changeKey_;
      }
      /**
       * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
       */
      public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder() {
        return changeKey_;
      }

      public static final int LASTMSG_FIELD_NUMBER = 11;
      private com.google.protobuf.ByteString lastMsg_;
      /**
       * <code>optional bytes lastMsg = 11;</code>
       */
      public boolean hasLastMsg() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bytes lastMsg = 11;</code>
       */
      public com.google.protobuf.ByteString getLastMsg() {
        return lastMsg_;
      }

      private void initFields() {
        name_ = "";
        publickey_ = "";
        epochAdded_ = 0L;
        epochChanged_ = 0L;
        allowsUnsignedKeychange_ = false;
        allowsPublicLookup_ = false;
        lookupIndex_ = com.google.protobuf.ByteString.EMPTY;
        intlevels_ = 0;
        signature_ = com.google.protobuf.ByteString.EMPTY;
        changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
        lastMsg_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (hasChangeKey()) {
          if (!getChangeKey().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getPublickeyBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, epochAdded_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt64(4, epochChanged_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, allowsUnsignedKeychange_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, allowsPublicLookup_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBytes(7, lookupIndex_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, intlevels_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBytes(9, signature_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeMessage(10, changeKey_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBytes(11, lastMsg_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getPublickeyBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, epochAdded_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, epochChanged_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, allowsUnsignedKeychange_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, allowsPublicLookup_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, lookupIndex_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, intlevels_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(9, signature_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, changeKey_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(11, lastMsg_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.coniks.coniks_common.AuthPath.UserLeafNode}
       *
       * <pre>
       * auth path consists of user leaf node, possibly interior nodes, and root node
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.AuthPath.UserLeafNode)
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder.class);
        }

        // Construct using org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getChangeKeyFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          publickey_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          epochAdded_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          epochChanged_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          allowsUnsignedKeychange_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          allowsPublicLookup_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          lookupIndex_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          intlevels_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          signature_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000100);
          if (changeKeyBuilder_ == null) {
            changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
          } else {
            changeKeyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          lastMsg_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode getDefaultInstanceForType() {
          return org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance();
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode build() {
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode buildPartial() {
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode result = new org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.publickey_ = publickey_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.epochAdded_ = epochAdded_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.epochChanged_ = epochChanged_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.allowsUnsignedKeychange_ = allowsUnsignedKeychange_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.allowsPublicLookup_ = allowsPublicLookup_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.lookupIndex_ = lookupIndex_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.intlevels_ = intlevels_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.signature_ = signature_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          if (changeKeyBuilder_ == null) {
            result.changeKey_ = changeKey_;
          } else {
            result.changeKey_ = changeKeyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.lastMsg_ = lastMsg_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode) {
            return mergeFrom((org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode other) {
          if (other == org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasPublickey()) {
            bitField0_ |= 0x00000002;
            publickey_ = other.publickey_;
            onChanged();
          }
          if (other.hasEpochAdded()) {
            setEpochAdded(other.getEpochAdded());
          }
          if (other.hasEpochChanged()) {
            setEpochChanged(other.getEpochChanged());
          }
          if (other.hasAllowsUnsignedKeychange()) {
            setAllowsUnsignedKeychange(other.getAllowsUnsignedKeychange());
          }
          if (other.hasAllowsPublicLookup()) {
            setAllowsPublicLookup(other.getAllowsPublicLookup());
          }
          if (other.hasLookupIndex()) {
            setLookupIndex(other.getLookupIndex());
          }
          if (other.hasIntlevels()) {
            setIntlevels(other.getIntlevels());
          }
          if (other.hasSignature()) {
            setSignature(other.getSignature());
          }
          if (other.hasChangeKey()) {
            mergeChangeKey(other.getChangeKey());
          }
          if (other.hasLastMsg()) {
            setLastMsg(other.getLastMsg());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (hasChangeKey()) {
            if (!getChangeKey().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed leaf node
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object publickey_ = "";
        /**
         * <code>optional string publickey = 2;</code>
         */
        public boolean hasPublickey() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string publickey = 2;</code>
         */
        public java.lang.String getPublickey() {
          java.lang.Object ref = publickey_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              publickey_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string publickey = 2;</code>
         */
        public com.google.protobuf.ByteString
            getPublickeyBytes() {
          java.lang.Object ref = publickey_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            publickey_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string publickey = 2;</code>
         */
        public Builder setPublickey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          publickey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string publickey = 2;</code>
         */
        public Builder clearPublickey() {
          bitField0_ = (bitField0_ & ~0x00000002);
          publickey_ = getDefaultInstance().getPublickey();
          onChanged();
          return this;
        }
        /**
         * <code>optional string publickey = 2;</code>
         */
        public Builder setPublickeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          publickey_ = value;
          onChanged();
          return this;
        }

        private long epochAdded_ ;
        /**
         * <code>optional uint64 epoch_added = 3;</code>
         */
        public boolean hasEpochAdded() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 epoch_added = 3;</code>
         */
        public long getEpochAdded() {
          return epochAdded_;
        }
        /**
         * <code>optional uint64 epoch_added = 3;</code>
         */
        public Builder setEpochAdded(long value) {
          bitField0_ |= 0x00000004;
          epochAdded_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 epoch_added = 3;</code>
         */
        public Builder clearEpochAdded() {
          bitField0_ = (bitField0_ & ~0x00000004);
          epochAdded_ = 0L;
          onChanged();
          return this;
        }

        private long epochChanged_ ;
        /**
         * <code>optional uint64 epoch_changed = 4;</code>
         */
        public boolean hasEpochChanged() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint64 epoch_changed = 4;</code>
         */
        public long getEpochChanged() {
          return epochChanged_;
        }
        /**
         * <code>optional uint64 epoch_changed = 4;</code>
         */
        public Builder setEpochChanged(long value) {
          bitField0_ |= 0x00000008;
          epochChanged_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 epoch_changed = 4;</code>
         */
        public Builder clearEpochChanged() {
          bitField0_ = (bitField0_ & ~0x00000008);
          epochChanged_ = 0L;
          onChanged();
          return this;
        }

        private boolean allowsUnsignedKeychange_ ;
        /**
         * <code>optional bool allows_unsigned_keychange = 5;</code>
         */
        public boolean hasAllowsUnsignedKeychange() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool allows_unsigned_keychange = 5;</code>
         */
        public boolean getAllowsUnsignedKeychange() {
          return allowsUnsignedKeychange_;
        }
        /**
         * <code>optional bool allows_unsigned_keychange = 5;</code>
         */
        public Builder setAllowsUnsignedKeychange(boolean value) {
          bitField0_ |= 0x00000010;
          allowsUnsignedKeychange_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool allows_unsigned_keychange = 5;</code>
         */
        public Builder clearAllowsUnsignedKeychange() {
          bitField0_ = (bitField0_ & ~0x00000010);
          allowsUnsignedKeychange_ = false;
          onChanged();
          return this;
        }

        private boolean allowsPublicLookup_ ;
        /**
         * <code>optional bool allows_public_lookup = 6;</code>
         */
        public boolean hasAllowsPublicLookup() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool allows_public_lookup = 6;</code>
         */
        public boolean getAllowsPublicLookup() {
          return allowsPublicLookup_;
        }
        /**
         * <code>optional bool allows_public_lookup = 6;</code>
         */
        public Builder setAllowsPublicLookup(boolean value) {
          bitField0_ |= 0x00000020;
          allowsPublicLookup_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool allows_public_lookup = 6;</code>
         */
        public Builder clearAllowsPublicLookup() {
          bitField0_ = (bitField0_ & ~0x00000020);
          allowsPublicLookup_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString lookupIndex_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes lookup_index = 7;</code>
         */
        public boolean hasLookupIndex() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bytes lookup_index = 7;</code>
         */
        public com.google.protobuf.ByteString getLookupIndex() {
          return lookupIndex_;
        }
        /**
         * <code>optional bytes lookup_index = 7;</code>
         */
        public Builder setLookupIndex(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          lookupIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes lookup_index = 7;</code>
         */
        public Builder clearLookupIndex() {
          bitField0_ = (bitField0_ & ~0x00000040);
          lookupIndex_ = getDefaultInstance().getLookupIndex();
          onChanged();
          return this;
        }

        private int intlevels_ ;
        /**
         * <code>optional uint32 intlevels = 8;</code>
         *
         * <pre>
         * needed so client can loop over interior nodes
         * </pre>
         */
        public boolean hasIntlevels() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 intlevels = 8;</code>
         *
         * <pre>
         * needed so client can loop over interior nodes
         * </pre>
         */
        public int getIntlevels() {
          return intlevels_;
        }
        /**
         * <code>optional uint32 intlevels = 8;</code>
         *
         * <pre>
         * needed so client can loop over interior nodes
         * </pre>
         */
        public Builder setIntlevels(int value) {
          bitField0_ |= 0x00000080;
          intlevels_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 intlevels = 8;</code>
         *
         * <pre>
         * needed so client can loop over interior nodes
         * </pre>
         */
        public Builder clearIntlevels() {
          bitField0_ = (bitField0_ & ~0x00000080);
          intlevels_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes signature = 9;</code>
         */
        public boolean hasSignature() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bytes signature = 9;</code>
         */
        public com.google.protobuf.ByteString getSignature() {
          return signature_;
        }
        /**
         * <code>optional bytes signature = 9;</code>
         */
        public Builder setSignature(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
          signature_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes signature = 9;</code>
         */
        public Builder clearSignature() {
          bitField0_ = (bitField0_ & ~0x00000100);
          signature_ = getDefaultInstance().getSignature();
          onChanged();
          return this;
        }

        private org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> changeKeyBuilder_;
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public boolean hasChangeKey() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto getChangeKey() {
          if (changeKeyBuilder_ == null) {
            return changeKey_;
          } else {
            return changeKeyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public Builder setChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
          if (changeKeyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            changeKey_ = value;
            onChanged();
          } else {
            changeKeyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public Builder setChangeKey(
            org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder builderForValue) {
          if (changeKeyBuilder_ == null) {
            changeKey_ = builderForValue.build();
            onChanged();
          } else {
            changeKeyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public Builder mergeChangeKey(org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto value) {
          if (changeKeyBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200) &&
                changeKey_ != org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance()) {
              changeKey_ =
                org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.newBuilder(changeKey_).mergeFrom(value).buildPartial();
            } else {
              changeKey_ = value;
            }
            onChanged();
          } else {
            changeKeyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public Builder clearChangeKey() {
          if (changeKeyBuilder_ == null) {
            changeKey_ = org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.getDefaultInstance();
            onChanged();
          } else {
            changeKeyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder getChangeKeyBuilder() {
          bitField0_ |= 0x00000200;
          onChanged();
          return getChangeKeyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        public org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder getChangeKeyOrBuilder() {
          if (changeKeyBuilder_ != null) {
            return changeKeyBuilder_.getMessageOrBuilder();
          } else {
            return changeKey_;
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.DSAPublicKeyProto changeKey = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder> 
            getChangeKeyFieldBuilder() {
          if (changeKeyBuilder_ == null) {
            changeKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProto.Builder, org.coniks.coniks_common.C2SProtos.DSAPublicKeyProtoOrBuilder>(
                    getChangeKey(),
                    getParentForChildren(),
                    isClean());
            changeKey_ = null;
          }
          return changeKeyBuilder_;
        }

        private com.google.protobuf.ByteString lastMsg_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes lastMsg = 11;</code>
         */
        public boolean hasLastMsg() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional bytes lastMsg = 11;</code>
         */
        public com.google.protobuf.ByteString getLastMsg() {
          return lastMsg_;
        }
        /**
         * <code>optional bytes lastMsg = 11;</code>
         */
        public Builder setLastMsg(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
          lastMsg_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes lastMsg = 11;</code>
         */
        public Builder clearLastMsg() {
          bitField0_ = (bitField0_ & ~0x00000400);
          lastMsg_ = getDefaultInstance().getLastMsg();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.AuthPath.UserLeafNode)
      }

      static {
        defaultInstance = new UserLeafNode(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.AuthPath.UserLeafNode)
    }

    public interface InteriorNodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.AuthPath.InteriorNode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client needs to check that both of these fields are set for each interior node
       * </pre>
       */
      boolean hasPrunedchild();
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client needs to check that both of these fields are set for each interior node
       * </pre>
       */
      org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild();

      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      boolean hasSubtree();
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      org.coniks.coniks_common.UtilProtos.Hash getSubtree();
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder();
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.AuthPath.InteriorNode}
     */
    public static final class InteriorNode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.AuthPath.InteriorNode)
        InteriorNodeOrBuilder {
      // Use InteriorNode.newBuilder() to construct.
      private InteriorNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private InteriorNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final InteriorNode defaultInstance;
      public static InteriorNode getDefaultInstance() {
        return defaultInstance;
      }

      public InteriorNode getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private InteriorNode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild value = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  prunedchild_ = value;
                }
                break;
              }
              case 18: {
                org.coniks.coniks_common.UtilProtos.Hash.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = subtree_.toBuilder();
                }
                subtree_ = input.readMessage(org.coniks.coniks_common.UtilProtos.Hash.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(subtree_);
                  subtree_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder.class);
      }

      public static com.google.protobuf.Parser<InteriorNode> PARSER =
          new com.google.protobuf.AbstractParser<InteriorNode>() {
        public InteriorNode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InteriorNode(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<InteriorNode> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PRUNEDCHILD_FIELD_NUMBER = 1;
      private org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild prunedchild_;
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client needs to check that both of these fields are set for each interior node
       * </pre>
       */
      public boolean hasPrunedchild() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client needs to check that both of these fields are set for each interior node
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild() {
        return prunedchild_;
      }

      public static final int SUBTREE_FIELD_NUMBER = 2;
      private org.coniks.coniks_common.UtilProtos.Hash subtree_;
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public boolean hasSubtree() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public org.coniks.coniks_common.UtilProtos.Hash getSubtree() {
        return subtree_;
      }
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder() {
        return subtree_;
      }

      private void initFields() {
        prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
        subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, prunedchild_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, subtree_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, prunedchild_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, subtree_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.coniks.coniks_common.AuthPath.InteriorNode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.AuthPath.InteriorNode)
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder.class);
        }

        // Construct using org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSubtreeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (subtreeBuilder_ == null) {
            subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
          } else {
            subtreeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode getDefaultInstanceForType() {
          return org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.getDefaultInstance();
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode build() {
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode buildPartial() {
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode result = new org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.prunedchild_ = prunedchild_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (subtreeBuilder_ == null) {
            result.subtree_ = subtree_;
          } else {
            result.subtree_ = subtreeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode) {
            return mergeFrom((org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode other) {
          if (other == org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.getDefaultInstance()) return this;
          if (other.hasPrunedchild()) {
            setPrunedchild(other.getPrunedchild());
          }
          if (other.hasSubtree()) {
            mergeSubtree(other.getSubtree());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client needs to check that both of these fields are set for each interior node
         * </pre>
         */
        public boolean hasPrunedchild() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client needs to check that both of these fields are set for each interior node
         * </pre>
         */
        public org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild() {
          return prunedchild_;
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client needs to check that both of these fields are set for each interior node
         * </pre>
         */
        public Builder setPrunedchild(org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          prunedchild_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client needs to check that both of these fields are set for each interior node
         * </pre>
         */
        public Builder clearPrunedchild() {
          bitField0_ = (bitField0_ & ~0x00000001);
          prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
          onChanged();
          return this;
        }

        private org.coniks.coniks_common.UtilProtos.Hash subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder> subtreeBuilder_;
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public boolean hasSubtree() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.Hash getSubtree() {
          if (subtreeBuilder_ == null) {
            return subtree_;
          } else {
            return subtreeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder setSubtree(org.coniks.coniks_common.UtilProtos.Hash value) {
          if (subtreeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            subtree_ = value;
            onChanged();
          } else {
            subtreeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder setSubtree(
            org.coniks.coniks_common.UtilProtos.Hash.Builder builderForValue) {
          if (subtreeBuilder_ == null) {
            subtree_ = builderForValue.build();
            onChanged();
          } else {
            subtreeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder mergeSubtree(org.coniks.coniks_common.UtilProtos.Hash value) {
          if (subtreeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                subtree_ != org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance()) {
              subtree_ =
                org.coniks.coniks_common.UtilProtos.Hash.newBuilder(subtree_).mergeFrom(value).buildPartial();
            } else {
              subtree_ = value;
            }
            onChanged();
          } else {
            subtreeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder clearSubtree() {
          if (subtreeBuilder_ == null) {
            subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
            onChanged();
          } else {
            subtreeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.Hash.Builder getSubtreeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getSubtreeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder() {
          if (subtreeBuilder_ != null) {
            return subtreeBuilder_.getMessageOrBuilder();
          } else {
            return subtree_;
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder> 
            getSubtreeFieldBuilder() {
          if (subtreeBuilder_ == null) {
            subtreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder>(
                    getSubtree(),
                    getParentForChildren(),
                    isClean());
            subtree_ = null;
          }
          return subtreeBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.AuthPath.InteriorNode)
      }

      static {
        defaultInstance = new InteriorNode(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.AuthPath.InteriorNode)
    }

    public interface RootNodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.coniks.coniks_common.AuthPath.RootNode)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed root node
       * </pre>
       */
      boolean hasPrunedchild();
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed root node
       * </pre>
       */
      org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild();

      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      boolean hasSubtree();
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      org.coniks.coniks_common.UtilProtos.Hash getSubtree();
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder();
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.AuthPath.RootNode}
     */
    public static final class RootNode extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org.coniks.coniks_common.AuthPath.RootNode)
        RootNodeOrBuilder {
      // Use RootNode.newBuilder() to construct.
      private RootNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private RootNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final RootNode defaultInstance;
      public static RootNode getDefaultInstance() {
        return defaultInstance;
      }

      public RootNode getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private RootNode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild value = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  prunedchild_ = value;
                }
                break;
              }
              case 18: {
                org.coniks.coniks_common.UtilProtos.Hash.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = subtree_.toBuilder();
                }
                subtree_ = input.readMessage(org.coniks.coniks_common.UtilProtos.Hash.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(subtree_);
                  subtree_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_RootNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder.class);
      }

      public static com.google.protobuf.Parser<RootNode> PARSER =
          new com.google.protobuf.AbstractParser<RootNode>() {
        public RootNode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RootNode(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<RootNode> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PRUNEDCHILD_FIELD_NUMBER = 1;
      private org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild prunedchild_;
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed root node
       * </pre>
       */
      public boolean hasPrunedchild() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
       *
       * <pre>
       * client does not assume server has not sent malformed root node
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild() {
        return prunedchild_;
      }

      public static final int SUBTREE_FIELD_NUMBER = 2;
      private org.coniks.coniks_common.UtilProtos.Hash subtree_;
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public boolean hasSubtree() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public org.coniks.coniks_common.UtilProtos.Hash getSubtree() {
        return subtree_;
      }
      /**
       * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
       */
      public org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder() {
        return subtree_;
      }

      private void initFields() {
        prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
        subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, prunedchild_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, subtree_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, prunedchild_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, subtree_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.AuthPath.RootNode prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.coniks.coniks_common.AuthPath.RootNode}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.AuthPath.RootNode)
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_RootNode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.class, org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder.class);
        }

        // Construct using org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getSubtreeFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (subtreeBuilder_ == null) {
            subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
          } else {
            subtreeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode getDefaultInstanceForType() {
          return org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance();
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode build() {
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode buildPartial() {
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode result = new org.coniks.coniks_common.C2SProtos.AuthPath.RootNode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.prunedchild_ = prunedchild_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (subtreeBuilder_ == null) {
            result.subtree_ = subtree_;
          } else {
            result.subtree_ = subtreeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.coniks.coniks_common.C2SProtos.AuthPath.RootNode) {
            return mergeFrom((org.coniks.coniks_common.C2SProtos.AuthPath.RootNode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.AuthPath.RootNode other) {
          if (other == org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance()) return this;
          if (other.hasPrunedchild()) {
            setPrunedchild(other.getPrunedchild());
          }
          if (other.hasSubtree()) {
            mergeSubtree(other.getSubtree());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.coniks.coniks_common.C2SProtos.AuthPath.RootNode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed root node
         * </pre>
         */
        public boolean hasPrunedchild() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed root node
         * </pre>
         */
        public org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild getPrunedchild() {
          return prunedchild_;
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed root node
         * </pre>
         */
        public Builder setPrunedchild(org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          prunedchild_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.AuthPath.PrunedChild prunedchild = 1;</code>
         *
         * <pre>
         * client does not assume server has not sent malformed root node
         * </pre>
         */
        public Builder clearPrunedchild() {
          bitField0_ = (bitField0_ & ~0x00000001);
          prunedchild_ = org.coniks.coniks_common.C2SProtos.AuthPath.PrunedChild.LEFT;
          onChanged();
          return this;
        }

        private org.coniks.coniks_common.UtilProtos.Hash subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder> subtreeBuilder_;
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public boolean hasSubtree() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.Hash getSubtree() {
          if (subtreeBuilder_ == null) {
            return subtree_;
          } else {
            return subtreeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder setSubtree(org.coniks.coniks_common.UtilProtos.Hash value) {
          if (subtreeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            subtree_ = value;
            onChanged();
          } else {
            subtreeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder setSubtree(
            org.coniks.coniks_common.UtilProtos.Hash.Builder builderForValue) {
          if (subtreeBuilder_ == null) {
            subtree_ = builderForValue.build();
            onChanged();
          } else {
            subtreeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder mergeSubtree(org.coniks.coniks_common.UtilProtos.Hash value) {
          if (subtreeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                subtree_ != org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance()) {
              subtree_ =
                org.coniks.coniks_common.UtilProtos.Hash.newBuilder(subtree_).mergeFrom(value).buildPartial();
            } else {
              subtree_ = value;
            }
            onChanged();
          } else {
            subtreeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public Builder clearSubtree() {
          if (subtreeBuilder_ == null) {
            subtree_ = org.coniks.coniks_common.UtilProtos.Hash.getDefaultInstance();
            onChanged();
          } else {
            subtreeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.Hash.Builder getSubtreeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getSubtreeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        public org.coniks.coniks_common.UtilProtos.HashOrBuilder getSubtreeOrBuilder() {
          if (subtreeBuilder_ != null) {
            return subtreeBuilder_.getMessageOrBuilder();
          } else {
            return subtree_;
          }
        }
        /**
         * <code>optional .org.coniks.coniks_common.Hash subtree = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder> 
            getSubtreeFieldBuilder() {
          if (subtreeBuilder_ == null) {
            subtreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                org.coniks.coniks_common.UtilProtos.Hash, org.coniks.coniks_common.UtilProtos.Hash.Builder, org.coniks.coniks_common.UtilProtos.HashOrBuilder>(
                    getSubtree(),
                    getParentForChildren(),
                    isClean());
            subtree_ = null;
          }
          return subtreeBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.AuthPath.RootNode)
      }

      static {
        defaultInstance = new RootNode(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.AuthPath.RootNode)
    }

    private int bitField0_;
    public static final int LEAF_FIELD_NUMBER = 1;
    private org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode leaf_;
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    public boolean hasLeaf() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode getLeaf() {
      return leaf_;
    }
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
     *
     * <pre>
     * client checks if leaf is specified
     * </pre>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder getLeafOrBuilder() {
      return leaf_;
    }

    public static final int INTERIOR_FIELD_NUMBER = 2;
    private java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> interior_;
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    public java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> getInteriorList() {
      return interior_;
    }
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    public java.util.List<? extends org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder> 
        getInteriorOrBuilderList() {
      return interior_;
    }
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    public int getInteriorCount() {
      return interior_.size();
    }
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode getInterior(int index) {
      return interior_.get(index);
    }
    /**
     * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder getInteriorOrBuilder(
        int index) {
      return interior_.get(index);
    }

    public static final int ROOT_FIELD_NUMBER = 3;
    private org.coniks.coniks_common.C2SProtos.AuthPath.RootNode root_;
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    public boolean hasRoot() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode getRoot() {
      return root_;
    }
    /**
     * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
     */
    public org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder getRootOrBuilder() {
      return root_;
    }

    private void initFields() {
      leaf_ = org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance();
      interior_ = java.util.Collections.emptyList();
      root_ = org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasLeaf()) {
        if (!getLeaf().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, leaf_);
      }
      for (int i = 0; i < interior_.size(); i++) {
        output.writeMessage(2, interior_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, root_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, leaf_);
      }
      for (int i = 0; i < interior_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, interior_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, root_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.coniks.coniks_common.C2SProtos.AuthPath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.coniks.coniks_common.C2SProtos.AuthPath prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.coniks.coniks_common.AuthPath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.coniks.coniks_common.AuthPath)
        org.coniks.coniks_common.C2SProtos.AuthPathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.coniks.coniks_common.C2SProtos.AuthPath.class, org.coniks.coniks_common.C2SProtos.AuthPath.Builder.class);
      }

      // Construct using org.coniks.coniks_common.C2SProtos.AuthPath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLeafFieldBuilder();
          getInteriorFieldBuilder();
          getRootFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (leafBuilder_ == null) {
          leaf_ = org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance();
        } else {
          leafBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (interiorBuilder_ == null) {
          interior_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          interiorBuilder_.clear();
        }
        if (rootBuilder_ == null) {
          root_ = org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance();
        } else {
          rootBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.coniks.coniks_common.C2SProtos.internal_static_org_coniks_coniks_common_AuthPath_descriptor;
      }

      public org.coniks.coniks_common.C2SProtos.AuthPath getDefaultInstanceForType() {
        return org.coniks.coniks_common.C2SProtos.AuthPath.getDefaultInstance();
      }

      public org.coniks.coniks_common.C2SProtos.AuthPath build() {
        org.coniks.coniks_common.C2SProtos.AuthPath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.coniks.coniks_common.C2SProtos.AuthPath buildPartial() {
        org.coniks.coniks_common.C2SProtos.AuthPath result = new org.coniks.coniks_common.C2SProtos.AuthPath(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (leafBuilder_ == null) {
          result.leaf_ = leaf_;
        } else {
          result.leaf_ = leafBuilder_.build();
        }
        if (interiorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            interior_ = java.util.Collections.unmodifiableList(interior_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.interior_ = interior_;
        } else {
          result.interior_ = interiorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rootBuilder_ == null) {
          result.root_ = root_;
        } else {
          result.root_ = rootBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.coniks.coniks_common.C2SProtos.AuthPath) {
          return mergeFrom((org.coniks.coniks_common.C2SProtos.AuthPath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.coniks.coniks_common.C2SProtos.AuthPath other) {
        if (other == org.coniks.coniks_common.C2SProtos.AuthPath.getDefaultInstance()) return this;
        if (other.hasLeaf()) {
          mergeLeaf(other.getLeaf());
        }
        if (interiorBuilder_ == null) {
          if (!other.interior_.isEmpty()) {
            if (interior_.isEmpty()) {
              interior_ = other.interior_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInteriorIsMutable();
              interior_.addAll(other.interior_);
            }
            onChanged();
          }
        } else {
          if (!other.interior_.isEmpty()) {
            if (interiorBuilder_.isEmpty()) {
              interiorBuilder_.dispose();
              interiorBuilder_ = null;
              interior_ = other.interior_;
              bitField0_ = (bitField0_ & ~0x00000002);
              interiorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInteriorFieldBuilder() : null;
            } else {
              interiorBuilder_.addAllMessages(other.interior_);
            }
          }
        }
        if (other.hasRoot()) {
          mergeRoot(other.getRoot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasLeaf()) {
          if (!getLeaf().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.coniks.coniks_common.C2SProtos.AuthPath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.coniks.coniks_common.C2SProtos.AuthPath) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode leaf_ = org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder> leafBuilder_;
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public boolean hasLeaf() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode getLeaf() {
        if (leafBuilder_ == null) {
          return leaf_;
        } else {
          return leafBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public Builder setLeaf(org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode value) {
        if (leafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leaf_ = value;
          onChanged();
        } else {
          leafBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public Builder setLeaf(
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder builderForValue) {
        if (leafBuilder_ == null) {
          leaf_ = builderForValue.build();
          onChanged();
        } else {
          leafBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public Builder mergeLeaf(org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode value) {
        if (leafBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              leaf_ != org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance()) {
            leaf_ =
              org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.newBuilder(leaf_).mergeFrom(value).buildPartial();
          } else {
            leaf_ = value;
          }
          onChanged();
        } else {
          leafBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public Builder clearLeaf() {
        if (leafBuilder_ == null) {
          leaf_ = org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.getDefaultInstance();
          onChanged();
        } else {
          leafBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder getLeafBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLeafFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder getLeafOrBuilder() {
        if (leafBuilder_ != null) {
          return leafBuilder_.getMessageOrBuilder();
        } else {
          return leaf_;
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.UserLeafNode leaf = 1;</code>
       *
       * <pre>
       * client checks if leaf is specified
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder> 
          getLeafFieldBuilder() {
        if (leafBuilder_ == null) {
          leafBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.UserLeafNodeOrBuilder>(
                  getLeaf(),
                  getParentForChildren(),
                  isClean());
          leaf_ = null;
        }
        return leafBuilder_;
      }

      private java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> interior_ =
        java.util.Collections.emptyList();
      private void ensureInteriorIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          interior_ = new java.util.ArrayList<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode>(interior_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder> interiorBuilder_;

      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> getInteriorList() {
        if (interiorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(interior_);
        } else {
          return interiorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public int getInteriorCount() {
        if (interiorBuilder_ == null) {
          return interior_.size();
        } else {
          return interiorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode getInterior(int index) {
        if (interiorBuilder_ == null) {
          return interior_.get(index);
        } else {
          return interiorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder setInterior(
          int index, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode value) {
        if (interiorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInteriorIsMutable();
          interior_.set(index, value);
          onChanged();
        } else {
          interiorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder setInterior(
          int index, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder builderForValue) {
        if (interiorBuilder_ == null) {
          ensureInteriorIsMutable();
          interior_.set(index, builderForValue.build());
          onChanged();
        } else {
          interiorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder addInterior(org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode value) {
        if (interiorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInteriorIsMutable();
          interior_.add(value);
          onChanged();
        } else {
          interiorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder addInterior(
          int index, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode value) {
        if (interiorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInteriorIsMutable();
          interior_.add(index, value);
          onChanged();
        } else {
          interiorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder addInterior(
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder builderForValue) {
        if (interiorBuilder_ == null) {
          ensureInteriorIsMutable();
          interior_.add(builderForValue.build());
          onChanged();
        } else {
          interiorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder addInterior(
          int index, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder builderForValue) {
        if (interiorBuilder_ == null) {
          ensureInteriorIsMutable();
          interior_.add(index, builderForValue.build());
          onChanged();
        } else {
          interiorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder addAllInterior(
          java.lang.Iterable<? extends org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode> values) {
        if (interiorBuilder_ == null) {
          ensureInteriorIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, interior_);
          onChanged();
        } else {
          interiorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder clearInterior() {
        if (interiorBuilder_ == null) {
          interior_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          interiorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public Builder removeInterior(int index) {
        if (interiorBuilder_ == null) {
          ensureInteriorIsMutable();
          interior_.remove(index);
          onChanged();
        } else {
          interiorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder getInteriorBuilder(
          int index) {
        return getInteriorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder getInteriorOrBuilder(
          int index) {
        if (interiorBuilder_ == null) {
          return interior_.get(index);  } else {
          return interiorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public java.util.List<? extends org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder> 
           getInteriorOrBuilderList() {
        if (interiorBuilder_ != null) {
          return interiorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(interior_);
        }
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder addInteriorBuilder() {
        return getInteriorFieldBuilder().addBuilder(
            org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.getDefaultInstance());
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder addInteriorBuilder(
          int index) {
        return getInteriorFieldBuilder().addBuilder(
            index, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.getDefaultInstance());
      }
      /**
       * <code>repeated .org.coniks.coniks_common.AuthPath.InteriorNode interior = 2;</code>
       */
      public java.util.List<org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder> 
           getInteriorBuilderList() {
        return getInteriorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder> 
          getInteriorFieldBuilder() {
        if (interiorBuilder_ == null) {
          interiorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.InteriorNodeOrBuilder>(
                  interior_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          interior_ = null;
        }
        return interiorBuilder_;
      }

      private org.coniks.coniks_common.C2SProtos.AuthPath.RootNode root_ = org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode, org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder> rootBuilder_;
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public boolean hasRoot() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode getRoot() {
        if (rootBuilder_ == null) {
          return root_;
        } else {
          return rootBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public Builder setRoot(org.coniks.coniks_common.C2SProtos.AuthPath.RootNode value) {
        if (rootBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          rootBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public Builder setRoot(
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder builderForValue) {
        if (rootBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          rootBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public Builder mergeRoot(org.coniks.coniks_common.C2SProtos.AuthPath.RootNode value) {
        if (rootBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              root_ != org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance()) {
            root_ =
              org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.newBuilder(root_).mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          rootBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public Builder clearRoot() {
        if (rootBuilder_ == null) {
          root_ = org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.getDefaultInstance();
          onChanged();
        } else {
          rootBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder getRootBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRootFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      public org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder getRootOrBuilder() {
        if (rootBuilder_ != null) {
          return rootBuilder_.getMessageOrBuilder();
        } else {
          return root_;
        }
      }
      /**
       * <code>optional .org.coniks.coniks_common.AuthPath.RootNode root = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.coniks.coniks_common.C2SProtos.AuthPath.RootNode, org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder> 
          getRootFieldBuilder() {
        if (rootBuilder_ == null) {
          rootBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.coniks.coniks_common.C2SProtos.AuthPath.RootNode, org.coniks.coniks_common.C2SProtos.AuthPath.RootNode.Builder, org.coniks.coniks_common.C2SProtos.AuthPath.RootNodeOrBuilder>(
                  getRoot(),
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        return rootBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.coniks.coniks_common.AuthPath)
    }

    static {
      defaultInstance = new AuthPath(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.coniks.coniks_common.AuthPath)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_DSAPublicKeyProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_Registration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_Registration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_ULNChangeReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_SignedULNChangeReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_CommitmentReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_CommitmentReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_KeyLookup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_KeyLookup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_RegistrationResp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_RegistrationResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_AuthPath_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_AuthPath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_coniks_coniks_common_AuthPath_RootNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tc2s.proto\022\030org.coniks.coniks_common\032\nu" +
      "til.proto\"?\n\021DSAPublicKeyProto\022\t\n\001p\030\001 \002(" +
      "\t\022\t\n\001q\030\002 \002(\t\022\t\n\001g\030\003 \002(\t\022\t\n\001y\030\004 \002(\t\"\253\001\n\014R" +
      "egistration\022\014\n\004name\030\001 \001(\t\022\014\n\004blob\030\002 \001(\t\022" +
      ">\n\tchangeKey\030\003 \001(\0132+.org.coniks.coniks_c" +
      "ommon.DSAPublicKeyProto\022!\n\031allows_unsign" +
      "ed_keychange\030\004 \001(\010\022\034\n\024allows_public_look" +
      "up\030\005 \001(\010\"\255\001\n\014ULNChangeReq\022\014\n\004name\030\001 \001(\t\022" +
      "\017\n\007newBlob\030\002 \001(\t\022A\n\014newChangeKey\030\003 \001(\0132+" +
      ".org.coniks.coniks_common.DSAPublicKeyPr",
      "oto\022\037\n\027allowsUnsignedKeychange\030\004 \001(\010\022\032\n\022" +
      "allowsPublicLookup\030\005 \001(\010\"V\n\022SignedULNCha" +
      "ngeReq\0223\n\003req\030\001 \001(\0132&.org.coniks.coniks_" +
      "common.ULNChangeReq\022\013\n\003sig\030\002 \001(\014\"\237\001\n\rCom" +
      "mitmentReq\022D\n\004type\030\001 \001(\01626.org.coniks.co" +
      "niks_common.CommitmentReq.CommitmentType" +
      "\022\r\n\005epoch\030\002 \001(\004\022\020\n\010provider\030\003 \001(\t\"\'\n\016Com" +
      "mitmentType\022\010\n\004SELF\020\000\022\013\n\007WITNESS\020\001\"(\n\tKe" +
      "yLookup\022\014\n\004name\030\001 \001(\t\022\r\n\005epoch\030\002 \001(\004\">\n\020" +
      "RegistrationResp\022\022\n\ninit_epoch\030\001 \001(\004\022\026\n\016",
      "epoch_interval\030\002 \001(\r\"\241\006\n\010AuthPath\022=\n\004lea" +
      "f\030\001 \001(\0132/.org.coniks.coniks_common.AuthP" +
      "ath.UserLeafNode\022A\n\010interior\030\002 \003(\0132/.org" +
      ".coniks.coniks_common.AuthPath.InteriorN" +
      "ode\0229\n\004root\030\003 \001(\0132+.org.coniks.coniks_co" +
      "mmon.AuthPath.RootNode\032\251\002\n\014UserLeafNode\022" +
      "\014\n\004name\030\001 \001(\t\022\021\n\tpublickey\030\002 \001(\t\022\023\n\013epoc" +
      "h_added\030\003 \001(\004\022\025\n\repoch_changed\030\004 \001(\004\022!\n\031" +
      "allows_unsigned_keychange\030\005 \001(\010\022\034\n\024allow" +
      "s_public_lookup\030\006 \001(\010\022\024\n\014lookup_index\030\007 ",
      "\001(\014\022\021\n\tintlevels\030\010 \001(\r\022\021\n\tsignature\030\t \001(" +
      "\014\022>\n\tchangeKey\030\n \001(\0132+.org.coniks.coniks" +
      "_common.DSAPublicKeyProto\022\017\n\007lastMsg\030\013 \001" +
      "(\014\032\204\001\n\014InteriorNode\022C\n\013prunedchild\030\001 \001(\016" +
      "2..org.coniks.coniks_common.AuthPath.Pru" +
      "nedChild\022/\n\007subtree\030\002 \001(\0132\036.org.coniks.c" +
      "oniks_common.Hash\032\200\001\n\010RootNode\022C\n\013pruned" +
      "child\030\001 \001(\0162..org.coniks.coniks_common.A" +
      "uthPath.PrunedChild\022/\n\007subtree\030\002 \001(\0132\036.o" +
      "rg.coniks.coniks_common.Hash\"\"\n\013PrunedCh",
      "ild\022\010\n\004LEFT\020\000\022\t\n\005RIGHT\020\001B%\n\030org.coniks.c" +
      "oniks_commonB\tC2SProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.coniks.coniks_common.UtilProtos.getDescriptor(),
        }, assigner);
    internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_coniks_coniks_common_DSAPublicKeyProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_DSAPublicKeyProto_descriptor,
        new java.lang.String[] { "P", "Q", "G", "Y", });
    internal_static_org_coniks_coniks_common_Registration_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_coniks_coniks_common_Registration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_Registration_descriptor,
        new java.lang.String[] { "Name", "Blob", "ChangeKey", "AllowsUnsignedKeychange", "AllowsPublicLookup", });
    internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_coniks_coniks_common_ULNChangeReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_ULNChangeReq_descriptor,
        new java.lang.String[] { "Name", "NewBlob", "NewChangeKey", "AllowsUnsignedKeychange", "AllowsPublicLookup", });
    internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_coniks_coniks_common_SignedULNChangeReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_SignedULNChangeReq_descriptor,
        new java.lang.String[] { "Req", "Sig", });
    internal_static_org_coniks_coniks_common_CommitmentReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_coniks_coniks_common_CommitmentReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_CommitmentReq_descriptor,
        new java.lang.String[] { "Type", "Epoch", "Provider", });
    internal_static_org_coniks_coniks_common_KeyLookup_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_coniks_coniks_common_KeyLookup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_KeyLookup_descriptor,
        new java.lang.String[] { "Name", "Epoch", });
    internal_static_org_coniks_coniks_common_RegistrationResp_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_coniks_coniks_common_RegistrationResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_RegistrationResp_descriptor,
        new java.lang.String[] { "InitEpoch", "EpochInterval", });
    internal_static_org_coniks_coniks_common_AuthPath_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_coniks_coniks_common_AuthPath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_AuthPath_descriptor,
        new java.lang.String[] { "Leaf", "Interior", "Root", });
    internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor =
      internal_static_org_coniks_coniks_common_AuthPath_descriptor.getNestedTypes().get(0);
    internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_AuthPath_UserLeafNode_descriptor,
        new java.lang.String[] { "Name", "Publickey", "EpochAdded", "EpochChanged", "AllowsUnsignedKeychange", "AllowsPublicLookup", "LookupIndex", "Intlevels", "Signature", "ChangeKey", "LastMsg", });
    internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor =
      internal_static_org_coniks_coniks_common_AuthPath_descriptor.getNestedTypes().get(1);
    internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_AuthPath_InteriorNode_descriptor,
        new java.lang.String[] { "Prunedchild", "Subtree", });
    internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor =
      internal_static_org_coniks_coniks_common_AuthPath_descriptor.getNestedTypes().get(2);
    internal_static_org_coniks_coniks_common_AuthPath_RootNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_coniks_coniks_common_AuthPath_RootNode_descriptor,
        new java.lang.String[] { "Prunedchild", "Subtree", });
    org.coniks.coniks_common.UtilProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
