// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Modified to only include Entry class with all dependencies from  pulled in

syntax = "proto3";

package google.keytransparency.v1;

// Entry is a signed change to a map entry.
// Entry contains a commitment to profile and a set of authorized update keys.
// Entry is placed in the verifiable map as leaf data.
message Entry {
    // index is the location of this leaf in the sparse merkle tree.
    bytes index = 3;
    // commitment is a cryptographic commitment to arbitrary data.
    bytes commitment = 6;
    // authorized_keys is the tink keyset that validates the signatures on the next entry.
    bytes authorized_keyset = 9;
    // previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
    bytes previous = 8;
    // Deprecated tag numbers, do not reuse.
    reserved 1, 2, 4, 5, 7;
}

// SignedEntry is a cryptographically signed Entry.
// SignedEntry will be stored as a trillian.Map leaf.
message SignedEntry {
    // entry contains a serialized Entry.
    bytes entry = 1;
    // signatures on entry. Must be signed by keys from both previous and
    // current revisoins. The first proves ownership of new revision key, and the
    // second proves that the correct owner is making this change.
    // The signature scheme is specified by the authorized_keys tink.Keyset.
    repeated bytes signatures = 2;
}