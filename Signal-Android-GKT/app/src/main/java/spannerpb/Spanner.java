// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage/cloudspanner/spannerpb/spanner.proto

package spannerpb;

public final class Spanner {
  private Spanner() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * State of the Tree.
   * Mirrors trillian.TreeState.
   * </pre>
   *
   * Protobuf enum {@code spannerpb.TreeState}
   */
  public enum TreeState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_TREE_STATE = 0;</code>
     */
    UNKNOWN_TREE_STATE(0),
    /**
     * <code>ACTIVE = 1;</code>
     */
    ACTIVE(1),
    /**
     * <code>FROZEN = 2;</code>
     */
    FROZEN(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_TREE_STATE = 0;</code>
     */
    public static final int UNKNOWN_TREE_STATE_VALUE = 0;
    /**
     * <code>ACTIVE = 1;</code>
     */
    public static final int ACTIVE_VALUE = 1;
    /**
     * <code>FROZEN = 2;</code>
     */
    public static final int FROZEN_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TreeState valueOf(int value) {
      return forNumber(value);
    }

    public static TreeState forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TREE_STATE;
        case 1: return ACTIVE;
        case 2: return FROZEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TreeState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TreeState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TreeState>() {
            public TreeState findValueByNumber(int number) {
              return TreeState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return spannerpb.Spanner.getDescriptor().getEnumTypes().get(0);
    }

    private static final TreeState[] VALUES = values();

    public static TreeState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TreeState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spannerpb.TreeState)
  }

  /**
   * <pre>
   * Type of the Tree.
   * Mirrors trillian.TreeType.
   * </pre>
   *
   * Protobuf enum {@code spannerpb.TreeType}
   */
  public enum TreeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>LOG = 1;</code>
     */
    LOG(1),
    /**
     * <code>MAP = 2;</code>
     */
    MAP(2),
    /**
     * <code>PREORDERED_LOG = 3;</code>
     */
    PREORDERED_LOG(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>LOG = 1;</code>
     */
    public static final int LOG_VALUE = 1;
    /**
     * <code>MAP = 2;</code>
     */
    public static final int MAP_VALUE = 2;
    /**
     * <code>PREORDERED_LOG = 3;</code>
     */
    public static final int PREORDERED_LOG_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TreeType valueOf(int value) {
      return forNumber(value);
    }

    public static TreeType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return LOG;
        case 2: return MAP;
        case 3: return PREORDERED_LOG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TreeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TreeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TreeType>() {
            public TreeType findValueByNumber(int number) {
              return TreeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return spannerpb.Spanner.getDescriptor().getEnumTypes().get(1);
    }

    private static final TreeType[] VALUES = values();

    public static TreeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TreeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spannerpb.TreeType)
  }

  /**
   * <pre>
   * Defines the preimage protection used for tree leaves / nodes.
   * Eg, RFC6962 dictates a 0x00 prefix for leaves and 0x01 for nodes.
   * Mirrors trillian.HashStrategy.
   * </pre>
   *
   * Protobuf enum {@code spannerpb.HashStrategy}
   */
  public enum HashStrategy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_HASH_STRATEGY = 0;</code>
     */
    UNKNOWN_HASH_STRATEGY(0),
    /**
     * <code>RFC_6962 = 1;</code>
     */
    RFC_6962(1),
    /**
     * <code>TEST_MAP_HASHER = 2;</code>
     */
    TEST_MAP_HASHER(2),
    /**
     * <code>OBJECT_RFC6962_SHA256 = 3;</code>
     */
    OBJECT_RFC6962_SHA256(3),
    /**
     * <code>CONIKS_SHA512_256 = 4;</code>
     */
    CONIKS_SHA512_256(4),
    /**
     * <code>CONIKS_SHA256 = 5;</code>
     */
    CONIKS_SHA256(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_HASH_STRATEGY = 0;</code>
     */
    public static final int UNKNOWN_HASH_STRATEGY_VALUE = 0;
    /**
     * <code>RFC_6962 = 1;</code>
     */
    public static final int RFC_6962_VALUE = 1;
    /**
     * <code>TEST_MAP_HASHER = 2;</code>
     */
    public static final int TEST_MAP_HASHER_VALUE = 2;
    /**
     * <code>OBJECT_RFC6962_SHA256 = 3;</code>
     */
    public static final int OBJECT_RFC6962_SHA256_VALUE = 3;
    /**
     * <code>CONIKS_SHA512_256 = 4;</code>
     */
    public static final int CONIKS_SHA512_256_VALUE = 4;
    /**
     * <code>CONIKS_SHA256 = 5;</code>
     */
    public static final int CONIKS_SHA256_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HashStrategy valueOf(int value) {
      return forNumber(value);
    }

    public static HashStrategy forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_HASH_STRATEGY;
        case 1: return RFC_6962;
        case 2: return TEST_MAP_HASHER;
        case 3: return OBJECT_RFC6962_SHA256;
        case 4: return CONIKS_SHA512_256;
        case 5: return CONIKS_SHA256;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HashStrategy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HashStrategy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HashStrategy>() {
            public HashStrategy findValueByNumber(int number) {
              return HashStrategy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return spannerpb.Spanner.getDescriptor().getEnumTypes().get(2);
    }

    private static final HashStrategy[] VALUES = values();

    public static HashStrategy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HashStrategy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spannerpb.HashStrategy)
  }

  /**
   * <pre>
   * Supported hash algorithms.
   * The numbering space is the same as for TLS, given in RFC 5246 s7.4.1.4.1. See
   * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-18.
   * Mirrors trillian.HashAlgorithm.
   * </pre>
   *
   * Protobuf enum {@code spannerpb.HashAlgorithm}
   */
  public enum HashAlgorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No hash algorithm is used.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * SHA256 is used.
     * </pre>
     *
     * <code>SHA256 = 4;</code>
     */
    SHA256(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No hash algorithm is used.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * SHA256 is used.
     * </pre>
     *
     * <code>SHA256 = 4;</code>
     */
    public static final int SHA256_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HashAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    public static HashAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 4: return SHA256;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        HashAlgorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>() {
            public HashAlgorithm findValueByNumber(int number) {
              return HashAlgorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return spannerpb.Spanner.getDescriptor().getEnumTypes().get(3);
    }

    private static final HashAlgorithm[] VALUES = values();

    public static HashAlgorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HashAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spannerpb.HashAlgorithm)
  }

  /**
   * <pre>
   * Supported signature algorithms.
   * The numbering space is the same as for TLS, given in RFC 5246 s7.4.1.4.1. See
   * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-16.
   * Mirrors trillian.SignatureAlgorithm.
   * </pre>
   *
   * Protobuf enum {@code spannerpb.SignatureAlgorithm}
   */
  public enum SignatureAlgorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Anonymous signature scheme.
     * </pre>
     *
     * <code>ANONYMOUS = 0;</code>
     */
    ANONYMOUS(0),
    /**
     * <pre>
     * RSA signature scheme.
     * </pre>
     *
     * <code>RSA = 1;</code>
     */
    RSA(1),
    /**
     * <pre>
     * ECDSA signature scheme.
     * </pre>
     *
     * <code>ECDSA = 3;</code>
     */
    ECDSA(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Anonymous signature scheme.
     * </pre>
     *
     * <code>ANONYMOUS = 0;</code>
     */
    public static final int ANONYMOUS_VALUE = 0;
    /**
     * <pre>
     * RSA signature scheme.
     * </pre>
     *
     * <code>RSA = 1;</code>
     */
    public static final int RSA_VALUE = 1;
    /**
     * <pre>
     * ECDSA signature scheme.
     * </pre>
     *
     * <code>ECDSA = 3;</code>
     */
    public static final int ECDSA_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SignatureAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    public static SignatureAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return ANONYMOUS;
        case 1: return RSA;
        case 3: return ECDSA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SignatureAlgorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>() {
            public SignatureAlgorithm findValueByNumber(int number) {
              return SignatureAlgorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return spannerpb.Spanner.getDescriptor().getEnumTypes().get(4);
    }

    private static final SignatureAlgorithm[] VALUES = values();

    public static SignatureAlgorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SignatureAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:spannerpb.SignatureAlgorithm)
  }

  public interface LogStorageConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spannerpb.LogStorageConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * num_unseq_buckets defines the length of the unsequenced time ring buffer.
     * This value must *never* be reduced for any provisioned tree.
     * This value should be &gt;= 1, and there's probably not much benefit in
     * raising it past about 4.
     * TODO(al): test what the effects of various values are here.
     * </pre>
     *
     * <code>int64 num_unseq_buckets = 1;</code>
     */
    long getNumUnseqBuckets();

    /**
     * <pre>
     * num_merkle_buckets defines the number of individual buckets below each
     * unsequenced ring bucket.
     * This value may be changed at any time (so long as you understand the
     * impact it'll have on integration performace!)
     * This value must lie in the range [1..256]
     * </pre>
     *
     * <code>int64 num_merkle_buckets = 2;</code>
     */
    long getNumMerkleBuckets();
  }
  /**
   * <pre>
   * LogStorageConfig holds settings which tune the storage implementation for
   * a given log tree.
   * </pre>
   *
   * Protobuf type {@code spannerpb.LogStorageConfig}
   */
  public  static final class LogStorageConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spannerpb.LogStorageConfig)
      LogStorageConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogStorageConfig.newBuilder() to construct.
    private LogStorageConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogStorageConfig() {
      numUnseqBuckets_ = 0L;
      numMerkleBuckets_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogStorageConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numUnseqBuckets_ = input.readInt64();
              break;
            }
            case 16: {

              numMerkleBuckets_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spannerpb.Spanner.internal_static_spannerpb_LogStorageConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spannerpb.Spanner.internal_static_spannerpb_LogStorageConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spannerpb.Spanner.LogStorageConfig.class, spannerpb.Spanner.LogStorageConfig.Builder.class);
    }

    public static final int NUM_UNSEQ_BUCKETS_FIELD_NUMBER = 1;
    private long numUnseqBuckets_;
    /**
     * <pre>
     * num_unseq_buckets defines the length of the unsequenced time ring buffer.
     * This value must *never* be reduced for any provisioned tree.
     * This value should be &gt;= 1, and there's probably not much benefit in
     * raising it past about 4.
     * TODO(al): test what the effects of various values are here.
     * </pre>
     *
     * <code>int64 num_unseq_buckets = 1;</code>
     */
    public long getNumUnseqBuckets() {
      return numUnseqBuckets_;
    }

    public static final int NUM_MERKLE_BUCKETS_FIELD_NUMBER = 2;
    private long numMerkleBuckets_;
    /**
     * <pre>
     * num_merkle_buckets defines the number of individual buckets below each
     * unsequenced ring bucket.
     * This value may be changed at any time (so long as you understand the
     * impact it'll have on integration performace!)
     * This value must lie in the range [1..256]
     * </pre>
     *
     * <code>int64 num_merkle_buckets = 2;</code>
     */
    public long getNumMerkleBuckets() {
      return numMerkleBuckets_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numUnseqBuckets_ != 0L) {
        output.writeInt64(1, numUnseqBuckets_);
      }
      if (numMerkleBuckets_ != 0L) {
        output.writeInt64(2, numMerkleBuckets_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numUnseqBuckets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, numUnseqBuckets_);
      }
      if (numMerkleBuckets_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, numMerkleBuckets_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spannerpb.Spanner.LogStorageConfig)) {
        return super.equals(obj);
      }
      spannerpb.Spanner.LogStorageConfig other = (spannerpb.Spanner.LogStorageConfig) obj;

      boolean result = true;
      result = result && (getNumUnseqBuckets()
          == other.getNumUnseqBuckets());
      result = result && (getNumMerkleBuckets()
          == other.getNumMerkleBuckets());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_UNSEQ_BUCKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumUnseqBuckets());
      hash = (37 * hash) + NUM_MERKLE_BUCKETS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumMerkleBuckets());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.LogStorageConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.LogStorageConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.LogStorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spannerpb.Spanner.LogStorageConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * LogStorageConfig holds settings which tune the storage implementation for
     * a given log tree.
     * </pre>
     *
     * Protobuf type {@code spannerpb.LogStorageConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spannerpb.LogStorageConfig)
        spannerpb.Spanner.LogStorageConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spannerpb.Spanner.internal_static_spannerpb_LogStorageConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spannerpb.Spanner.internal_static_spannerpb_LogStorageConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spannerpb.Spanner.LogStorageConfig.class, spannerpb.Spanner.LogStorageConfig.Builder.class);
      }

      // Construct using spannerpb.Spanner.LogStorageConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numUnseqBuckets_ = 0L;

        numMerkleBuckets_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spannerpb.Spanner.internal_static_spannerpb_LogStorageConfig_descriptor;
      }

      public spannerpb.Spanner.LogStorageConfig getDefaultInstanceForType() {
        return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
      }

      public spannerpb.Spanner.LogStorageConfig build() {
        spannerpb.Spanner.LogStorageConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spannerpb.Spanner.LogStorageConfig buildPartial() {
        spannerpb.Spanner.LogStorageConfig result = new spannerpb.Spanner.LogStorageConfig(this);
        result.numUnseqBuckets_ = numUnseqBuckets_;
        result.numMerkleBuckets_ = numMerkleBuckets_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spannerpb.Spanner.LogStorageConfig) {
          return mergeFrom((spannerpb.Spanner.LogStorageConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spannerpb.Spanner.LogStorageConfig other) {
        if (other == spannerpb.Spanner.LogStorageConfig.getDefaultInstance()) return this;
        if (other.getNumUnseqBuckets() != 0L) {
          setNumUnseqBuckets(other.getNumUnseqBuckets());
        }
        if (other.getNumMerkleBuckets() != 0L) {
          setNumMerkleBuckets(other.getNumMerkleBuckets());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spannerpb.Spanner.LogStorageConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spannerpb.Spanner.LogStorageConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long numUnseqBuckets_ ;
      /**
       * <pre>
       * num_unseq_buckets defines the length of the unsequenced time ring buffer.
       * This value must *never* be reduced for any provisioned tree.
       * This value should be &gt;= 1, and there's probably not much benefit in
       * raising it past about 4.
       * TODO(al): test what the effects of various values are here.
       * </pre>
       *
       * <code>int64 num_unseq_buckets = 1;</code>
       */
      public long getNumUnseqBuckets() {
        return numUnseqBuckets_;
      }
      /**
       * <pre>
       * num_unseq_buckets defines the length of the unsequenced time ring buffer.
       * This value must *never* be reduced for any provisioned tree.
       * This value should be &gt;= 1, and there's probably not much benefit in
       * raising it past about 4.
       * TODO(al): test what the effects of various values are here.
       * </pre>
       *
       * <code>int64 num_unseq_buckets = 1;</code>
       */
      public Builder setNumUnseqBuckets(long value) {
        
        numUnseqBuckets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * num_unseq_buckets defines the length of the unsequenced time ring buffer.
       * This value must *never* be reduced for any provisioned tree.
       * This value should be &gt;= 1, and there's probably not much benefit in
       * raising it past about 4.
       * TODO(al): test what the effects of various values are here.
       * </pre>
       *
       * <code>int64 num_unseq_buckets = 1;</code>
       */
      public Builder clearNumUnseqBuckets() {
        
        numUnseqBuckets_ = 0L;
        onChanged();
        return this;
      }

      private long numMerkleBuckets_ ;
      /**
       * <pre>
       * num_merkle_buckets defines the number of individual buckets below each
       * unsequenced ring bucket.
       * This value may be changed at any time (so long as you understand the
       * impact it'll have on integration performace!)
       * This value must lie in the range [1..256]
       * </pre>
       *
       * <code>int64 num_merkle_buckets = 2;</code>
       */
      public long getNumMerkleBuckets() {
        return numMerkleBuckets_;
      }
      /**
       * <pre>
       * num_merkle_buckets defines the number of individual buckets below each
       * unsequenced ring bucket.
       * This value may be changed at any time (so long as you understand the
       * impact it'll have on integration performace!)
       * This value must lie in the range [1..256]
       * </pre>
       *
       * <code>int64 num_merkle_buckets = 2;</code>
       */
      public Builder setNumMerkleBuckets(long value) {
        
        numMerkleBuckets_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * num_merkle_buckets defines the number of individual buckets below each
       * unsequenced ring bucket.
       * This value may be changed at any time (so long as you understand the
       * impact it'll have on integration performace!)
       * This value must lie in the range [1..256]
       * </pre>
       *
       * <code>int64 num_merkle_buckets = 2;</code>
       */
      public Builder clearNumMerkleBuckets() {
        
        numMerkleBuckets_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spannerpb.LogStorageConfig)
    }

    // @@protoc_insertion_point(class_scope:spannerpb.LogStorageConfig)
    private static final spannerpb.Spanner.LogStorageConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spannerpb.Spanner.LogStorageConfig();
    }

    public static spannerpb.Spanner.LogStorageConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogStorageConfig>
        PARSER = new com.google.protobuf.AbstractParser<LogStorageConfig>() {
      public LogStorageConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogStorageConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogStorageConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogStorageConfig> getParserForType() {
      return PARSER;
    }

    public spannerpb.Spanner.LogStorageConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapStorageConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spannerpb.MapStorageConfig)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * MapStorageConfig holds settings which tune the storage implementation for
   * a given map tree.
   * </pre>
   *
   * Protobuf type {@code spannerpb.MapStorageConfig}
   */
  public  static final class MapStorageConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spannerpb.MapStorageConfig)
      MapStorageConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapStorageConfig.newBuilder() to construct.
    private MapStorageConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapStorageConfig() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapStorageConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spannerpb.Spanner.internal_static_spannerpb_MapStorageConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spannerpb.Spanner.internal_static_spannerpb_MapStorageConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spannerpb.Spanner.MapStorageConfig.class, spannerpb.Spanner.MapStorageConfig.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spannerpb.Spanner.MapStorageConfig)) {
        return super.equals(obj);
      }
      spannerpb.Spanner.MapStorageConfig other = (spannerpb.Spanner.MapStorageConfig) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.MapStorageConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.MapStorageConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.MapStorageConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spannerpb.Spanner.MapStorageConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MapStorageConfig holds settings which tune the storage implementation for
     * a given map tree.
     * </pre>
     *
     * Protobuf type {@code spannerpb.MapStorageConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spannerpb.MapStorageConfig)
        spannerpb.Spanner.MapStorageConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spannerpb.Spanner.internal_static_spannerpb_MapStorageConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spannerpb.Spanner.internal_static_spannerpb_MapStorageConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spannerpb.Spanner.MapStorageConfig.class, spannerpb.Spanner.MapStorageConfig.Builder.class);
      }

      // Construct using spannerpb.Spanner.MapStorageConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spannerpb.Spanner.internal_static_spannerpb_MapStorageConfig_descriptor;
      }

      public spannerpb.Spanner.MapStorageConfig getDefaultInstanceForType() {
        return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
      }

      public spannerpb.Spanner.MapStorageConfig build() {
        spannerpb.Spanner.MapStorageConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spannerpb.Spanner.MapStorageConfig buildPartial() {
        spannerpb.Spanner.MapStorageConfig result = new spannerpb.Spanner.MapStorageConfig(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spannerpb.Spanner.MapStorageConfig) {
          return mergeFrom((spannerpb.Spanner.MapStorageConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spannerpb.Spanner.MapStorageConfig other) {
        if (other == spannerpb.Spanner.MapStorageConfig.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spannerpb.Spanner.MapStorageConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spannerpb.Spanner.MapStorageConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spannerpb.MapStorageConfig)
    }

    // @@protoc_insertion_point(class_scope:spannerpb.MapStorageConfig)
    private static final spannerpb.Spanner.MapStorageConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spannerpb.Spanner.MapStorageConfig();
    }

    public static spannerpb.Spanner.MapStorageConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapStorageConfig>
        PARSER = new com.google.protobuf.AbstractParser<MapStorageConfig>() {
      public MapStorageConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapStorageConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapStorageConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapStorageConfig> getParserForType() {
      return PARSER;
    }

    public spannerpb.Spanner.MapStorageConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TreeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spannerpb.TreeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * tree_id is the ID of the tree, and is used as a primary key.
     * </pre>
     *
     * <code>int64 tree_id = 1;</code>
     */
    long getTreeId();

    /**
     * <pre>
     * key_id identifies the private key associated with this tree.
     * </pre>
     *
     * <code>int64 key_id = 2;</code>
     */
    long getKeyId();

    /**
     * <pre>
     * name is a short name for this tree.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * name is a short name for this tree.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * description is a short free form text describing the tree.
     * </pre>
     *
     * <code>string description = 4;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * description is a short free form text describing the tree.
     * </pre>
     *
     * <code>string description = 4;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * tree_type identifies whether this is a Log or a Map tree.
     * </pre>
     *
     * <code>.spannerpb.TreeType tree_type = 5;</code>
     */
    int getTreeTypeValue();
    /**
     * <pre>
     * tree_type identifies whether this is a Log or a Map tree.
     * </pre>
     *
     * <code>.spannerpb.TreeType tree_type = 5;</code>
     */
    spannerpb.Spanner.TreeType getTreeType();

    /**
     * <pre>
     * tree_state is the state of the tree.
     * </pre>
     *
     * <code>.spannerpb.TreeState tree_state = 8;</code>
     */
    int getTreeStateValue();
    /**
     * <pre>
     * tree_state is the state of the tree.
     * </pre>
     *
     * <code>.spannerpb.TreeState tree_state = 8;</code>
     */
    spannerpb.Spanner.TreeState getTreeState();

    /**
     * <pre>
     * hash_strategy is the hashing strategy used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
     */
    int getHashStrategyValue();
    /**
     * <pre>
     * hash_strategy is the hashing strategy used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
     */
    spannerpb.Spanner.HashStrategy getHashStrategy();

    /**
     * <pre>
     * hash_algorithm is the hash algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
     */
    int getHashAlgorithmValue();
    /**
     * <pre>
     * hash_algorithm is the hash algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
     */
    spannerpb.Spanner.HashAlgorithm getHashAlgorithm();

    /**
     * <pre>
     * signature_algorithm is the signature algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
     */
    int getSignatureAlgorithmValue();
    /**
     * <pre>
     * signature_algorithm is the signature algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
     */
    spannerpb.Spanner.SignatureAlgorithm getSignatureAlgorithm();

    /**
     * <pre>
     * create_time_nanos is the creation timestamp of the tree, in nanos since
     * epoch.
     * </pre>
     *
     * <code>int64 create_time_nanos = 13;</code>
     */
    long getCreateTimeNanos();

    /**
     * <pre>
     * update_time_nanos is the last update time of the tree, in nanos since
     * epoch.
     * </pre>
     *
     * <code>int64 update_time_nanos = 14;</code>
     */
    long getUpdateTimeNanos();

    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    boolean hasPrivateKey();
    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    com.google.protobuf.Any getPrivateKey();
    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    com.google.protobuf.AnyOrBuilder getPrivateKeyOrBuilder();

    /**
     * <pre>
     * public_key_der should be used to verify signatures produced by this tree.
     * It is the key in DER-encoded PKIX form.
     * </pre>
     *
     * <code>bytes public_key_der = 16;</code>
     */
    com.google.protobuf.ByteString getPublicKeyDer();

    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    boolean hasLogStorageConfig();
    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    spannerpb.Spanner.LogStorageConfig getLogStorageConfig();
    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    spannerpb.Spanner.LogStorageConfigOrBuilder getLogStorageConfigOrBuilder();

    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    boolean hasMapStorageConfig();
    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    spannerpb.Spanner.MapStorageConfig getMapStorageConfig();
    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    spannerpb.Spanner.MapStorageConfigOrBuilder getMapStorageConfigOrBuilder();

    /**
     * <pre>
     * max_root_duration_millis is the interval after which a new signed root is
     * produced even if there have been no submission.  If zero, this behavior is
     * disabled.
     * </pre>
     *
     * <code>int64 max_root_duration_millis = 17;</code>
     */
    long getMaxRootDurationMillis();

    /**
     * <pre>
     * If true the tree was soft deleted.
     * </pre>
     *
     * <code>bool deleted = 18;</code>
     */
    boolean getDeleted();

    /**
     * <pre>
     * Time of tree deletion, if any.
     * </pre>
     *
     * <code>int64 delete_time_nanos = 19;</code>
     */
    long getDeleteTimeNanos();

    public spannerpb.Spanner.TreeInfo.StorageConfigCase getStorageConfigCase();
  }
  /**
   * <pre>
   * TreeInfo stores information about a Trillian tree.
   * </pre>
   *
   * Protobuf type {@code spannerpb.TreeInfo}
   */
  public  static final class TreeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spannerpb.TreeInfo)
      TreeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TreeInfo.newBuilder() to construct.
    private TreeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TreeInfo() {
      treeId_ = 0L;
      keyId_ = 0L;
      name_ = "";
      description_ = "";
      treeType_ = 0;
      treeState_ = 0;
      hashStrategy_ = 0;
      hashAlgorithm_ = 0;
      signatureAlgorithm_ = 0;
      createTimeNanos_ = 0L;
      updateTimeNanos_ = 0L;
      publicKeyDer_ = com.google.protobuf.ByteString.EMPTY;
      maxRootDurationMillis_ = 0L;
      deleted_ = false;
      deleteTimeNanos_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TreeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              treeId_ = input.readInt64();
              break;
            }
            case 16: {

              keyId_ = input.readInt64();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              treeType_ = rawValue;
              break;
            }
            case 50: {
              spannerpb.Spanner.LogStorageConfig.Builder subBuilder = null;
              if (storageConfigCase_ == 6) {
                subBuilder = ((spannerpb.Spanner.LogStorageConfig) storageConfig_).toBuilder();
              }
              storageConfig_ =
                  input.readMessage(spannerpb.Spanner.LogStorageConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((spannerpb.Spanner.LogStorageConfig) storageConfig_);
                storageConfig_ = subBuilder.buildPartial();
              }
              storageConfigCase_ = 6;
              break;
            }
            case 58: {
              spannerpb.Spanner.MapStorageConfig.Builder subBuilder = null;
              if (storageConfigCase_ == 7) {
                subBuilder = ((spannerpb.Spanner.MapStorageConfig) storageConfig_).toBuilder();
              }
              storageConfig_ =
                  input.readMessage(spannerpb.Spanner.MapStorageConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((spannerpb.Spanner.MapStorageConfig) storageConfig_);
                storageConfig_ = subBuilder.buildPartial();
              }
              storageConfigCase_ = 7;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              treeState_ = rawValue;
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              hashStrategy_ = rawValue;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              hashAlgorithm_ = rawValue;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              signatureAlgorithm_ = rawValue;
              break;
            }
            case 104: {

              createTimeNanos_ = input.readInt64();
              break;
            }
            case 112: {

              updateTimeNanos_ = input.readInt64();
              break;
            }
            case 122: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (privateKey_ != null) {
                subBuilder = privateKey_.toBuilder();
              }
              privateKey_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(privateKey_);
                privateKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {

              publicKeyDer_ = input.readBytes();
              break;
            }
            case 136: {

              maxRootDurationMillis_ = input.readInt64();
              break;
            }
            case 144: {

              deleted_ = input.readBool();
              break;
            }
            case 152: {

              deleteTimeNanos_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spannerpb.Spanner.internal_static_spannerpb_TreeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spannerpb.Spanner.internal_static_spannerpb_TreeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spannerpb.Spanner.TreeInfo.class, spannerpb.Spanner.TreeInfo.Builder.class);
    }

    private int storageConfigCase_ = 0;
    private java.lang.Object storageConfig_;
    public enum StorageConfigCase
        implements com.google.protobuf.Internal.EnumLite {
      LOG_STORAGE_CONFIG(6),
      MAP_STORAGE_CONFIG(7),
      STORAGECONFIG_NOT_SET(0);
      private final int value;
      private StorageConfigCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static StorageConfigCase valueOf(int value) {
        return forNumber(value);
      }

      public static StorageConfigCase forNumber(int value) {
        switch (value) {
          case 6: return LOG_STORAGE_CONFIG;
          case 7: return MAP_STORAGE_CONFIG;
          case 0: return STORAGECONFIG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public StorageConfigCase
    getStorageConfigCase() {
      return StorageConfigCase.forNumber(
          storageConfigCase_);
    }

    public static final int TREE_ID_FIELD_NUMBER = 1;
    private long treeId_;
    /**
     * <pre>
     * tree_id is the ID of the tree, and is used as a primary key.
     * </pre>
     *
     * <code>int64 tree_id = 1;</code>
     */
    public long getTreeId() {
      return treeId_;
    }

    public static final int KEY_ID_FIELD_NUMBER = 2;
    private long keyId_;
    /**
     * <pre>
     * key_id identifies the private key associated with this tree.
     * </pre>
     *
     * <code>int64 key_id = 2;</code>
     */
    public long getKeyId() {
      return keyId_;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * name is a short name for this tree.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * name is a short name for this tree.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * description is a short free form text describing the tree.
     * </pre>
     *
     * <code>string description = 4;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * description is a short free form text describing the tree.
     * </pre>
     *
     * <code>string description = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TREE_TYPE_FIELD_NUMBER = 5;
    private int treeType_;
    /**
     * <pre>
     * tree_type identifies whether this is a Log or a Map tree.
     * </pre>
     *
     * <code>.spannerpb.TreeType tree_type = 5;</code>
     */
    public int getTreeTypeValue() {
      return treeType_;
    }
    /**
     * <pre>
     * tree_type identifies whether this is a Log or a Map tree.
     * </pre>
     *
     * <code>.spannerpb.TreeType tree_type = 5;</code>
     */
    public spannerpb.Spanner.TreeType getTreeType() {
      spannerpb.Spanner.TreeType result = spannerpb.Spanner.TreeType.valueOf(treeType_);
      return result == null ? spannerpb.Spanner.TreeType.UNRECOGNIZED : result;
    }

    public static final int TREE_STATE_FIELD_NUMBER = 8;
    private int treeState_;
    /**
     * <pre>
     * tree_state is the state of the tree.
     * </pre>
     *
     * <code>.spannerpb.TreeState tree_state = 8;</code>
     */
    public int getTreeStateValue() {
      return treeState_;
    }
    /**
     * <pre>
     * tree_state is the state of the tree.
     * </pre>
     *
     * <code>.spannerpb.TreeState tree_state = 8;</code>
     */
    public spannerpb.Spanner.TreeState getTreeState() {
      spannerpb.Spanner.TreeState result = spannerpb.Spanner.TreeState.valueOf(treeState_);
      return result == null ? spannerpb.Spanner.TreeState.UNRECOGNIZED : result;
    }

    public static final int HASH_STRATEGY_FIELD_NUMBER = 9;
    private int hashStrategy_;
    /**
     * <pre>
     * hash_strategy is the hashing strategy used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
     */
    public int getHashStrategyValue() {
      return hashStrategy_;
    }
    /**
     * <pre>
     * hash_strategy is the hashing strategy used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
     */
    public spannerpb.Spanner.HashStrategy getHashStrategy() {
      spannerpb.Spanner.HashStrategy result = spannerpb.Spanner.HashStrategy.valueOf(hashStrategy_);
      return result == null ? spannerpb.Spanner.HashStrategy.UNRECOGNIZED : result;
    }

    public static final int HASH_ALGORITHM_FIELD_NUMBER = 10;
    private int hashAlgorithm_;
    /**
     * <pre>
     * hash_algorithm is the hash algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
     */
    public int getHashAlgorithmValue() {
      return hashAlgorithm_;
    }
    /**
     * <pre>
     * hash_algorithm is the hash algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
     */
    public spannerpb.Spanner.HashAlgorithm getHashAlgorithm() {
      spannerpb.Spanner.HashAlgorithm result = spannerpb.Spanner.HashAlgorithm.valueOf(hashAlgorithm_);
      return result == null ? spannerpb.Spanner.HashAlgorithm.UNRECOGNIZED : result;
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 11;
    private int signatureAlgorithm_;
    /**
     * <pre>
     * signature_algorithm is the signature algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
     */
    public int getSignatureAlgorithmValue() {
      return signatureAlgorithm_;
    }
    /**
     * <pre>
     * signature_algorithm is the signature algorithm used by the tree.
     * </pre>
     *
     * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
     */
    public spannerpb.Spanner.SignatureAlgorithm getSignatureAlgorithm() {
      spannerpb.Spanner.SignatureAlgorithm result = spannerpb.Spanner.SignatureAlgorithm.valueOf(signatureAlgorithm_);
      return result == null ? spannerpb.Spanner.SignatureAlgorithm.UNRECOGNIZED : result;
    }

    public static final int CREATE_TIME_NANOS_FIELD_NUMBER = 13;
    private long createTimeNanos_;
    /**
     * <pre>
     * create_time_nanos is the creation timestamp of the tree, in nanos since
     * epoch.
     * </pre>
     *
     * <code>int64 create_time_nanos = 13;</code>
     */
    public long getCreateTimeNanos() {
      return createTimeNanos_;
    }

    public static final int UPDATE_TIME_NANOS_FIELD_NUMBER = 14;
    private long updateTimeNanos_;
    /**
     * <pre>
     * update_time_nanos is the last update time of the tree, in nanos since
     * epoch.
     * </pre>
     *
     * <code>int64 update_time_nanos = 14;</code>
     */
    public long getUpdateTimeNanos() {
      return updateTimeNanos_;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 15;
    private com.google.protobuf.Any privateKey_;
    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    public boolean hasPrivateKey() {
      return privateKey_ != null;
    }
    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    public com.google.protobuf.Any getPrivateKey() {
      return privateKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : privateKey_;
    }
    /**
     * <pre>
     * private_key should be used to generate signatures for this tree.
     * </pre>
     *
     * <code>.google.protobuf.Any private_key = 15;</code>
     */
    public com.google.protobuf.AnyOrBuilder getPrivateKeyOrBuilder() {
      return getPrivateKey();
    }

    public static final int PUBLIC_KEY_DER_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString publicKeyDer_;
    /**
     * <pre>
     * public_key_der should be used to verify signatures produced by this tree.
     * It is the key in DER-encoded PKIX form.
     * </pre>
     *
     * <code>bytes public_key_der = 16;</code>
     */
    public com.google.protobuf.ByteString getPublicKeyDer() {
      return publicKeyDer_;
    }

    public static final int LOG_STORAGE_CONFIG_FIELD_NUMBER = 6;
    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    public boolean hasLogStorageConfig() {
      return storageConfigCase_ == 6;
    }
    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    public spannerpb.Spanner.LogStorageConfig getLogStorageConfig() {
      if (storageConfigCase_ == 6) {
         return (spannerpb.Spanner.LogStorageConfig) storageConfig_;
      }
      return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
    }
    /**
     * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
     */
    public spannerpb.Spanner.LogStorageConfigOrBuilder getLogStorageConfigOrBuilder() {
      if (storageConfigCase_ == 6) {
         return (spannerpb.Spanner.LogStorageConfig) storageConfig_;
      }
      return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
    }

    public static final int MAP_STORAGE_CONFIG_FIELD_NUMBER = 7;
    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    public boolean hasMapStorageConfig() {
      return storageConfigCase_ == 7;
    }
    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    public spannerpb.Spanner.MapStorageConfig getMapStorageConfig() {
      if (storageConfigCase_ == 7) {
         return (spannerpb.Spanner.MapStorageConfig) storageConfig_;
      }
      return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
    }
    /**
     * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
     */
    public spannerpb.Spanner.MapStorageConfigOrBuilder getMapStorageConfigOrBuilder() {
      if (storageConfigCase_ == 7) {
         return (spannerpb.Spanner.MapStorageConfig) storageConfig_;
      }
      return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
    }

    public static final int MAX_ROOT_DURATION_MILLIS_FIELD_NUMBER = 17;
    private long maxRootDurationMillis_;
    /**
     * <pre>
     * max_root_duration_millis is the interval after which a new signed root is
     * produced even if there have been no submission.  If zero, this behavior is
     * disabled.
     * </pre>
     *
     * <code>int64 max_root_duration_millis = 17;</code>
     */
    public long getMaxRootDurationMillis() {
      return maxRootDurationMillis_;
    }

    public static final int DELETED_FIELD_NUMBER = 18;
    private boolean deleted_;
    /**
     * <pre>
     * If true the tree was soft deleted.
     * </pre>
     *
     * <code>bool deleted = 18;</code>
     */
    public boolean getDeleted() {
      return deleted_;
    }

    public static final int DELETE_TIME_NANOS_FIELD_NUMBER = 19;
    private long deleteTimeNanos_;
    /**
     * <pre>
     * Time of tree deletion, if any.
     * </pre>
     *
     * <code>int64 delete_time_nanos = 19;</code>
     */
    public long getDeleteTimeNanos() {
      return deleteTimeNanos_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (treeId_ != 0L) {
        output.writeInt64(1, treeId_);
      }
      if (keyId_ != 0L) {
        output.writeInt64(2, keyId_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, description_);
      }
      if (treeType_ != spannerpb.Spanner.TreeType.UNKNOWN.getNumber()) {
        output.writeEnum(5, treeType_);
      }
      if (storageConfigCase_ == 6) {
        output.writeMessage(6, (spannerpb.Spanner.LogStorageConfig) storageConfig_);
      }
      if (storageConfigCase_ == 7) {
        output.writeMessage(7, (spannerpb.Spanner.MapStorageConfig) storageConfig_);
      }
      if (treeState_ != spannerpb.Spanner.TreeState.UNKNOWN_TREE_STATE.getNumber()) {
        output.writeEnum(8, treeState_);
      }
      if (hashStrategy_ != spannerpb.Spanner.HashStrategy.UNKNOWN_HASH_STRATEGY.getNumber()) {
        output.writeEnum(9, hashStrategy_);
      }
      if (hashAlgorithm_ != spannerpb.Spanner.HashAlgorithm.NONE.getNumber()) {
        output.writeEnum(10, hashAlgorithm_);
      }
      if (signatureAlgorithm_ != spannerpb.Spanner.SignatureAlgorithm.ANONYMOUS.getNumber()) {
        output.writeEnum(11, signatureAlgorithm_);
      }
      if (createTimeNanos_ != 0L) {
        output.writeInt64(13, createTimeNanos_);
      }
      if (updateTimeNanos_ != 0L) {
        output.writeInt64(14, updateTimeNanos_);
      }
      if (privateKey_ != null) {
        output.writeMessage(15, getPrivateKey());
      }
      if (!publicKeyDer_.isEmpty()) {
        output.writeBytes(16, publicKeyDer_);
      }
      if (maxRootDurationMillis_ != 0L) {
        output.writeInt64(17, maxRootDurationMillis_);
      }
      if (deleted_ != false) {
        output.writeBool(18, deleted_);
      }
      if (deleteTimeNanos_ != 0L) {
        output.writeInt64(19, deleteTimeNanos_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (treeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, treeId_);
      }
      if (keyId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, keyId_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
      }
      if (!getDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, description_);
      }
      if (treeType_ != spannerpb.Spanner.TreeType.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, treeType_);
      }
      if (storageConfigCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (spannerpb.Spanner.LogStorageConfig) storageConfig_);
      }
      if (storageConfigCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (spannerpb.Spanner.MapStorageConfig) storageConfig_);
      }
      if (treeState_ != spannerpb.Spanner.TreeState.UNKNOWN_TREE_STATE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, treeState_);
      }
      if (hashStrategy_ != spannerpb.Spanner.HashStrategy.UNKNOWN_HASH_STRATEGY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, hashStrategy_);
      }
      if (hashAlgorithm_ != spannerpb.Spanner.HashAlgorithm.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, hashAlgorithm_);
      }
      if (signatureAlgorithm_ != spannerpb.Spanner.SignatureAlgorithm.ANONYMOUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, signatureAlgorithm_);
      }
      if (createTimeNanos_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, createTimeNanos_);
      }
      if (updateTimeNanos_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, updateTimeNanos_);
      }
      if (privateKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getPrivateKey());
      }
      if (!publicKeyDer_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, publicKeyDer_);
      }
      if (maxRootDurationMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, maxRootDurationMillis_);
      }
      if (deleted_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, deleted_);
      }
      if (deleteTimeNanos_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, deleteTimeNanos_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spannerpb.Spanner.TreeInfo)) {
        return super.equals(obj);
      }
      spannerpb.Spanner.TreeInfo other = (spannerpb.Spanner.TreeInfo) obj;

      boolean result = true;
      result = result && (getTreeId()
          == other.getTreeId());
      result = result && (getKeyId()
          == other.getKeyId());
      result = result && getName()
          .equals(other.getName());
      result = result && getDescription()
          .equals(other.getDescription());
      result = result && treeType_ == other.treeType_;
      result = result && treeState_ == other.treeState_;
      result = result && hashStrategy_ == other.hashStrategy_;
      result = result && hashAlgorithm_ == other.hashAlgorithm_;
      result = result && signatureAlgorithm_ == other.signatureAlgorithm_;
      result = result && (getCreateTimeNanos()
          == other.getCreateTimeNanos());
      result = result && (getUpdateTimeNanos()
          == other.getUpdateTimeNanos());
      result = result && (hasPrivateKey() == other.hasPrivateKey());
      if (hasPrivateKey()) {
        result = result && getPrivateKey()
            .equals(other.getPrivateKey());
      }
      result = result && getPublicKeyDer()
          .equals(other.getPublicKeyDer());
      result = result && (getMaxRootDurationMillis()
          == other.getMaxRootDurationMillis());
      result = result && (getDeleted()
          == other.getDeleted());
      result = result && (getDeleteTimeNanos()
          == other.getDeleteTimeNanos());
      result = result && getStorageConfigCase().equals(
          other.getStorageConfigCase());
      if (!result) return false;
      switch (storageConfigCase_) {
        case 6:
          result = result && getLogStorageConfig()
              .equals(other.getLogStorageConfig());
          break;
        case 7:
          result = result && getMapStorageConfig()
              .equals(other.getMapStorageConfig());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TREE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTreeId());
      hash = (37 * hash) + KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKeyId());
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      hash = (37 * hash) + TREE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + treeType_;
      hash = (37 * hash) + TREE_STATE_FIELD_NUMBER;
      hash = (53 * hash) + treeState_;
      hash = (37 * hash) + HASH_STRATEGY_FIELD_NUMBER;
      hash = (53 * hash) + hashStrategy_;
      hash = (37 * hash) + HASH_ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + hashAlgorithm_;
      hash = (37 * hash) + SIGNATURE_ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + signatureAlgorithm_;
      hash = (37 * hash) + CREATE_TIME_NANOS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreateTimeNanos());
      hash = (37 * hash) + UPDATE_TIME_NANOS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUpdateTimeNanos());
      if (hasPrivateKey()) {
        hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateKey().hashCode();
      }
      hash = (37 * hash) + PUBLIC_KEY_DER_FIELD_NUMBER;
      hash = (53 * hash) + getPublicKeyDer().hashCode();
      hash = (37 * hash) + MAX_ROOT_DURATION_MILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxRootDurationMillis());
      hash = (37 * hash) + DELETED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeleted());
      hash = (37 * hash) + DELETE_TIME_NANOS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDeleteTimeNanos());
      switch (storageConfigCase_) {
        case 6:
          hash = (37 * hash) + LOG_STORAGE_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getLogStorageConfig().hashCode();
          break;
        case 7:
          hash = (37 * hash) + MAP_STORAGE_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getMapStorageConfig().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spannerpb.Spanner.TreeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spannerpb.Spanner.TreeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TreeInfo stores information about a Trillian tree.
     * </pre>
     *
     * Protobuf type {@code spannerpb.TreeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spannerpb.TreeInfo)
        spannerpb.Spanner.TreeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spannerpb.Spanner.TreeInfo.class, spannerpb.Spanner.TreeInfo.Builder.class);
      }

      // Construct using spannerpb.Spanner.TreeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        treeId_ = 0L;

        keyId_ = 0L;

        name_ = "";

        description_ = "";

        treeType_ = 0;

        treeState_ = 0;

        hashStrategy_ = 0;

        hashAlgorithm_ = 0;

        signatureAlgorithm_ = 0;

        createTimeNanos_ = 0L;

        updateTimeNanos_ = 0L;

        if (privateKeyBuilder_ == null) {
          privateKey_ = null;
        } else {
          privateKey_ = null;
          privateKeyBuilder_ = null;
        }
        publicKeyDer_ = com.google.protobuf.ByteString.EMPTY;

        maxRootDurationMillis_ = 0L;

        deleted_ = false;

        deleteTimeNanos_ = 0L;

        storageConfigCase_ = 0;
        storageConfig_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeInfo_descriptor;
      }

      public spannerpb.Spanner.TreeInfo getDefaultInstanceForType() {
        return spannerpb.Spanner.TreeInfo.getDefaultInstance();
      }

      public spannerpb.Spanner.TreeInfo build() {
        spannerpb.Spanner.TreeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spannerpb.Spanner.TreeInfo buildPartial() {
        spannerpb.Spanner.TreeInfo result = new spannerpb.Spanner.TreeInfo(this);
        result.treeId_ = treeId_;
        result.keyId_ = keyId_;
        result.name_ = name_;
        result.description_ = description_;
        result.treeType_ = treeType_;
        result.treeState_ = treeState_;
        result.hashStrategy_ = hashStrategy_;
        result.hashAlgorithm_ = hashAlgorithm_;
        result.signatureAlgorithm_ = signatureAlgorithm_;
        result.createTimeNanos_ = createTimeNanos_;
        result.updateTimeNanos_ = updateTimeNanos_;
        if (privateKeyBuilder_ == null) {
          result.privateKey_ = privateKey_;
        } else {
          result.privateKey_ = privateKeyBuilder_.build();
        }
        result.publicKeyDer_ = publicKeyDer_;
        if (storageConfigCase_ == 6) {
          if (logStorageConfigBuilder_ == null) {
            result.storageConfig_ = storageConfig_;
          } else {
            result.storageConfig_ = logStorageConfigBuilder_.build();
          }
        }
        if (storageConfigCase_ == 7) {
          if (mapStorageConfigBuilder_ == null) {
            result.storageConfig_ = storageConfig_;
          } else {
            result.storageConfig_ = mapStorageConfigBuilder_.build();
          }
        }
        result.maxRootDurationMillis_ = maxRootDurationMillis_;
        result.deleted_ = deleted_;
        result.deleteTimeNanos_ = deleteTimeNanos_;
        result.storageConfigCase_ = storageConfigCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spannerpb.Spanner.TreeInfo) {
          return mergeFrom((spannerpb.Spanner.TreeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spannerpb.Spanner.TreeInfo other) {
        if (other == spannerpb.Spanner.TreeInfo.getDefaultInstance()) return this;
        if (other.getTreeId() != 0L) {
          setTreeId(other.getTreeId());
        }
        if (other.getKeyId() != 0L) {
          setKeyId(other.getKeyId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.treeType_ != 0) {
          setTreeTypeValue(other.getTreeTypeValue());
        }
        if (other.treeState_ != 0) {
          setTreeStateValue(other.getTreeStateValue());
        }
        if (other.hashStrategy_ != 0) {
          setHashStrategyValue(other.getHashStrategyValue());
        }
        if (other.hashAlgorithm_ != 0) {
          setHashAlgorithmValue(other.getHashAlgorithmValue());
        }
        if (other.signatureAlgorithm_ != 0) {
          setSignatureAlgorithmValue(other.getSignatureAlgorithmValue());
        }
        if (other.getCreateTimeNanos() != 0L) {
          setCreateTimeNanos(other.getCreateTimeNanos());
        }
        if (other.getUpdateTimeNanos() != 0L) {
          setUpdateTimeNanos(other.getUpdateTimeNanos());
        }
        if (other.hasPrivateKey()) {
          mergePrivateKey(other.getPrivateKey());
        }
        if (other.getPublicKeyDer() != com.google.protobuf.ByteString.EMPTY) {
          setPublicKeyDer(other.getPublicKeyDer());
        }
        if (other.getMaxRootDurationMillis() != 0L) {
          setMaxRootDurationMillis(other.getMaxRootDurationMillis());
        }
        if (other.getDeleted() != false) {
          setDeleted(other.getDeleted());
        }
        if (other.getDeleteTimeNanos() != 0L) {
          setDeleteTimeNanos(other.getDeleteTimeNanos());
        }
        switch (other.getStorageConfigCase()) {
          case LOG_STORAGE_CONFIG: {
            mergeLogStorageConfig(other.getLogStorageConfig());
            break;
          }
          case MAP_STORAGE_CONFIG: {
            mergeMapStorageConfig(other.getMapStorageConfig());
            break;
          }
          case STORAGECONFIG_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spannerpb.Spanner.TreeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spannerpb.Spanner.TreeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int storageConfigCase_ = 0;
      private java.lang.Object storageConfig_;
      public StorageConfigCase
          getStorageConfigCase() {
        return StorageConfigCase.forNumber(
            storageConfigCase_);
      }

      public Builder clearStorageConfig() {
        storageConfigCase_ = 0;
        storageConfig_ = null;
        onChanged();
        return this;
      }


      private long treeId_ ;
      /**
       * <pre>
       * tree_id is the ID of the tree, and is used as a primary key.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public long getTreeId() {
        return treeId_;
      }
      /**
       * <pre>
       * tree_id is the ID of the tree, and is used as a primary key.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public Builder setTreeId(long value) {
        
        treeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_id is the ID of the tree, and is used as a primary key.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public Builder clearTreeId() {
        
        treeId_ = 0L;
        onChanged();
        return this;
      }

      private long keyId_ ;
      /**
       * <pre>
       * key_id identifies the private key associated with this tree.
       * </pre>
       *
       * <code>int64 key_id = 2;</code>
       */
      public long getKeyId() {
        return keyId_;
      }
      /**
       * <pre>
       * key_id identifies the private key associated with this tree.
       * </pre>
       *
       * <code>int64 key_id = 2;</code>
       */
      public Builder setKeyId(long value) {
        
        keyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * key_id identifies the private key associated with this tree.
       * </pre>
       *
       * <code>int64 key_id = 2;</code>
       */
      public Builder clearKeyId() {
        
        keyId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name is a short name for this tree.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name is a short name for this tree.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name is a short name for this tree.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is a short name for this tree.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is a short name for this tree.
       * </pre>
       *
       * <code>string name = 3;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * description is a short free form text describing the tree.
       * </pre>
       *
       * <code>string description = 4;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * description is a short free form text describing the tree.
       * </pre>
       *
       * <code>string description = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * description is a short free form text describing the tree.
       * </pre>
       *
       * <code>string description = 4;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description is a short free form text describing the tree.
       * </pre>
       *
       * <code>string description = 4;</code>
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * description is a short free form text describing the tree.
       * </pre>
       *
       * <code>string description = 4;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private int treeType_ = 0;
      /**
       * <pre>
       * tree_type identifies whether this is a Log or a Map tree.
       * </pre>
       *
       * <code>.spannerpb.TreeType tree_type = 5;</code>
       */
      public int getTreeTypeValue() {
        return treeType_;
      }
      /**
       * <pre>
       * tree_type identifies whether this is a Log or a Map tree.
       * </pre>
       *
       * <code>.spannerpb.TreeType tree_type = 5;</code>
       */
      public Builder setTreeTypeValue(int value) {
        treeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_type identifies whether this is a Log or a Map tree.
       * </pre>
       *
       * <code>.spannerpb.TreeType tree_type = 5;</code>
       */
      public spannerpb.Spanner.TreeType getTreeType() {
        spannerpb.Spanner.TreeType result = spannerpb.Spanner.TreeType.valueOf(treeType_);
        return result == null ? spannerpb.Spanner.TreeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * tree_type identifies whether this is a Log or a Map tree.
       * </pre>
       *
       * <code>.spannerpb.TreeType tree_type = 5;</code>
       */
      public Builder setTreeType(spannerpb.Spanner.TreeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        treeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_type identifies whether this is a Log or a Map tree.
       * </pre>
       *
       * <code>.spannerpb.TreeType tree_type = 5;</code>
       */
      public Builder clearTreeType() {
        
        treeType_ = 0;
        onChanged();
        return this;
      }

      private int treeState_ = 0;
      /**
       * <pre>
       * tree_state is the state of the tree.
       * </pre>
       *
       * <code>.spannerpb.TreeState tree_state = 8;</code>
       */
      public int getTreeStateValue() {
        return treeState_;
      }
      /**
       * <pre>
       * tree_state is the state of the tree.
       * </pre>
       *
       * <code>.spannerpb.TreeState tree_state = 8;</code>
       */
      public Builder setTreeStateValue(int value) {
        treeState_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_state is the state of the tree.
       * </pre>
       *
       * <code>.spannerpb.TreeState tree_state = 8;</code>
       */
      public spannerpb.Spanner.TreeState getTreeState() {
        spannerpb.Spanner.TreeState result = spannerpb.Spanner.TreeState.valueOf(treeState_);
        return result == null ? spannerpb.Spanner.TreeState.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * tree_state is the state of the tree.
       * </pre>
       *
       * <code>.spannerpb.TreeState tree_state = 8;</code>
       */
      public Builder setTreeState(spannerpb.Spanner.TreeState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        treeState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_state is the state of the tree.
       * </pre>
       *
       * <code>.spannerpb.TreeState tree_state = 8;</code>
       */
      public Builder clearTreeState() {
        
        treeState_ = 0;
        onChanged();
        return this;
      }

      private int hashStrategy_ = 0;
      /**
       * <pre>
       * hash_strategy is the hashing strategy used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
       */
      public int getHashStrategyValue() {
        return hashStrategy_;
      }
      /**
       * <pre>
       * hash_strategy is the hashing strategy used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
       */
      public Builder setHashStrategyValue(int value) {
        hashStrategy_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_strategy is the hashing strategy used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
       */
      public spannerpb.Spanner.HashStrategy getHashStrategy() {
        spannerpb.Spanner.HashStrategy result = spannerpb.Spanner.HashStrategy.valueOf(hashStrategy_);
        return result == null ? spannerpb.Spanner.HashStrategy.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * hash_strategy is the hashing strategy used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
       */
      public Builder setHashStrategy(spannerpb.Spanner.HashStrategy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hashStrategy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_strategy is the hashing strategy used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashStrategy hash_strategy = 9;</code>
       */
      public Builder clearHashStrategy() {
        
        hashStrategy_ = 0;
        onChanged();
        return this;
      }

      private int hashAlgorithm_ = 0;
      /**
       * <pre>
       * hash_algorithm is the hash algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
       */
      public int getHashAlgorithmValue() {
        return hashAlgorithm_;
      }
      /**
       * <pre>
       * hash_algorithm is the hash algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
       */
      public Builder setHashAlgorithmValue(int value) {
        hashAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_algorithm is the hash algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
       */
      public spannerpb.Spanner.HashAlgorithm getHashAlgorithm() {
        spannerpb.Spanner.HashAlgorithm result = spannerpb.Spanner.HashAlgorithm.valueOf(hashAlgorithm_);
        return result == null ? spannerpb.Spanner.HashAlgorithm.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * hash_algorithm is the hash algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
       */
      public Builder setHashAlgorithm(spannerpb.Spanner.HashAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hashAlgorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_algorithm is the hash algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.HashAlgorithm hash_algorithm = 10;</code>
       */
      public Builder clearHashAlgorithm() {
        
        hashAlgorithm_ = 0;
        onChanged();
        return this;
      }

      private int signatureAlgorithm_ = 0;
      /**
       * <pre>
       * signature_algorithm is the signature algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
       */
      public int getSignatureAlgorithmValue() {
        return signatureAlgorithm_;
      }
      /**
       * <pre>
       * signature_algorithm is the signature algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
       */
      public Builder setSignatureAlgorithmValue(int value) {
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature_algorithm is the signature algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
       */
      public spannerpb.Spanner.SignatureAlgorithm getSignatureAlgorithm() {
        spannerpb.Spanner.SignatureAlgorithm result = spannerpb.Spanner.SignatureAlgorithm.valueOf(signatureAlgorithm_);
        return result == null ? spannerpb.Spanner.SignatureAlgorithm.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * signature_algorithm is the signature algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
       */
      public Builder setSignatureAlgorithm(spannerpb.Spanner.SignatureAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        signatureAlgorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature_algorithm is the signature algorithm used by the tree.
       * </pre>
       *
       * <code>.spannerpb.SignatureAlgorithm signature_algorithm = 11;</code>
       */
      public Builder clearSignatureAlgorithm() {
        
        signatureAlgorithm_ = 0;
        onChanged();
        return this;
      }

      private long createTimeNanos_ ;
      /**
       * <pre>
       * create_time_nanos is the creation timestamp of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 create_time_nanos = 13;</code>
       */
      public long getCreateTimeNanos() {
        return createTimeNanos_;
      }
      /**
       * <pre>
       * create_time_nanos is the creation timestamp of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 create_time_nanos = 13;</code>
       */
      public Builder setCreateTimeNanos(long value) {
        
        createTimeNanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * create_time_nanos is the creation timestamp of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 create_time_nanos = 13;</code>
       */
      public Builder clearCreateTimeNanos() {
        
        createTimeNanos_ = 0L;
        onChanged();
        return this;
      }

      private long updateTimeNanos_ ;
      /**
       * <pre>
       * update_time_nanos is the last update time of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 update_time_nanos = 14;</code>
       */
      public long getUpdateTimeNanos() {
        return updateTimeNanos_;
      }
      /**
       * <pre>
       * update_time_nanos is the last update time of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 update_time_nanos = 14;</code>
       */
      public Builder setUpdateTimeNanos(long value) {
        
        updateTimeNanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * update_time_nanos is the last update time of the tree, in nanos since
       * epoch.
       * </pre>
       *
       * <code>int64 update_time_nanos = 14;</code>
       */
      public Builder clearUpdateTimeNanos() {
        
        updateTimeNanos_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any privateKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> privateKeyBuilder_;
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public boolean hasPrivateKey() {
        return privateKeyBuilder_ != null || privateKey_ != null;
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public com.google.protobuf.Any getPrivateKey() {
        if (privateKeyBuilder_ == null) {
          return privateKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : privateKey_;
        } else {
          return privateKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public Builder setPrivateKey(com.google.protobuf.Any value) {
        if (privateKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          privateKey_ = value;
          onChanged();
        } else {
          privateKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public Builder setPrivateKey(
          com.google.protobuf.Any.Builder builderForValue) {
        if (privateKeyBuilder_ == null) {
          privateKey_ = builderForValue.build();
          onChanged();
        } else {
          privateKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public Builder mergePrivateKey(com.google.protobuf.Any value) {
        if (privateKeyBuilder_ == null) {
          if (privateKey_ != null) {
            privateKey_ =
              com.google.protobuf.Any.newBuilder(privateKey_).mergeFrom(value).buildPartial();
          } else {
            privateKey_ = value;
          }
          onChanged();
        } else {
          privateKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public Builder clearPrivateKey() {
        if (privateKeyBuilder_ == null) {
          privateKey_ = null;
          onChanged();
        } else {
          privateKey_ = null;
          privateKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public com.google.protobuf.Any.Builder getPrivateKeyBuilder() {
        
        onChanged();
        return getPrivateKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      public com.google.protobuf.AnyOrBuilder getPrivateKeyOrBuilder() {
        if (privateKeyBuilder_ != null) {
          return privateKeyBuilder_.getMessageOrBuilder();
        } else {
          return privateKey_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : privateKey_;
        }
      }
      /**
       * <pre>
       * private_key should be used to generate signatures for this tree.
       * </pre>
       *
       * <code>.google.protobuf.Any private_key = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getPrivateKeyFieldBuilder() {
        if (privateKeyBuilder_ == null) {
          privateKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getPrivateKey(),
                  getParentForChildren(),
                  isClean());
          privateKey_ = null;
        }
        return privateKeyBuilder_;
      }

      private com.google.protobuf.ByteString publicKeyDer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * public_key_der should be used to verify signatures produced by this tree.
       * It is the key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes public_key_der = 16;</code>
       */
      public com.google.protobuf.ByteString getPublicKeyDer() {
        return publicKeyDer_;
      }
      /**
       * <pre>
       * public_key_der should be used to verify signatures produced by this tree.
       * It is the key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes public_key_der = 16;</code>
       */
      public Builder setPublicKeyDer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        publicKeyDer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * public_key_der should be used to verify signatures produced by this tree.
       * It is the key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes public_key_der = 16;</code>
       */
      public Builder clearPublicKeyDer() {
        
        publicKeyDer_ = getDefaultInstance().getPublicKeyDer();
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          spannerpb.Spanner.LogStorageConfig, spannerpb.Spanner.LogStorageConfig.Builder, spannerpb.Spanner.LogStorageConfigOrBuilder> logStorageConfigBuilder_;
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public boolean hasLogStorageConfig() {
        return storageConfigCase_ == 6;
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public spannerpb.Spanner.LogStorageConfig getLogStorageConfig() {
        if (logStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 6) {
            return (spannerpb.Spanner.LogStorageConfig) storageConfig_;
          }
          return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
        } else {
          if (storageConfigCase_ == 6) {
            return logStorageConfigBuilder_.getMessage();
          }
          return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public Builder setLogStorageConfig(spannerpb.Spanner.LogStorageConfig value) {
        if (logStorageConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          storageConfig_ = value;
          onChanged();
        } else {
          logStorageConfigBuilder_.setMessage(value);
        }
        storageConfigCase_ = 6;
        return this;
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public Builder setLogStorageConfig(
          spannerpb.Spanner.LogStorageConfig.Builder builderForValue) {
        if (logStorageConfigBuilder_ == null) {
          storageConfig_ = builderForValue.build();
          onChanged();
        } else {
          logStorageConfigBuilder_.setMessage(builderForValue.build());
        }
        storageConfigCase_ = 6;
        return this;
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public Builder mergeLogStorageConfig(spannerpb.Spanner.LogStorageConfig value) {
        if (logStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 6 &&
              storageConfig_ != spannerpb.Spanner.LogStorageConfig.getDefaultInstance()) {
            storageConfig_ = spannerpb.Spanner.LogStorageConfig.newBuilder((spannerpb.Spanner.LogStorageConfig) storageConfig_)
                .mergeFrom(value).buildPartial();
          } else {
            storageConfig_ = value;
          }
          onChanged();
        } else {
          if (storageConfigCase_ == 6) {
            logStorageConfigBuilder_.mergeFrom(value);
          }
          logStorageConfigBuilder_.setMessage(value);
        }
        storageConfigCase_ = 6;
        return this;
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public Builder clearLogStorageConfig() {
        if (logStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 6) {
            storageConfigCase_ = 0;
            storageConfig_ = null;
            onChanged();
          }
        } else {
          if (storageConfigCase_ == 6) {
            storageConfigCase_ = 0;
            storageConfig_ = null;
          }
          logStorageConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public spannerpb.Spanner.LogStorageConfig.Builder getLogStorageConfigBuilder() {
        return getLogStorageConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      public spannerpb.Spanner.LogStorageConfigOrBuilder getLogStorageConfigOrBuilder() {
        if ((storageConfigCase_ == 6) && (logStorageConfigBuilder_ != null)) {
          return logStorageConfigBuilder_.getMessageOrBuilder();
        } else {
          if (storageConfigCase_ == 6) {
            return (spannerpb.Spanner.LogStorageConfig) storageConfig_;
          }
          return spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.spannerpb.LogStorageConfig log_storage_config = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          spannerpb.Spanner.LogStorageConfig, spannerpb.Spanner.LogStorageConfig.Builder, spannerpb.Spanner.LogStorageConfigOrBuilder> 
          getLogStorageConfigFieldBuilder() {
        if (logStorageConfigBuilder_ == null) {
          if (!(storageConfigCase_ == 6)) {
            storageConfig_ = spannerpb.Spanner.LogStorageConfig.getDefaultInstance();
          }
          logStorageConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              spannerpb.Spanner.LogStorageConfig, spannerpb.Spanner.LogStorageConfig.Builder, spannerpb.Spanner.LogStorageConfigOrBuilder>(
                  (spannerpb.Spanner.LogStorageConfig) storageConfig_,
                  getParentForChildren(),
                  isClean());
          storageConfig_ = null;
        }
        storageConfigCase_ = 6;
        onChanged();;
        return logStorageConfigBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          spannerpb.Spanner.MapStorageConfig, spannerpb.Spanner.MapStorageConfig.Builder, spannerpb.Spanner.MapStorageConfigOrBuilder> mapStorageConfigBuilder_;
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public boolean hasMapStorageConfig() {
        return storageConfigCase_ == 7;
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public spannerpb.Spanner.MapStorageConfig getMapStorageConfig() {
        if (mapStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 7) {
            return (spannerpb.Spanner.MapStorageConfig) storageConfig_;
          }
          return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
        } else {
          if (storageConfigCase_ == 7) {
            return mapStorageConfigBuilder_.getMessage();
          }
          return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public Builder setMapStorageConfig(spannerpb.Spanner.MapStorageConfig value) {
        if (mapStorageConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          storageConfig_ = value;
          onChanged();
        } else {
          mapStorageConfigBuilder_.setMessage(value);
        }
        storageConfigCase_ = 7;
        return this;
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public Builder setMapStorageConfig(
          spannerpb.Spanner.MapStorageConfig.Builder builderForValue) {
        if (mapStorageConfigBuilder_ == null) {
          storageConfig_ = builderForValue.build();
          onChanged();
        } else {
          mapStorageConfigBuilder_.setMessage(builderForValue.build());
        }
        storageConfigCase_ = 7;
        return this;
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public Builder mergeMapStorageConfig(spannerpb.Spanner.MapStorageConfig value) {
        if (mapStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 7 &&
              storageConfig_ != spannerpb.Spanner.MapStorageConfig.getDefaultInstance()) {
            storageConfig_ = spannerpb.Spanner.MapStorageConfig.newBuilder((spannerpb.Spanner.MapStorageConfig) storageConfig_)
                .mergeFrom(value).buildPartial();
          } else {
            storageConfig_ = value;
          }
          onChanged();
        } else {
          if (storageConfigCase_ == 7) {
            mapStorageConfigBuilder_.mergeFrom(value);
          }
          mapStorageConfigBuilder_.setMessage(value);
        }
        storageConfigCase_ = 7;
        return this;
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public Builder clearMapStorageConfig() {
        if (mapStorageConfigBuilder_ == null) {
          if (storageConfigCase_ == 7) {
            storageConfigCase_ = 0;
            storageConfig_ = null;
            onChanged();
          }
        } else {
          if (storageConfigCase_ == 7) {
            storageConfigCase_ = 0;
            storageConfig_ = null;
          }
          mapStorageConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public spannerpb.Spanner.MapStorageConfig.Builder getMapStorageConfigBuilder() {
        return getMapStorageConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      public spannerpb.Spanner.MapStorageConfigOrBuilder getMapStorageConfigOrBuilder() {
        if ((storageConfigCase_ == 7) && (mapStorageConfigBuilder_ != null)) {
          return mapStorageConfigBuilder_.getMessageOrBuilder();
        } else {
          if (storageConfigCase_ == 7) {
            return (spannerpb.Spanner.MapStorageConfig) storageConfig_;
          }
          return spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
        }
      }
      /**
       * <code>.spannerpb.MapStorageConfig map_storage_config = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          spannerpb.Spanner.MapStorageConfig, spannerpb.Spanner.MapStorageConfig.Builder, spannerpb.Spanner.MapStorageConfigOrBuilder> 
          getMapStorageConfigFieldBuilder() {
        if (mapStorageConfigBuilder_ == null) {
          if (!(storageConfigCase_ == 7)) {
            storageConfig_ = spannerpb.Spanner.MapStorageConfig.getDefaultInstance();
          }
          mapStorageConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              spannerpb.Spanner.MapStorageConfig, spannerpb.Spanner.MapStorageConfig.Builder, spannerpb.Spanner.MapStorageConfigOrBuilder>(
                  (spannerpb.Spanner.MapStorageConfig) storageConfig_,
                  getParentForChildren(),
                  isClean());
          storageConfig_ = null;
        }
        storageConfigCase_ = 7;
        onChanged();;
        return mapStorageConfigBuilder_;
      }

      private long maxRootDurationMillis_ ;
      /**
       * <pre>
       * max_root_duration_millis is the interval after which a new signed root is
       * produced even if there have been no submission.  If zero, this behavior is
       * disabled.
       * </pre>
       *
       * <code>int64 max_root_duration_millis = 17;</code>
       */
      public long getMaxRootDurationMillis() {
        return maxRootDurationMillis_;
      }
      /**
       * <pre>
       * max_root_duration_millis is the interval after which a new signed root is
       * produced even if there have been no submission.  If zero, this behavior is
       * disabled.
       * </pre>
       *
       * <code>int64 max_root_duration_millis = 17;</code>
       */
      public Builder setMaxRootDurationMillis(long value) {
        
        maxRootDurationMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * max_root_duration_millis is the interval after which a new signed root is
       * produced even if there have been no submission.  If zero, this behavior is
       * disabled.
       * </pre>
       *
       * <code>int64 max_root_duration_millis = 17;</code>
       */
      public Builder clearMaxRootDurationMillis() {
        
        maxRootDurationMillis_ = 0L;
        onChanged();
        return this;
      }

      private boolean deleted_ ;
      /**
       * <pre>
       * If true the tree was soft deleted.
       * </pre>
       *
       * <code>bool deleted = 18;</code>
       */
      public boolean getDeleted() {
        return deleted_;
      }
      /**
       * <pre>
       * If true the tree was soft deleted.
       * </pre>
       *
       * <code>bool deleted = 18;</code>
       */
      public Builder setDeleted(boolean value) {
        
        deleted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true the tree was soft deleted.
       * </pre>
       *
       * <code>bool deleted = 18;</code>
       */
      public Builder clearDeleted() {
        
        deleted_ = false;
        onChanged();
        return this;
      }

      private long deleteTimeNanos_ ;
      /**
       * <pre>
       * Time of tree deletion, if any.
       * </pre>
       *
       * <code>int64 delete_time_nanos = 19;</code>
       */
      public long getDeleteTimeNanos() {
        return deleteTimeNanos_;
      }
      /**
       * <pre>
       * Time of tree deletion, if any.
       * </pre>
       *
       * <code>int64 delete_time_nanos = 19;</code>
       */
      public Builder setDeleteTimeNanos(long value) {
        
        deleteTimeNanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time of tree deletion, if any.
       * </pre>
       *
       * <code>int64 delete_time_nanos = 19;</code>
       */
      public Builder clearDeleteTimeNanos() {
        
        deleteTimeNanos_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spannerpb.TreeInfo)
    }

    // @@protoc_insertion_point(class_scope:spannerpb.TreeInfo)
    private static final spannerpb.Spanner.TreeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spannerpb.Spanner.TreeInfo();
    }

    public static spannerpb.Spanner.TreeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TreeInfo>
        PARSER = new com.google.protobuf.AbstractParser<TreeInfo>() {
      public TreeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TreeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TreeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TreeInfo> getParserForType() {
      return PARSER;
    }

    public spannerpb.Spanner.TreeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TreeHeadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:spannerpb.TreeHead)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * tree_id identifies the tree this TreeHead is built from.
     * </pre>
     *
     * <code>int64 tree_id = 1;</code>
     */
    long getTreeId();

    /**
     * <pre>
     * ts_nanos is the nanosecond resolution timestamp at which the
     * TreeHead was created.
     * </pre>
     *
     * <code>int64 ts_nanos = 2;</code>
     */
    long getTsNanos();

    /**
     * <pre>
     * tree_size is the number of entries in the tree.
     * </pre>
     *
     * <code>int64 tree_size = 3;</code>
     */
    long getTreeSize();

    /**
     * <pre>
     * root_hash is the root of the tree.
     * </pre>
     *
     * <code>bytes root_hash = 4;</code>
     */
    com.google.protobuf.ByteString getRootHash();

    /**
     * <pre>
     * signature holds the raw digital signature across the serialized log_root
     * (not present) represented by the data in this TreeHead.
     * </pre>
     *
     * <code>bytes signature = 10;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * tree_revision identifies the revision at which the TreeHead was created.
     * </pre>
     *
     * <code>int64 tree_revision = 6;</code>
     */
    long getTreeRevision();

    /**
     * <code>bytes metadata = 9;</code>
     */
    com.google.protobuf.ByteString getMetadata();
  }
  /**
   * <pre>
   * TreeHead is the storage format for Trillian's commitment to a particular
   * tree state.
   * </pre>
   *
   * Protobuf type {@code spannerpb.TreeHead}
   */
  public  static final class TreeHead extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:spannerpb.TreeHead)
      TreeHeadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TreeHead.newBuilder() to construct.
    private TreeHead(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TreeHead() {
      treeId_ = 0L;
      tsNanos_ = 0L;
      treeSize_ = 0L;
      rootHash_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      treeRevision_ = 0L;
      metadata_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TreeHead(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              treeId_ = input.readInt64();
              break;
            }
            case 16: {

              tsNanos_ = input.readInt64();
              break;
            }
            case 24: {

              treeSize_ = input.readInt64();
              break;
            }
            case 34: {

              rootHash_ = input.readBytes();
              break;
            }
            case 48: {

              treeRevision_ = input.readInt64();
              break;
            }
            case 74: {

              metadata_ = input.readBytes();
              break;
            }
            case 82: {

              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return spannerpb.Spanner.internal_static_spannerpb_TreeHead_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return spannerpb.Spanner.internal_static_spannerpb_TreeHead_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              spannerpb.Spanner.TreeHead.class, spannerpb.Spanner.TreeHead.Builder.class);
    }

    public static final int TREE_ID_FIELD_NUMBER = 1;
    private long treeId_;
    /**
     * <pre>
     * tree_id identifies the tree this TreeHead is built from.
     * </pre>
     *
     * <code>int64 tree_id = 1;</code>
     */
    public long getTreeId() {
      return treeId_;
    }

    public static final int TS_NANOS_FIELD_NUMBER = 2;
    private long tsNanos_;
    /**
     * <pre>
     * ts_nanos is the nanosecond resolution timestamp at which the
     * TreeHead was created.
     * </pre>
     *
     * <code>int64 ts_nanos = 2;</code>
     */
    public long getTsNanos() {
      return tsNanos_;
    }

    public static final int TREE_SIZE_FIELD_NUMBER = 3;
    private long treeSize_;
    /**
     * <pre>
     * tree_size is the number of entries in the tree.
     * </pre>
     *
     * <code>int64 tree_size = 3;</code>
     */
    public long getTreeSize() {
      return treeSize_;
    }

    public static final int ROOT_HASH_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString rootHash_;
    /**
     * <pre>
     * root_hash is the root of the tree.
     * </pre>
     *
     * <code>bytes root_hash = 4;</code>
     */
    public com.google.protobuf.ByteString getRootHash() {
      return rootHash_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 10;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature holds the raw digital signature across the serialized log_root
     * (not present) represented by the data in this TreeHead.
     * </pre>
     *
     * <code>bytes signature = 10;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int TREE_REVISION_FIELD_NUMBER = 6;
    private long treeRevision_;
    /**
     * <pre>
     * tree_revision identifies the revision at which the TreeHead was created.
     * </pre>
     *
     * <code>int64 tree_revision = 6;</code>
     */
    public long getTreeRevision() {
      return treeRevision_;
    }

    public static final int METADATA_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString metadata_;
    /**
     * <code>bytes metadata = 9;</code>
     */
    public com.google.protobuf.ByteString getMetadata() {
      return metadata_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (treeId_ != 0L) {
        output.writeInt64(1, treeId_);
      }
      if (tsNanos_ != 0L) {
        output.writeInt64(2, tsNanos_);
      }
      if (treeSize_ != 0L) {
        output.writeInt64(3, treeSize_);
      }
      if (!rootHash_.isEmpty()) {
        output.writeBytes(4, rootHash_);
      }
      if (treeRevision_ != 0L) {
        output.writeInt64(6, treeRevision_);
      }
      if (!metadata_.isEmpty()) {
        output.writeBytes(9, metadata_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(10, signature_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (treeId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, treeId_);
      }
      if (tsNanos_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, tsNanos_);
      }
      if (treeSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, treeSize_);
      }
      if (!rootHash_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, rootHash_);
      }
      if (treeRevision_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, treeRevision_);
      }
      if (!metadata_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, metadata_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof spannerpb.Spanner.TreeHead)) {
        return super.equals(obj);
      }
      spannerpb.Spanner.TreeHead other = (spannerpb.Spanner.TreeHead) obj;

      boolean result = true;
      result = result && (getTreeId()
          == other.getTreeId());
      result = result && (getTsNanos()
          == other.getTsNanos());
      result = result && (getTreeSize()
          == other.getTreeSize());
      result = result && getRootHash()
          .equals(other.getRootHash());
      result = result && getSignature()
          .equals(other.getSignature());
      result = result && (getTreeRevision()
          == other.getTreeRevision());
      result = result && getMetadata()
          .equals(other.getMetadata());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TREE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTreeId());
      hash = (37 * hash) + TS_NANOS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTsNanos());
      hash = (37 * hash) + TREE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTreeSize());
      hash = (37 * hash) + ROOT_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getRootHash().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (37 * hash) + TREE_REVISION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTreeRevision());
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static spannerpb.Spanner.TreeHead parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeHead parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeHead parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static spannerpb.Spanner.TreeHead parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(spannerpb.Spanner.TreeHead prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TreeHead is the storage format for Trillian's commitment to a particular
     * tree state.
     * </pre>
     *
     * Protobuf type {@code spannerpb.TreeHead}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:spannerpb.TreeHead)
        spannerpb.Spanner.TreeHeadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeHead_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeHead_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                spannerpb.Spanner.TreeHead.class, spannerpb.Spanner.TreeHead.Builder.class);
      }

      // Construct using spannerpb.Spanner.TreeHead.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        treeId_ = 0L;

        tsNanos_ = 0L;

        treeSize_ = 0L;

        rootHash_ = com.google.protobuf.ByteString.EMPTY;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        treeRevision_ = 0L;

        metadata_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return spannerpb.Spanner.internal_static_spannerpb_TreeHead_descriptor;
      }

      public spannerpb.Spanner.TreeHead getDefaultInstanceForType() {
        return spannerpb.Spanner.TreeHead.getDefaultInstance();
      }

      public spannerpb.Spanner.TreeHead build() {
        spannerpb.Spanner.TreeHead result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public spannerpb.Spanner.TreeHead buildPartial() {
        spannerpb.Spanner.TreeHead result = new spannerpb.Spanner.TreeHead(this);
        result.treeId_ = treeId_;
        result.tsNanos_ = tsNanos_;
        result.treeSize_ = treeSize_;
        result.rootHash_ = rootHash_;
        result.signature_ = signature_;
        result.treeRevision_ = treeRevision_;
        result.metadata_ = metadata_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof spannerpb.Spanner.TreeHead) {
          return mergeFrom((spannerpb.Spanner.TreeHead)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(spannerpb.Spanner.TreeHead other) {
        if (other == spannerpb.Spanner.TreeHead.getDefaultInstance()) return this;
        if (other.getTreeId() != 0L) {
          setTreeId(other.getTreeId());
        }
        if (other.getTsNanos() != 0L) {
          setTsNanos(other.getTsNanos());
        }
        if (other.getTreeSize() != 0L) {
          setTreeSize(other.getTreeSize());
        }
        if (other.getRootHash() != com.google.protobuf.ByteString.EMPTY) {
          setRootHash(other.getRootHash());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        if (other.getTreeRevision() != 0L) {
          setTreeRevision(other.getTreeRevision());
        }
        if (other.getMetadata() != com.google.protobuf.ByteString.EMPTY) {
          setMetadata(other.getMetadata());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        spannerpb.Spanner.TreeHead parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (spannerpb.Spanner.TreeHead) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long treeId_ ;
      /**
       * <pre>
       * tree_id identifies the tree this TreeHead is built from.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public long getTreeId() {
        return treeId_;
      }
      /**
       * <pre>
       * tree_id identifies the tree this TreeHead is built from.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public Builder setTreeId(long value) {
        
        treeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_id identifies the tree this TreeHead is built from.
       * </pre>
       *
       * <code>int64 tree_id = 1;</code>
       */
      public Builder clearTreeId() {
        
        treeId_ = 0L;
        onChanged();
        return this;
      }

      private long tsNanos_ ;
      /**
       * <pre>
       * ts_nanos is the nanosecond resolution timestamp at which the
       * TreeHead was created.
       * </pre>
       *
       * <code>int64 ts_nanos = 2;</code>
       */
      public long getTsNanos() {
        return tsNanos_;
      }
      /**
       * <pre>
       * ts_nanos is the nanosecond resolution timestamp at which the
       * TreeHead was created.
       * </pre>
       *
       * <code>int64 ts_nanos = 2;</code>
       */
      public Builder setTsNanos(long value) {
        
        tsNanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ts_nanos is the nanosecond resolution timestamp at which the
       * TreeHead was created.
       * </pre>
       *
       * <code>int64 ts_nanos = 2;</code>
       */
      public Builder clearTsNanos() {
        
        tsNanos_ = 0L;
        onChanged();
        return this;
      }

      private long treeSize_ ;
      /**
       * <pre>
       * tree_size is the number of entries in the tree.
       * </pre>
       *
       * <code>int64 tree_size = 3;</code>
       */
      public long getTreeSize() {
        return treeSize_;
      }
      /**
       * <pre>
       * tree_size is the number of entries in the tree.
       * </pre>
       *
       * <code>int64 tree_size = 3;</code>
       */
      public Builder setTreeSize(long value) {
        
        treeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_size is the number of entries in the tree.
       * </pre>
       *
       * <code>int64 tree_size = 3;</code>
       */
      public Builder clearTreeSize() {
        
        treeSize_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rootHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * root_hash is the root of the tree.
       * </pre>
       *
       * <code>bytes root_hash = 4;</code>
       */
      public com.google.protobuf.ByteString getRootHash() {
        return rootHash_;
      }
      /**
       * <pre>
       * root_hash is the root of the tree.
       * </pre>
       *
       * <code>bytes root_hash = 4;</code>
       */
      public Builder setRootHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rootHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * root_hash is the root of the tree.
       * </pre>
       *
       * <code>bytes root_hash = 4;</code>
       */
      public Builder clearRootHash() {
        
        rootHash_ = getDefaultInstance().getRootHash();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature holds the raw digital signature across the serialized log_root
       * (not present) represented by the data in this TreeHead.
       * </pre>
       *
       * <code>bytes signature = 10;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature holds the raw digital signature across the serialized log_root
       * (not present) represented by the data in this TreeHead.
       * </pre>
       *
       * <code>bytes signature = 10;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature holds the raw digital signature across the serialized log_root
       * (not present) represented by the data in this TreeHead.
       * </pre>
       *
       * <code>bytes signature = 10;</code>
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private long treeRevision_ ;
      /**
       * <pre>
       * tree_revision identifies the revision at which the TreeHead was created.
       * </pre>
       *
       * <code>int64 tree_revision = 6;</code>
       */
      public long getTreeRevision() {
        return treeRevision_;
      }
      /**
       * <pre>
       * tree_revision identifies the revision at which the TreeHead was created.
       * </pre>
       *
       * <code>int64 tree_revision = 6;</code>
       */
      public Builder setTreeRevision(long value) {
        
        treeRevision_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tree_revision identifies the revision at which the TreeHead was created.
       * </pre>
       *
       * <code>int64 tree_revision = 6;</code>
       */
      public Builder clearTreeRevision() {
        
        treeRevision_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString metadata_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes metadata = 9;</code>
       */
      public com.google.protobuf.ByteString getMetadata() {
        return metadata_;
      }
      /**
       * <code>bytes metadata = 9;</code>
       */
      public Builder setMetadata(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        metadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes metadata = 9;</code>
       */
      public Builder clearMetadata() {
        
        metadata_ = getDefaultInstance().getMetadata();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:spannerpb.TreeHead)
    }

    // @@protoc_insertion_point(class_scope:spannerpb.TreeHead)
    private static final spannerpb.Spanner.TreeHead DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new spannerpb.Spanner.TreeHead();
    }

    public static spannerpb.Spanner.TreeHead getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TreeHead>
        PARSER = new com.google.protobuf.AbstractParser<TreeHead>() {
      public TreeHead parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TreeHead(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TreeHead> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TreeHead> getParserForType() {
      return PARSER;
    }

    public spannerpb.Spanner.TreeHead getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spannerpb_LogStorageConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spannerpb_LogStorageConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spannerpb_MapStorageConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spannerpb_MapStorageConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spannerpb_TreeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spannerpb_TreeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_spannerpb_TreeHead_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_spannerpb_TreeHead_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,storage/cloudspanner/spannerpb/spanner" +
      ".proto\022\tspannerpb\032\031google/protobuf/any.p" +
      "roto\"I\n\020LogStorageConfig\022\031\n\021num_unseq_bu" +
      "ckets\030\001 \001(\003\022\032\n\022num_merkle_buckets\030\002 \001(\003\"" +
      "\022\n\020MapStorageConfig\"\223\005\n\010TreeInfo\022\017\n\007tree" +
      "_id\030\001 \001(\003\022\016\n\006key_id\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022" +
      "\023\n\013description\030\004 \001(\t\022&\n\ttree_type\030\005 \001(\0162" +
      "\023.spannerpb.TreeType\022(\n\ntree_state\030\010 \001(\016" +
      "2\024.spannerpb.TreeState\022.\n\rhash_strategy\030" +
      "\t \001(\0162\027.spannerpb.HashStrategy\0220\n\016hash_a" +
      "lgorithm\030\n \001(\0162\030.spannerpb.HashAlgorithm" +
      "\022:\n\023signature_algorithm\030\013 \001(\0162\035.spannerp" +
      "b.SignatureAlgorithm\022\031\n\021create_time_nano" +
      "s\030\r \001(\003\022\031\n\021update_time_nanos\030\016 \001(\003\022)\n\013pr" +
      "ivate_key\030\017 \001(\0132\024.google.protobuf.Any\022\026\n" +
      "\016public_key_der\030\020 \001(\014\0229\n\022log_storage_con" +
      "fig\030\006 \001(\0132\033.spannerpb.LogStorageConfigH\000" +
      "\0229\n\022map_storage_config\030\007 \001(\0132\033.spannerpb" +
      ".MapStorageConfigH\000\022 \n\030max_root_duration" +
      "_millis\030\021 \001(\003\022\017\n\007deleted\030\022 \001(\010\022\031\n\021delete" +
      "_time_nanos\030\023 \001(\003B\020\n\016storage_configJ\004\010\014\020" +
      "\r\"\241\001\n\010TreeHead\022\017\n\007tree_id\030\001 \001(\003\022\020\n\010ts_na" +
      "nos\030\002 \001(\003\022\021\n\ttree_size\030\003 \001(\003\022\021\n\troot_has" +
      "h\030\004 \001(\014\022\021\n\tsignature\030\n \001(\014\022\025\n\rtree_revis" +
      "ion\030\006 \001(\003\022\020\n\010metadata\030\t \001(\014J\004\010\005\020\006J\004\010\010\020\tJ" +
      "\004\010\007\020\010*;\n\tTreeState\022\026\n\022UNKNOWN_TREE_STATE" +
      "\020\000\022\n\n\006ACTIVE\020\001\022\n\n\006FROZEN\020\002*=\n\010TreeType\022\013" +
      "\n\007UNKNOWN\020\000\022\007\n\003LOG\020\001\022\007\n\003MAP\020\002\022\022\n\016PREORDE" +
      "RED_LOG\020\003*\221\001\n\014HashStrategy\022\031\n\025UNKNOWN_HA" +
      "SH_STRATEGY\020\000\022\014\n\010RFC_6962\020\001\022\023\n\017TEST_MAP_" +
      "HASHER\020\002\022\031\n\025OBJECT_RFC6962_SHA256\020\003\022\025\n\021C" +
      "ONIKS_SHA512_256\020\004\022\021\n\rCONIKS_SHA256\020\005*%\n" +
      "\rHashAlgorithm\022\010\n\004NONE\020\000\022\n\n\006SHA256\020\004*7\n\022" +
      "SignatureAlgorithm\022\r\n\tANONYMOUS\020\000\022\007\n\003RSA" +
      "\020\001\022\t\n\005ECDSA\020\003B;Z9github.com/google/trill" +
      "ian/storage/cloudspanner/spannerpbb\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_spannerpb_LogStorageConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_spannerpb_LogStorageConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spannerpb_LogStorageConfig_descriptor,
        new java.lang.String[] { "NumUnseqBuckets", "NumMerkleBuckets", });
    internal_static_spannerpb_MapStorageConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_spannerpb_MapStorageConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spannerpb_MapStorageConfig_descriptor,
        new java.lang.String[] { });
    internal_static_spannerpb_TreeInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_spannerpb_TreeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spannerpb_TreeInfo_descriptor,
        new java.lang.String[] { "TreeId", "KeyId", "Name", "Description", "TreeType", "TreeState", "HashStrategy", "HashAlgorithm", "SignatureAlgorithm", "CreateTimeNanos", "UpdateTimeNanos", "PrivateKey", "PublicKeyDer", "LogStorageConfig", "MapStorageConfig", "MaxRootDurationMillis", "Deleted", "DeleteTimeNanos", "StorageConfig", });
    internal_static_spannerpb_TreeHead_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_spannerpb_TreeHead_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_spannerpb_TreeHead_descriptor,
        new java.lang.String[] { "TreeId", "TsNanos", "TreeSize", "RootHash", "Signature", "TreeRevision", "Metadata", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
