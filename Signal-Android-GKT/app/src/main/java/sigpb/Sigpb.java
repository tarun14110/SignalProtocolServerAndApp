// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/sigpb/sigpb.proto

package sigpb;

public final class Sigpb {
  private Sigpb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DigitallySignedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sigpb.DigitallySigned)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     */
    int getHashAlgorithmValue();
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     */
    sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm();

    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     */
    int getSignatureAlgorithmValue();
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     */
    sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm();

    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * Protocol buffer encoding of the TLS DigitallySigned type, from RFC 5246 ยง4.7.
   * </pre>
   *
   * Protobuf type {@code sigpb.DigitallySigned}
   */
  public  static final class DigitallySigned extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:sigpb.DigitallySigned)
      DigitallySignedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DigitallySigned.newBuilder() to construct.
    private DigitallySigned(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DigitallySigned() {
      hashAlgorithm_ = 0;
      signatureAlgorithm_ = 0;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DigitallySigned(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              hashAlgorithm_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              signatureAlgorithm_ = rawValue;
              break;
            }
            case 26: {

              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return sigpb.Sigpb.internal_static_sigpb_DigitallySigned_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return sigpb.Sigpb.internal_static_sigpb_DigitallySigned_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              sigpb.Sigpb.DigitallySigned.class, sigpb.Sigpb.DigitallySigned.Builder.class);
    }

    /**
     * <pre>
     * HashAlgorithm defines the approved methods for object hashing.
     * Supported hash algorithms. The numbering space is the same as for TLS,
     * given in RFC 5246 s7.4.1.4.1 and at:
     * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-18
     * </pre>
     *
     * Protobuf enum {@code sigpb.DigitallySigned.HashAlgorithm}
     */
    public enum HashAlgorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * No hash algorithm is used.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <pre>
       * SHA256 is used.
       * </pre>
       *
       * <code>SHA256 = 4;</code>
       */
      SHA256(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * No hash algorithm is used.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <pre>
       * SHA256 is used.
       * </pre>
       *
       * <code>SHA256 = 4;</code>
       */
      public static final int SHA256_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HashAlgorithm valueOf(int value) {
        return forNumber(value);
      }

      public static HashAlgorithm forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 4: return SHA256;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          HashAlgorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>() {
              public HashAlgorithm findValueByNumber(int number) {
                return HashAlgorithm.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return sigpb.Sigpb.DigitallySigned.getDescriptor().getEnumTypes().get(0);
      }

      private static final HashAlgorithm[] VALUES = values();

      public static HashAlgorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private HashAlgorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sigpb.DigitallySigned.HashAlgorithm)
    }

    /**
     * <pre>
     * SignatureAlgorithm defines the algorithm used to sign the object.
     * Supported signature algorithms. The numbering space is the same as for TLS,
     * given in RFC 5246 s7.4.1.4.1 and at:
     * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-16
     * </pre>
     *
     * Protobuf enum {@code sigpb.DigitallySigned.SignatureAlgorithm}
     */
    public enum SignatureAlgorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Anonymous signature scheme.
       * </pre>
       *
       * <code>ANONYMOUS = 0;</code>
       */
      ANONYMOUS(0),
      /**
       * <pre>
       * RSA signature scheme.
       * </pre>
       *
       * <code>RSA = 1;</code>
       */
      RSA(1),
      /**
       * <pre>
       * ECDSA signature scheme.
       * </pre>
       *
       * <code>ECDSA = 3;</code>
       */
      ECDSA(3),
      /**
       * <pre>
       * Ed25519 signature scheme.
       * </pre>
       *
       * <code>ED25519 = 7;</code>
       */
      ED25519(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Anonymous signature scheme.
       * </pre>
       *
       * <code>ANONYMOUS = 0;</code>
       */
      public static final int ANONYMOUS_VALUE = 0;
      /**
       * <pre>
       * RSA signature scheme.
       * </pre>
       *
       * <code>RSA = 1;</code>
       */
      public static final int RSA_VALUE = 1;
      /**
       * <pre>
       * ECDSA signature scheme.
       * </pre>
       *
       * <code>ECDSA = 3;</code>
       */
      public static final int ECDSA_VALUE = 3;
      /**
       * <pre>
       * Ed25519 signature scheme.
       * </pre>
       *
       * <code>ED25519 = 7;</code>
       */
      public static final int ED25519_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SignatureAlgorithm valueOf(int value) {
        return forNumber(value);
      }

      public static SignatureAlgorithm forNumber(int value) {
        switch (value) {
          case 0: return ANONYMOUS;
          case 1: return RSA;
          case 3: return ECDSA;
          case 7: return ED25519;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SignatureAlgorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>() {
              public SignatureAlgorithm findValueByNumber(int number) {
                return SignatureAlgorithm.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return sigpb.Sigpb.DigitallySigned.getDescriptor().getEnumTypes().get(1);
      }

      private static final SignatureAlgorithm[] VALUES = values();

      public static SignatureAlgorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SignatureAlgorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sigpb.DigitallySigned.SignatureAlgorithm)
    }

    public static final int HASH_ALGORITHM_FIELD_NUMBER = 1;
    private int hashAlgorithm_;
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     */
    public int getHashAlgorithmValue() {
      return hashAlgorithm_;
    }
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     */
    public sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm() {
      sigpb.Sigpb.DigitallySigned.HashAlgorithm result = sigpb.Sigpb.DigitallySigned.HashAlgorithm.valueOf(hashAlgorithm_);
      return result == null ? sigpb.Sigpb.DigitallySigned.HashAlgorithm.UNRECOGNIZED : result;
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 2;
    private int signatureAlgorithm_;
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     */
    public int getSignatureAlgorithmValue() {
      return signatureAlgorithm_;
    }
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     */
    public sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm() {
      sigpb.Sigpb.DigitallySigned.SignatureAlgorithm result = sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.valueOf(signatureAlgorithm_);
      return result == null ? sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.UNRECOGNIZED : result;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hashAlgorithm_ != sigpb.Sigpb.DigitallySigned.HashAlgorithm.NONE.getNumber()) {
        output.writeEnum(1, hashAlgorithm_);
      }
      if (signatureAlgorithm_ != sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.ANONYMOUS.getNumber()) {
        output.writeEnum(2, signatureAlgorithm_);
      }
      if (!signature_.isEmpty()) {
        output.writeBytes(3, signature_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (hashAlgorithm_ != sigpb.Sigpb.DigitallySigned.HashAlgorithm.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, hashAlgorithm_);
      }
      if (signatureAlgorithm_ != sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.ANONYMOUS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, signatureAlgorithm_);
      }
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof sigpb.Sigpb.DigitallySigned)) {
        return super.equals(obj);
      }
      sigpb.Sigpb.DigitallySigned other = (sigpb.Sigpb.DigitallySigned) obj;

      boolean result = true;
      result = result && hashAlgorithm_ == other.hashAlgorithm_;
      result = result && signatureAlgorithm_ == other.signatureAlgorithm_;
      result = result && getSignature()
          .equals(other.getSignature());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HASH_ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + hashAlgorithm_;
      hash = (37 * hash) + SIGNATURE_ALGORITHM_FIELD_NUMBER;
      hash = (53 * hash) + signatureAlgorithm_;
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static sigpb.Sigpb.DigitallySigned parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static sigpb.Sigpb.DigitallySigned parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static sigpb.Sigpb.DigitallySigned parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(sigpb.Sigpb.DigitallySigned prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Protocol buffer encoding of the TLS DigitallySigned type, from RFC 5246 ยง4.7.
     * </pre>
     *
     * Protobuf type {@code sigpb.DigitallySigned}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:sigpb.DigitallySigned)
        sigpb.Sigpb.DigitallySignedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return sigpb.Sigpb.internal_static_sigpb_DigitallySigned_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return sigpb.Sigpb.internal_static_sigpb_DigitallySigned_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                sigpb.Sigpb.DigitallySigned.class, sigpb.Sigpb.DigitallySigned.Builder.class);
      }

      // Construct using sigpb.Sigpb.DigitallySigned.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hashAlgorithm_ = 0;

        signatureAlgorithm_ = 0;

        signature_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return sigpb.Sigpb.internal_static_sigpb_DigitallySigned_descriptor;
      }

      public sigpb.Sigpb.DigitallySigned getDefaultInstanceForType() {
        return sigpb.Sigpb.DigitallySigned.getDefaultInstance();
      }

      public sigpb.Sigpb.DigitallySigned build() {
        sigpb.Sigpb.DigitallySigned result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public sigpb.Sigpb.DigitallySigned buildPartial() {
        sigpb.Sigpb.DigitallySigned result = new sigpb.Sigpb.DigitallySigned(this);
        result.hashAlgorithm_ = hashAlgorithm_;
        result.signatureAlgorithm_ = signatureAlgorithm_;
        result.signature_ = signature_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof sigpb.Sigpb.DigitallySigned) {
          return mergeFrom((sigpb.Sigpb.DigitallySigned)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(sigpb.Sigpb.DigitallySigned other) {
        if (other == sigpb.Sigpb.DigitallySigned.getDefaultInstance()) return this;
        if (other.hashAlgorithm_ != 0) {
          setHashAlgorithmValue(other.getHashAlgorithmValue());
        }
        if (other.signatureAlgorithm_ != 0) {
          setSignatureAlgorithmValue(other.getSignatureAlgorithmValue());
        }
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        sigpb.Sigpb.DigitallySigned parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (sigpb.Sigpb.DigitallySigned) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int hashAlgorithm_ = 0;
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       */
      public int getHashAlgorithmValue() {
        return hashAlgorithm_;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       */
      public Builder setHashAlgorithmValue(int value) {
        hashAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       */
      public sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm() {
        sigpb.Sigpb.DigitallySigned.HashAlgorithm result = sigpb.Sigpb.DigitallySigned.HashAlgorithm.valueOf(hashAlgorithm_);
        return result == null ? sigpb.Sigpb.DigitallySigned.HashAlgorithm.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       */
      public Builder setHashAlgorithm(sigpb.Sigpb.DigitallySigned.HashAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        hashAlgorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       */
      public Builder clearHashAlgorithm() {
        
        hashAlgorithm_ = 0;
        onChanged();
        return this;
      }

      private int signatureAlgorithm_ = 0;
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       */
      public int getSignatureAlgorithmValue() {
        return signatureAlgorithm_;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       */
      public Builder setSignatureAlgorithmValue(int value) {
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       */
      public sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm() {
        sigpb.Sigpb.DigitallySigned.SignatureAlgorithm result = sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.valueOf(signatureAlgorithm_);
        return result == null ? sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       */
      public Builder setSignatureAlgorithm(sigpb.Sigpb.DigitallySigned.SignatureAlgorithm value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        signatureAlgorithm_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       */
      public Builder clearSignatureAlgorithm() {
        
        signatureAlgorithm_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       */
      public Builder clearSignature() {
        
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:sigpb.DigitallySigned)
    }

    // @@protoc_insertion_point(class_scope:sigpb.DigitallySigned)
    private static final sigpb.Sigpb.DigitallySigned DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new sigpb.Sigpb.DigitallySigned();
    }

    public static sigpb.Sigpb.DigitallySigned getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DigitallySigned>
        PARSER = new com.google.protobuf.AbstractParser<DigitallySigned>() {
      public DigitallySigned parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DigitallySigned(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DigitallySigned> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DigitallySigned> getParserForType() {
      return PARSER;
    }

    public sigpb.Sigpb.DigitallySigned getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_sigpb_DigitallySigned_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_sigpb_DigitallySigned_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030crypto/sigpb/sigpb.proto\022\005sigpb\"\227\002\n\017Di" +
      "gitallySigned\022<\n\016hash_algorithm\030\001 \001(\0162$." +
      "sigpb.DigitallySigned.HashAlgorithm\022F\n\023s" +
      "ignature_algorithm\030\002 \001(\0162).sigpb.Digital" +
      "lySigned.SignatureAlgorithm\022\021\n\tsignature" +
      "\030\003 \001(\014\"%\n\rHashAlgorithm\022\010\n\004NONE\020\000\022\n\n\006SHA" +
      "256\020\004\"D\n\022SignatureAlgorithm\022\r\n\tANONYMOUS" +
      "\020\000\022\007\n\003RSA\020\001\022\t\n\005ECDSA\020\003\022\013\n\007ED25519\020\007B)Z\'g" +
      "ithub.com/google/trillian/crypto/sigpbb\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_sigpb_DigitallySigned_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_sigpb_DigitallySigned_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_sigpb_DigitallySigned_descriptor,
        new java.lang.String[] { "HashAlgorithm", "SignatureAlgorithm", "Signature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
