// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/sequencer/sequencer_api.proto

package google.keytransparency.sequencer;

public final class SequencerApi {
  private SequencerApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MapMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.MapMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    java.util.List<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> 
        getSourcesList();
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice getSources(int index);
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    int getSourcesCount();
  }
  /**
   * Protobuf type {@code google.keytransparency.sequencer.MapMetadata}
   */
  public  static final class MapMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          MapMetadata, MapMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.MapMetadata)
      MapMetadataOrBuilder {
    private MapMetadata() {
      sources_ = emptyProtobufList();
    }
    public interface SourceSliceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.MapMetadata.SourceSlice)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * lowest_inclusive is the lowest primary key (inclusive) of the source
       * log that has been incorporated into this map revision. The primary
       * keys of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 lowest_inclusive = 1;</code>
       * @return The lowestInclusive.
       */
      long getLowestInclusive();

      /**
       * <pre>
       * highest_exclusive is the highest primary key (exclusive) of the source
       * log that has been incorporated into this map revision. The primary keys
       * of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 highest_exclusive = 2;</code>
       * @return The highestExclusive.
       */
      long getHighestExclusive();

      /**
       * <pre>
       * log_id is the ID of the source log.
       * </pre>
       *
       * <code>int64 log_id = 3;</code>
       * @return The logId.
       */
      long getLogId();
    }
    /**
     * <pre>
     * SourceSlice is the range of inputs that have been included in a map
     * revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.MapMetadata.SourceSlice}
     */
    public  static final class SourceSlice extends
        com.google.protobuf.GeneratedMessageLite<
            SourceSlice, SourceSlice.Builder> implements
        // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.MapMetadata.SourceSlice)
        SourceSliceOrBuilder {
      private SourceSlice() {
      }
      public static final int LOWEST_INCLUSIVE_FIELD_NUMBER = 1;
      private long lowestInclusive_;
      /**
       * <pre>
       * lowest_inclusive is the lowest primary key (inclusive) of the source
       * log that has been incorporated into this map revision. The primary
       * keys of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 lowest_inclusive = 1;</code>
       * @return The lowestInclusive.
       */
      @java.lang.Override
      public long getLowestInclusive() {
        return lowestInclusive_;
      }
      /**
       * <pre>
       * lowest_inclusive is the lowest primary key (inclusive) of the source
       * log that has been incorporated into this map revision. The primary
       * keys of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 lowest_inclusive = 1;</code>
       * @param value The lowestInclusive to set.
       */
      private void setLowestInclusive(long value) {
        
        lowestInclusive_ = value;
      }
      /**
       * <pre>
       * lowest_inclusive is the lowest primary key (inclusive) of the source
       * log that has been incorporated into this map revision. The primary
       * keys of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 lowest_inclusive = 1;</code>
       */
      private void clearLowestInclusive() {
        
        lowestInclusive_ = 0L;
      }

      public static final int HIGHEST_EXCLUSIVE_FIELD_NUMBER = 2;
      private long highestExclusive_;
      /**
       * <pre>
       * highest_exclusive is the highest primary key (exclusive) of the source
       * log that has been incorporated into this map revision. The primary keys
       * of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 highest_exclusive = 2;</code>
       * @return The highestExclusive.
       */
      @java.lang.Override
      public long getHighestExclusive() {
        return highestExclusive_;
      }
      /**
       * <pre>
       * highest_exclusive is the highest primary key (exclusive) of the source
       * log that has been incorporated into this map revision. The primary keys
       * of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 highest_exclusive = 2;</code>
       * @param value The highestExclusive to set.
       */
      private void setHighestExclusive(long value) {
        
        highestExclusive_ = value;
      }
      /**
       * <pre>
       * highest_exclusive is the highest primary key (exclusive) of the source
       * log that has been incorporated into this map revision. The primary keys
       * of logged items MUST be monotonically increasing.
       * Defined in terms of microseconds from the Unix epoch.
       * </pre>
       *
       * <code>int64 highest_exclusive = 2;</code>
       */
      private void clearHighestExclusive() {
        
        highestExclusive_ = 0L;
      }

      public static final int LOG_ID_FIELD_NUMBER = 3;
      private long logId_;
      /**
       * <pre>
       * log_id is the ID of the source log.
       * </pre>
       *
       * <code>int64 log_id = 3;</code>
       * @return The logId.
       */
      @java.lang.Override
      public long getLogId() {
        return logId_;
      }
      /**
       * <pre>
       * log_id is the ID of the source log.
       * </pre>
       *
       * <code>int64 log_id = 3;</code>
       * @param value The logId to set.
       */
      private void setLogId(long value) {
        
        logId_ = value;
      }
      /**
       * <pre>
       * log_id is the ID of the source log.
       * </pre>
       *
       * <code>int64 log_id = 3;</code>
       */
      private void clearLogId() {
        
        logId_ = 0L;
      }

      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice prototype) {
        return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * SourceSlice is the range of inputs that have been included in a map
       * revision.
       * </pre>
       *
       * Protobuf type {@code google.keytransparency.sequencer.MapMetadata.SourceSlice}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice, Builder> implements
          // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.MapMetadata.SourceSlice)
          google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSliceOrBuilder {
        // Construct using google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * lowest_inclusive is the lowest primary key (inclusive) of the source
         * log that has been incorporated into this map revision. The primary
         * keys of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 lowest_inclusive = 1;</code>
         * @return The lowestInclusive.
         */
        @java.lang.Override
        public long getLowestInclusive() {
          return instance.getLowestInclusive();
        }
        /**
         * <pre>
         * lowest_inclusive is the lowest primary key (inclusive) of the source
         * log that has been incorporated into this map revision. The primary
         * keys of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 lowest_inclusive = 1;</code>
         * @param value The lowestInclusive to set.
         * @return This builder for chaining.
         */
        public Builder setLowestInclusive(long value) {
          copyOnWrite();
          instance.setLowestInclusive(value);
          return this;
        }
        /**
         * <pre>
         * lowest_inclusive is the lowest primary key (inclusive) of the source
         * log that has been incorporated into this map revision. The primary
         * keys of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 lowest_inclusive = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearLowestInclusive() {
          copyOnWrite();
          instance.clearLowestInclusive();
          return this;
        }

        /**
         * <pre>
         * highest_exclusive is the highest primary key (exclusive) of the source
         * log that has been incorporated into this map revision. The primary keys
         * of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 highest_exclusive = 2;</code>
         * @return The highestExclusive.
         */
        @java.lang.Override
        public long getHighestExclusive() {
          return instance.getHighestExclusive();
        }
        /**
         * <pre>
         * highest_exclusive is the highest primary key (exclusive) of the source
         * log that has been incorporated into this map revision. The primary keys
         * of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 highest_exclusive = 2;</code>
         * @param value The highestExclusive to set.
         * @return This builder for chaining.
         */
        public Builder setHighestExclusive(long value) {
          copyOnWrite();
          instance.setHighestExclusive(value);
          return this;
        }
        /**
         * <pre>
         * highest_exclusive is the highest primary key (exclusive) of the source
         * log that has been incorporated into this map revision. The primary keys
         * of logged items MUST be monotonically increasing.
         * Defined in terms of microseconds from the Unix epoch.
         * </pre>
         *
         * <code>int64 highest_exclusive = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHighestExclusive() {
          copyOnWrite();
          instance.clearHighestExclusive();
          return this;
        }

        /**
         * <pre>
         * log_id is the ID of the source log.
         * </pre>
         *
         * <code>int64 log_id = 3;</code>
         * @return The logId.
         */
        @java.lang.Override
        public long getLogId() {
          return instance.getLogId();
        }
        /**
         * <pre>
         * log_id is the ID of the source log.
         * </pre>
         *
         * <code>int64 log_id = 3;</code>
         * @param value The logId to set.
         * @return This builder for chaining.
         */
        public Builder setLogId(long value) {
          copyOnWrite();
          instance.setLogId(value);
          return this;
        }
        /**
         * <pre>
         * log_id is the ID of the source log.
         * </pre>
         *
         * <code>int64 log_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearLogId() {
          copyOnWrite();
          instance.clearLogId();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.MapMetadata.SourceSlice)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "lowestInclusive_",
                "highestExclusive_",
                "logId_",
              };
              java.lang.String info =
                  "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0002\u0002\u0002" +
                  "\u0003\u0002";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> parser = PARSER;
            if (parser == null) {
              synchronized (google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.MapMetadata.SourceSlice)
      private static final google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice DEFAULT_INSTANCE;
      static {
        SourceSlice defaultInstance = new SourceSlice();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          SourceSlice.class, defaultInstance);
      }

      public static google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<SourceSlice> PARSER;

      public static com.google.protobuf.Parser<SourceSlice> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int SOURCES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> sources_;
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> getSourcesList() {
      return sources_;
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    public java.util.List<? extends google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSliceOrBuilder> 
        getSourcesOrBuilderList() {
      return sources_;
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    @java.lang.Override
    public int getSourcesCount() {
      return sources_.size();
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice getSources(int index) {
      return sources_.get(index);
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    public google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSliceOrBuilder getSourcesOrBuilder(
        int index) {
      return sources_.get(index);
    }
    private void ensureSourcesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> tmp = sources_;
      if (!tmp.isModifiable()) {
        sources_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void setSources(
        int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
      value.getClass();
  ensureSourcesIsMutable();
      sources_.set(index, value);
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void addSources(google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
      value.getClass();
  ensureSourcesIsMutable();
      sources_.add(value);
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void addSources(
        int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
      value.getClass();
  ensureSourcesIsMutable();
      sources_.add(index, value);
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void addAllSources(
        java.lang.Iterable<? extends google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> values) {
      ensureSourcesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sources_);
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void clearSources() {
      sources_ = emptyProtobufList();
    }
    /**
     * <pre>
     * sources is a list of log sources that were used to construct this map revision.
     * </pre>
     *
     * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
     */
    private void removeSources(int index) {
      ensureSourcesIsMutable();
      sources_.remove(index);
    }

    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.MapMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.MapMetadata prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code google.keytransparency.sequencer.MapMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.MapMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.MapMetadata)
        google.keytransparency.sequencer.SequencerApi.MapMetadataOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.MapMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> getSourcesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSourcesList());
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      @java.lang.Override
      public int getSourcesCount() {
        return instance.getSourcesCount();
      }/**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice getSources(int index) {
        return instance.getSources(index);
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder setSources(
          int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
        copyOnWrite();
        instance.setSources(index, value);
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder setSources(
          int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.Builder builderForValue) {
        copyOnWrite();
        instance.setSources(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder addSources(google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
        copyOnWrite();
        instance.addSources(value);
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder addSources(
          int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice value) {
        copyOnWrite();
        instance.addSources(index, value);
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder addSources(
          google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.Builder builderForValue) {
        copyOnWrite();
        instance.addSources(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder addSources(
          int index, google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.Builder builderForValue) {
        copyOnWrite();
        instance.addSources(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder addAllSources(
          java.lang.Iterable<? extends google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice> values) {
        copyOnWrite();
        instance.addAllSources(values);
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder clearSources() {
        copyOnWrite();
        instance.clearSources();
        return this;
      }
      /**
       * <pre>
       * sources is a list of log sources that were used to construct this map revision.
       * </pre>
       *
       * <code>repeated .google.keytransparency.sequencer.MapMetadata.SourceSlice sources = 2;</code>
       */
      public Builder removeSources(int index) {
        copyOnWrite();
        instance.removeSources(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.MapMetadata)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.MapMetadata();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sources_",
              google.keytransparency.sequencer.SequencerApi.MapMetadata.SourceSlice.class,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0002\u0002\u0001\u0000\u0001\u0000\u0002\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.MapMetadata> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.MapMetadata.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.MapMetadata>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.MapMetadata)
    private static final google.keytransparency.sequencer.SequencerApi.MapMetadata DEFAULT_INSTANCE;
    static {
      MapMetadata defaultInstance = new MapMetadata();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MapMetadata.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.MapMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MapMetadata> PARSER;

    public static com.google.protobuf.Parser<MapMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DefineRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.DefineRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * min_batch is the minimum number of items in a batch.
     * If less than min_batch items are available, nothing happens.
     * TODO(#1047): Replace with timeout so items in the log get processed
     * eventually.
     * </pre>
     *
     * <code>int32 min_batch = 2;</code>
     * @return The minBatch.
     */
    int getMinBatch();

    /**
     * <pre>
     * max_batch is the maximum number of items in a batch.
     * </pre>
     *
     * <code>int32 max_batch = 3;</code>
     * @return The maxBatch.
     */
    int getMaxBatch();

    /**
     * <pre>
     * max_unapplied is the maximum number of revisions that can be defined ahead
     * of applied revisions.
     * </pre>
     *
     * <code>int32 max_unapplied = 4;</code>
     * @return The maxUnapplied.
     */
    int getMaxUnapplied();
  }
  /**
   * <pre>
   * DefineRevisionsRequest contains information needed to define new revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.DefineRevisionsRequest}
   */
  public  static final class DefineRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          DefineRevisionsRequest, DefineRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.DefineRevisionsRequest)
      DefineRevisionsRequestOrBuilder {
    private DefineRevisionsRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory to examine the outstanding mutations for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int MIN_BATCH_FIELD_NUMBER = 2;
    private int minBatch_;
    /**
     * <pre>
     * min_batch is the minimum number of items in a batch.
     * If less than min_batch items are available, nothing happens.
     * TODO(#1047): Replace with timeout so items in the log get processed
     * eventually.
     * </pre>
     *
     * <code>int32 min_batch = 2;</code>
     * @return The minBatch.
     */
    @java.lang.Override
    public int getMinBatch() {
      return minBatch_;
    }
    /**
     * <pre>
     * min_batch is the minimum number of items in a batch.
     * If less than min_batch items are available, nothing happens.
     * TODO(#1047): Replace with timeout so items in the log get processed
     * eventually.
     * </pre>
     *
     * <code>int32 min_batch = 2;</code>
     * @param value The minBatch to set.
     */
    private void setMinBatch(int value) {
      
      minBatch_ = value;
    }
    /**
     * <pre>
     * min_batch is the minimum number of items in a batch.
     * If less than min_batch items are available, nothing happens.
     * TODO(#1047): Replace with timeout so items in the log get processed
     * eventually.
     * </pre>
     *
     * <code>int32 min_batch = 2;</code>
     */
    private void clearMinBatch() {
      
      minBatch_ = 0;
    }

    public static final int MAX_BATCH_FIELD_NUMBER = 3;
    private int maxBatch_;
    /**
     * <pre>
     * max_batch is the maximum number of items in a batch.
     * </pre>
     *
     * <code>int32 max_batch = 3;</code>
     * @return The maxBatch.
     */
    @java.lang.Override
    public int getMaxBatch() {
      return maxBatch_;
    }
    /**
     * <pre>
     * max_batch is the maximum number of items in a batch.
     * </pre>
     *
     * <code>int32 max_batch = 3;</code>
     * @param value The maxBatch to set.
     */
    private void setMaxBatch(int value) {
      
      maxBatch_ = value;
    }
    /**
     * <pre>
     * max_batch is the maximum number of items in a batch.
     * </pre>
     *
     * <code>int32 max_batch = 3;</code>
     */
    private void clearMaxBatch() {
      
      maxBatch_ = 0;
    }

    public static final int MAX_UNAPPLIED_FIELD_NUMBER = 4;
    private int maxUnapplied_;
    /**
     * <pre>
     * max_unapplied is the maximum number of revisions that can be defined ahead
     * of applied revisions.
     * </pre>
     *
     * <code>int32 max_unapplied = 4;</code>
     * @return The maxUnapplied.
     */
    @java.lang.Override
    public int getMaxUnapplied() {
      return maxUnapplied_;
    }
    /**
     * <pre>
     * max_unapplied is the maximum number of revisions that can be defined ahead
     * of applied revisions.
     * </pre>
     *
     * <code>int32 max_unapplied = 4;</code>
     * @param value The maxUnapplied to set.
     */
    private void setMaxUnapplied(int value) {
      
      maxUnapplied_ = value;
    }
    /**
     * <pre>
     * max_unapplied is the maximum number of revisions that can be defined ahead
     * of applied revisions.
     * </pre>
     *
     * <code>int32 max_unapplied = 4;</code>
     */
    private void clearMaxUnapplied() {
      
      maxUnapplied_ = 0;
    }

    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * DefineRevisionsRequest contains information needed to define new revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.DefineRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.DefineRevisionsRequest)
        google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory to examine the outstanding mutations for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory to examine the outstanding mutations for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory to examine the outstanding mutations for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to examine the outstanding mutations for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to examine the outstanding mutations for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * min_batch is the minimum number of items in a batch.
       * If less than min_batch items are available, nothing happens.
       * TODO(#1047): Replace with timeout so items in the log get processed
       * eventually.
       * </pre>
       *
       * <code>int32 min_batch = 2;</code>
       * @return The minBatch.
       */
      @java.lang.Override
      public int getMinBatch() {
        return instance.getMinBatch();
      }
      /**
       * <pre>
       * min_batch is the minimum number of items in a batch.
       * If less than min_batch items are available, nothing happens.
       * TODO(#1047): Replace with timeout so items in the log get processed
       * eventually.
       * </pre>
       *
       * <code>int32 min_batch = 2;</code>
       * @param value The minBatch to set.
       * @return This builder for chaining.
       */
      public Builder setMinBatch(int value) {
        copyOnWrite();
        instance.setMinBatch(value);
        return this;
      }
      /**
       * <pre>
       * min_batch is the minimum number of items in a batch.
       * If less than min_batch items are available, nothing happens.
       * TODO(#1047): Replace with timeout so items in the log get processed
       * eventually.
       * </pre>
       *
       * <code>int32 min_batch = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinBatch() {
        copyOnWrite();
        instance.clearMinBatch();
        return this;
      }

      /**
       * <pre>
       * max_batch is the maximum number of items in a batch.
       * </pre>
       *
       * <code>int32 max_batch = 3;</code>
       * @return The maxBatch.
       */
      @java.lang.Override
      public int getMaxBatch() {
        return instance.getMaxBatch();
      }
      /**
       * <pre>
       * max_batch is the maximum number of items in a batch.
       * </pre>
       *
       * <code>int32 max_batch = 3;</code>
       * @param value The maxBatch to set.
       * @return This builder for chaining.
       */
      public Builder setMaxBatch(int value) {
        copyOnWrite();
        instance.setMaxBatch(value);
        return this;
      }
      /**
       * <pre>
       * max_batch is the maximum number of items in a batch.
       * </pre>
       *
       * <code>int32 max_batch = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxBatch() {
        copyOnWrite();
        instance.clearMaxBatch();
        return this;
      }

      /**
       * <pre>
       * max_unapplied is the maximum number of revisions that can be defined ahead
       * of applied revisions.
       * </pre>
       *
       * <code>int32 max_unapplied = 4;</code>
       * @return The maxUnapplied.
       */
      @java.lang.Override
      public int getMaxUnapplied() {
        return instance.getMaxUnapplied();
      }
      /**
       * <pre>
       * max_unapplied is the maximum number of revisions that can be defined ahead
       * of applied revisions.
       * </pre>
       *
       * <code>int32 max_unapplied = 4;</code>
       * @param value The maxUnapplied to set.
       * @return This builder for chaining.
       */
      public Builder setMaxUnapplied(int value) {
        copyOnWrite();
        instance.setMaxUnapplied(value);
        return this;
      }
      /**
       * <pre>
       * max_unapplied is the maximum number of revisions that can be defined ahead
       * of applied revisions.
       * </pre>
       *
       * <code>int32 max_unapplied = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxUnapplied() {
        copyOnWrite();
        instance.clearMaxUnapplied();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.DefineRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "minBatch_",
              "maxBatch_",
              "maxUnapplied_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0004" +
                "\u0003\u0004\u0004\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.DefineRevisionsRequest)
    private static final google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest DEFAULT_INSTANCE;
    static {
      DefineRevisionsRequest defaultInstance = new DefineRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DefineRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DefineRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<DefineRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DefineRevisionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.DefineRevisionsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 2;</code>
     * @return The highestApplied.
     */
    long getHighestApplied();

    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 3;</code>
     * @return The highestDefined.
     */
    long getHighestDefined();
  }
  /**
   * <pre>
   * DefineRevisionsResponse contains information about defined/applied revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.DefineRevisionsResponse}
   */
  public  static final class DefineRevisionsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          DefineRevisionsResponse, DefineRevisionsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.DefineRevisionsResponse)
      DefineRevisionsResponseOrBuilder {
    private DefineRevisionsResponse() {
    }
    public static final int HIGHEST_APPLIED_FIELD_NUMBER = 2;
    private long highestApplied_;
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 2;</code>
     * @return The highestApplied.
     */
    @java.lang.Override
    public long getHighestApplied() {
      return highestApplied_;
    }
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 2;</code>
     * @param value The highestApplied to set.
     */
    private void setHighestApplied(long value) {
      
      highestApplied_ = value;
    }
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 2;</code>
     */
    private void clearHighestApplied() {
      
      highestApplied_ = 0L;
    }

    public static final int HIGHEST_DEFINED_FIELD_NUMBER = 3;
    private long highestDefined_;
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 3;</code>
     * @return The highestDefined.
     */
    @java.lang.Override
    public long getHighestDefined() {
      return highestDefined_;
    }
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 3;</code>
     * @param value The highestDefined to set.
     */
    private void setHighestDefined(long value) {
      
      highestDefined_ = value;
    }
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 3;</code>
     */
    private void clearHighestDefined() {
      
      highestDefined_ = 0L;
    }

    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * DefineRevisionsResponse contains information about defined/applied revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.DefineRevisionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.DefineRevisionsResponse)
        google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponseOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 2;</code>
       * @return The highestApplied.
       */
      @java.lang.Override
      public long getHighestApplied() {
        return instance.getHighestApplied();
      }
      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 2;</code>
       * @param value The highestApplied to set.
       * @return This builder for chaining.
       */
      public Builder setHighestApplied(long value) {
        copyOnWrite();
        instance.setHighestApplied(value);
        return this;
      }
      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestApplied() {
        copyOnWrite();
        instance.clearHighestApplied();
        return this;
      }

      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 3;</code>
       * @return The highestDefined.
       */
      @java.lang.Override
      public long getHighestDefined() {
        return instance.getHighestDefined();
      }
      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 3;</code>
       * @param value The highestDefined to set.
       * @return This builder for chaining.
       */
      public Builder setHighestDefined(long value) {
        copyOnWrite();
        instance.setHighestDefined(value);
        return this;
      }
      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestDefined() {
        copyOnWrite();
        instance.clearHighestDefined();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.DefineRevisionsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "highestApplied_",
              "highestDefined_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0002\u0003\u0002\u0000\u0000\u0000\u0002\u0002\u0003\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.DefineRevisionsResponse)
    private static final google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse DEFAULT_INSTANCE;
    static {
      DefineRevisionsResponse defaultInstance = new DefineRevisionsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DefineRevisionsResponse.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.DefineRevisionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DefineRevisionsResponse> PARSER;

    public static com.google.protobuf.Parser<DefineRevisionsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetDefinedRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.GetDefinedRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();
  }
  /**
   * <pre>
   * GetDefinedRevisionsRequest contains information needed to request the set of
   * defined/applied revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.GetDefinedRevisionsRequest}
   */
  public  static final class GetDefinedRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          GetDefinedRevisionsRequest, GetDefinedRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.GetDefinedRevisionsRequest)
      GetDefinedRevisionsRequestOrBuilder {
    private GetDefinedRevisionsRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory to examine the revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * GetDefinedRevisionsRequest contains information needed to request the set of
     * defined/applied revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.GetDefinedRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.GetDefinedRevisionsRequest)
        google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory to examine the revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory to examine the revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory to examine the revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to examine the revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to examine the revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.GetDefinedRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.GetDefinedRevisionsRequest)
    private static final google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest DEFAULT_INSTANCE;
    static {
      GetDefinedRevisionsRequest defaultInstance = new GetDefinedRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetDefinedRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetDefinedRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<GetDefinedRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetDefinedRevisionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.GetDefinedRevisionsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 1;</code>
     * @return The highestApplied.
     */
    long getHighestApplied();

    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 2;</code>
     * @return The highestDefined.
     */
    long getHighestDefined();
  }
  /**
   * <pre>
   * GetDefinedRevisionResponse contains info about defined/applied revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.GetDefinedRevisionsResponse}
   */
  public  static final class GetDefinedRevisionsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          GetDefinedRevisionsResponse, GetDefinedRevisionsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.GetDefinedRevisionsResponse)
      GetDefinedRevisionsResponseOrBuilder {
    private GetDefinedRevisionsResponse() {
    }
    public static final int HIGHEST_APPLIED_FIELD_NUMBER = 1;
    private long highestApplied_;
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 1;</code>
     * @return The highestApplied.
     */
    @java.lang.Override
    public long getHighestApplied() {
      return highestApplied_;
    }
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 1;</code>
     * @param value The highestApplied to set.
     */
    private void setHighestApplied(long value) {
      
      highestApplied_ = value;
    }
    /**
     * <pre>
     * highest_applied is the current map revision, which is also the highest map
     * revision that has been applied.
     * </pre>
     *
     * <code>int64 highest_applied = 1;</code>
     */
    private void clearHighestApplied() {
      
      highestApplied_ = 0L;
    }

    public static final int HIGHEST_DEFINED_FIELD_NUMBER = 2;
    private long highestDefined_;
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 2;</code>
     * @return The highestDefined.
     */
    @java.lang.Override
    public long getHighestDefined() {
      return highestDefined_;
    }
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 2;</code>
     * @param value The highestDefined to set.
     */
    private void setHighestDefined(long value) {
      
      highestDefined_ = value;
    }
    /**
     * <pre>
     * highest_defined is the highest defined revision after this call.
     * </pre>
     *
     * <code>int64 highest_defined = 2;</code>
     */
    private void clearHighestDefined() {
      
      highestDefined_ = 0L;
    }

    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * GetDefinedRevisionResponse contains info about defined/applied revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.GetDefinedRevisionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.GetDefinedRevisionsResponse)
        google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponseOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 1;</code>
       * @return The highestApplied.
       */
      @java.lang.Override
      public long getHighestApplied() {
        return instance.getHighestApplied();
      }
      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 1;</code>
       * @param value The highestApplied to set.
       * @return This builder for chaining.
       */
      public Builder setHighestApplied(long value) {
        copyOnWrite();
        instance.setHighestApplied(value);
        return this;
      }
      /**
       * <pre>
       * highest_applied is the current map revision, which is also the highest map
       * revision that has been applied.
       * </pre>
       *
       * <code>int64 highest_applied = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestApplied() {
        copyOnWrite();
        instance.clearHighestApplied();
        return this;
      }

      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 2;</code>
       * @return The highestDefined.
       */
      @java.lang.Override
      public long getHighestDefined() {
        return instance.getHighestDefined();
      }
      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 2;</code>
       * @param value The highestDefined to set.
       * @return This builder for chaining.
       */
      public Builder setHighestDefined(long value) {
        copyOnWrite();
        instance.setHighestDefined(value);
        return this;
      }
      /**
       * <pre>
       * highest_defined is the highest defined revision after this call.
       * </pre>
       *
       * <code>int64 highest_defined = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestDefined() {
        copyOnWrite();
        instance.clearHighestDefined();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.GetDefinedRevisionsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "highestApplied_",
              "highestDefined_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0002\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.GetDefinedRevisionsResponse)
    private static final google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse DEFAULT_INSTANCE;
    static {
      GetDefinedRevisionsResponse defaultInstance = new GetDefinedRevisionsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetDefinedRevisionsResponse.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.GetDefinedRevisionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetDefinedRevisionsResponse> PARSER;

    public static com.google.protobuf.Parser<GetDefinedRevisionsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApplyRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.ApplyRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();
  }
  /**
   * <pre>
   * ApplyRevisionsRequest triggers applying revisions to the directory's map.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionsRequest}
   */
  public  static final class ApplyRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApplyRevisionsRequest, ApplyRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.ApplyRevisionsRequest)
      ApplyRevisionsRequestOrBuilder {
    private ApplyRevisionsRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory to apply revisions for.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ApplyRevisionsRequest triggers applying revisions to the directory's map.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.ApplyRevisionsRequest)
        google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory to apply revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory to apply revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory to apply revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to apply revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to apply revisions for.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.ApplyRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.ApplyRevisionsRequest)
    private static final google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest DEFAULT_INSTANCE;
    static {
      ApplyRevisionsRequest defaultInstance = new ApplyRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ApplyRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApplyRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<ApplyRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApplyRevisionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.ApplyRevisionRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * revision is the expected revision of the new revision.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @return The revision.
     */
    long getRevision();
  }
  /**
   * <pre>
   * ApplyRevisionRequest contains information needed to create a new revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionRequest}
   */
  public  static final class ApplyRevisionRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ApplyRevisionRequest, ApplyRevisionRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.ApplyRevisionRequest)
      ApplyRevisionRequestOrBuilder {
    private ApplyRevisionRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory to apply the mutations to.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int REVISION_FIELD_NUMBER = 2;
    private long revision_;
    /**
     * <pre>
     * revision is the expected revision of the new revision.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @return The revision.
     */
    @java.lang.Override
    public long getRevision() {
      return revision_;
    }
    /**
     * <pre>
     * revision is the expected revision of the new revision.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @param value The revision to set.
     */
    private void setRevision(long value) {
      
      revision_ = value;
    }
    /**
     * <pre>
     * revision is the expected revision of the new revision.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     */
    private void clearRevision() {
      
      revision_ = 0L;
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ApplyRevisionRequest contains information needed to create a new revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.ApplyRevisionRequest)
        google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory to apply the mutations to.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory to apply the mutations to.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory to apply the mutations to.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to apply the mutations to.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory to apply the mutations to.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * revision is the expected revision of the new revision.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @return The revision.
       */
      @java.lang.Override
      public long getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * revision is the expected revision of the new revision.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(long value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
      }
      /**
       * <pre>
       * revision is the expected revision of the new revision.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        copyOnWrite();
        instance.clearRevision();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.ApplyRevisionRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "revision_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.ApplyRevisionRequest)
    private static final google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest DEFAULT_INSTANCE;
    static {
      ApplyRevisionRequest defaultInstance = new ApplyRevisionRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ApplyRevisionRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApplyRevisionRequest> PARSER;

    public static com.google.protobuf.Parser<ApplyRevisionRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ApplyRevisionResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.ApplyRevisionResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * The revision this is for.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @return The revision.
     */
    long getRevision();

    /**
     * <pre>
     * mutations processed.
     * </pre>
     *
     * <code>int64 mutations = 3;</code>
     * @return The mutations.
     */
    long getMutations();

    /**
     * <pre>
     * map_leaves written.
     * </pre>
     *
     * <code>int64 map_leaves = 4;</code>
     * @return The mapLeaves.
     */
    long getMapLeaves();
  }
  /**
   * <pre>
   * ApplyRevisionResponse contains stats about the created revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionResponse}
   */
  public  static final class ApplyRevisionResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ApplyRevisionResponse, ApplyRevisionResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.ApplyRevisionResponse)
      ApplyRevisionResponseOrBuilder {
    private ApplyRevisionResponse() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int REVISION_FIELD_NUMBER = 2;
    private long revision_;
    /**
     * <pre>
     * The revision this is for.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @return The revision.
     */
    @java.lang.Override
    public long getRevision() {
      return revision_;
    }
    /**
     * <pre>
     * The revision this is for.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     * @param value The revision to set.
     */
    private void setRevision(long value) {
      
      revision_ = value;
    }
    /**
     * <pre>
     * The revision this is for.
     * </pre>
     *
     * <code>int64 revision = 2;</code>
     */
    private void clearRevision() {
      
      revision_ = 0L;
    }

    public static final int MUTATIONS_FIELD_NUMBER = 3;
    private long mutations_;
    /**
     * <pre>
     * mutations processed.
     * </pre>
     *
     * <code>int64 mutations = 3;</code>
     * @return The mutations.
     */
    @java.lang.Override
    public long getMutations() {
      return mutations_;
    }
    /**
     * <pre>
     * mutations processed.
     * </pre>
     *
     * <code>int64 mutations = 3;</code>
     * @param value The mutations to set.
     */
    private void setMutations(long value) {
      
      mutations_ = value;
    }
    /**
     * <pre>
     * mutations processed.
     * </pre>
     *
     * <code>int64 mutations = 3;</code>
     */
    private void clearMutations() {
      
      mutations_ = 0L;
    }

    public static final int MAP_LEAVES_FIELD_NUMBER = 4;
    private long mapLeaves_;
    /**
     * <pre>
     * map_leaves written.
     * </pre>
     *
     * <code>int64 map_leaves = 4;</code>
     * @return The mapLeaves.
     */
    @java.lang.Override
    public long getMapLeaves() {
      return mapLeaves_;
    }
    /**
     * <pre>
     * map_leaves written.
     * </pre>
     *
     * <code>int64 map_leaves = 4;</code>
     * @param value The mapLeaves to set.
     */
    private void setMapLeaves(long value) {
      
      mapLeaves_ = value;
    }
    /**
     * <pre>
     * map_leaves written.
     * </pre>
     *
     * <code>int64 map_leaves = 4;</code>
     */
    private void clearMapLeaves() {
      
      mapLeaves_ = 0L;
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ApplyRevisionResponse contains stats about the created revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.ApplyRevisionResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.ApplyRevisionResponse)
        google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponseOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * The revision this is for.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @return The revision.
       */
      @java.lang.Override
      public long getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * The revision this is for.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(long value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
      }
      /**
       * <pre>
       * The revision this is for.
       * </pre>
       *
       * <code>int64 revision = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        copyOnWrite();
        instance.clearRevision();
        return this;
      }

      /**
       * <pre>
       * mutations processed.
       * </pre>
       *
       * <code>int64 mutations = 3;</code>
       * @return The mutations.
       */
      @java.lang.Override
      public long getMutations() {
        return instance.getMutations();
      }
      /**
       * <pre>
       * mutations processed.
       * </pre>
       *
       * <code>int64 mutations = 3;</code>
       * @param value The mutations to set.
       * @return This builder for chaining.
       */
      public Builder setMutations(long value) {
        copyOnWrite();
        instance.setMutations(value);
        return this;
      }
      /**
       * <pre>
       * mutations processed.
       * </pre>
       *
       * <code>int64 mutations = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMutations() {
        copyOnWrite();
        instance.clearMutations();
        return this;
      }

      /**
       * <pre>
       * map_leaves written.
       * </pre>
       *
       * <code>int64 map_leaves = 4;</code>
       * @return The mapLeaves.
       */
      @java.lang.Override
      public long getMapLeaves() {
        return instance.getMapLeaves();
      }
      /**
       * <pre>
       * map_leaves written.
       * </pre>
       *
       * <code>int64 map_leaves = 4;</code>
       * @param value The mapLeaves to set.
       * @return This builder for chaining.
       */
      public Builder setMapLeaves(long value) {
        copyOnWrite();
        instance.setMapLeaves(value);
        return this;
      }
      /**
       * <pre>
       * map_leaves written.
       * </pre>
       *
       * <code>int64 map_leaves = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMapLeaves() {
        copyOnWrite();
        instance.clearMapLeaves();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.ApplyRevisionResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "revision_",
              "mutations_",
              "mapLeaves_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0002" +
                "\u0003\u0002\u0004\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.ApplyRevisionResponse)
    private static final google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse DEFAULT_INSTANCE;
    static {
      ApplyRevisionResponse defaultInstance = new ApplyRevisionResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ApplyRevisionResponse.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.ApplyRevisionResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ApplyRevisionResponse> PARSER;

    public static com.google.protobuf.Parser<ApplyRevisionResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PublishRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.PublishRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * block until a Signed Log Root has been published which encompases all map roots.
     * </pre>
     *
     * <code>bool block = 2;</code>
     * @return The block.
     */
    boolean getBlock();
  }
  /**
   * <pre>
   * PublishRevisionsRequest copies all available SignedMapRoots into the Log of SignedMapRoots.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.PublishRevisionsRequest}
   */
  public  static final class PublishRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PublishRevisionsRequest, PublishRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.PublishRevisionsRequest)
      PublishRevisionsRequestOrBuilder {
    private PublishRevisionsRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int BLOCK_FIELD_NUMBER = 2;
    private boolean block_;
    /**
     * <pre>
     * block until a Signed Log Root has been published which encompases all map roots.
     * </pre>
     *
     * <code>bool block = 2;</code>
     * @return The block.
     */
    @java.lang.Override
    public boolean getBlock() {
      return block_;
    }
    /**
     * <pre>
     * block until a Signed Log Root has been published which encompases all map roots.
     * </pre>
     *
     * <code>bool block = 2;</code>
     * @param value The block to set.
     */
    private void setBlock(boolean value) {
      
      block_ = value;
    }
    /**
     * <pre>
     * block until a Signed Log Root has been published which encompases all map roots.
     * </pre>
     *
     * <code>bool block = 2;</code>
     */
    private void clearBlock() {
      
      block_ = false;
    }

    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * PublishRevisionsRequest copies all available SignedMapRoots into the Log of SignedMapRoots.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.PublishRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.PublishRevisionsRequest)
        google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * block until a Signed Log Root has been published which encompases all map roots.
       * </pre>
       *
       * <code>bool block = 2;</code>
       * @return The block.
       */
      @java.lang.Override
      public boolean getBlock() {
        return instance.getBlock();
      }
      /**
       * <pre>
       * block until a Signed Log Root has been published which encompases all map roots.
       * </pre>
       *
       * <code>bool block = 2;</code>
       * @param value The block to set.
       * @return This builder for chaining.
       */
      public Builder setBlock(boolean value) {
        copyOnWrite();
        instance.setBlock(value);
        return this;
      }
      /**
       * <pre>
       * block until a Signed Log Root has been published which encompases all map roots.
       * </pre>
       *
       * <code>bool block = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlock() {
        copyOnWrite();
        instance.clearBlock();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.PublishRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "block_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0007" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.PublishRevisionsRequest)
    private static final google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest DEFAULT_INSTANCE;
    static {
      PublishRevisionsRequest defaultInstance = new PublishRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PublishRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PublishRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<PublishRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PublishRevisionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.PublishRevisionsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @return A list containing the revisions.
     */
    java.util.List<java.lang.Long> getRevisionsList();
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @return The count of revisions.
     */
    int getRevisionsCount();
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @param index The index of the element to return.
     * @return The revisions at the given index.
     */
    long getRevisions(int index);
  }
  /**
   * <pre>
   * PublishRevisionsResponse contains metrics about the publishing operation.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.sequencer.PublishRevisionsResponse}
   */
  public  static final class PublishRevisionsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          PublishRevisionsResponse, PublishRevisionsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.PublishRevisionsResponse)
      PublishRevisionsResponseOrBuilder {
    private PublishRevisionsResponse() {
      revisions_ = emptyLongList();
    }
    public static final int REVISIONS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.LongList revisions_;
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @return A list containing the revisions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRevisionsList() {
      return revisions_;
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @return The count of revisions.
     */
    @java.lang.Override
    public int getRevisionsCount() {
      return revisions_.size();
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @param index The index of the element to return.
     * @return The revisions at the given index.
     */
    @java.lang.Override
    public long getRevisions(int index) {
      return revisions_.getLong(index);
    }
    private int revisionsMemoizedSerializedSize = -1;
    private void ensureRevisionsIsMutable() {
      com.google.protobuf.Internal.LongList tmp = revisions_;
      if (!tmp.isModifiable()) {
        revisions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @param index The index to set the value at.
     * @param value The revisions to set.
     */
    private void setRevisions(
        int index, long value) {
      ensureRevisionsIsMutable();
      revisions_.setLong(index, value);
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @param value The revisions to add.
     */
    private void addRevisions(long value) {
      ensureRevisionsIsMutable();
      revisions_.addLong(value);
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     * @param values The revisions to add.
     */
    private void addAllRevisions(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureRevisionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, revisions_);
    }
    /**
     * <pre>
     * revisions published to the log of signed map roots.
     * </pre>
     *
     * <code>repeated int64 revisions = 1;</code>
     */
    private void clearRevisions() {
      revisions_ = emptyLongList();
    }

    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * PublishRevisionsResponse contains metrics about the publishing operation.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.sequencer.PublishRevisionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.PublishRevisionsResponse)
        google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponseOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @return A list containing the revisions.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getRevisionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getRevisionsList());
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @return The count of revisions.
       */
      @java.lang.Override
      public int getRevisionsCount() {
        return instance.getRevisionsCount();
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @param index The index of the element to return.
       * @return The revisions at the given index.
       */
      @java.lang.Override
      public long getRevisions(int index) {
        return instance.getRevisions(index);
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @param value The revisions to set.
       * @return This builder for chaining.
       */
      public Builder setRevisions(
          int index, long value) {
        copyOnWrite();
        instance.setRevisions(index, value);
        return this;
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @param value The revisions to add.
       * @return This builder for chaining.
       */
      public Builder addRevisions(long value) {
        copyOnWrite();
        instance.addRevisions(value);
        return this;
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @param values The revisions to add.
       * @return This builder for chaining.
       */
      public Builder addAllRevisions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllRevisions(values);
        return this;
      }
      /**
       * <pre>
       * revisions published to the log of signed map roots.
       * </pre>
       *
       * <code>repeated int64 revisions = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevisions() {
        copyOnWrite();
        instance.clearRevisions();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.PublishRevisionsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "revisions_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001%";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.PublishRevisionsResponse)
    private static final google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse DEFAULT_INSTANCE;
    static {
      PublishRevisionsResponse defaultInstance = new PublishRevisionsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PublishRevisionsResponse.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.PublishRevisionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PublishRevisionsResponse> PARSER;

    public static com.google.protobuf.Parser<PublishRevisionsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EstimateBacklogRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.EstimateBacklogRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <code>int32 max_unapplied_count = 2;</code>
     * @return The maxUnappliedCount.
     */
    int getMaxUnappliedCount();
  }
  /**
   * Protobuf type {@code google.keytransparency.sequencer.EstimateBacklogRequest}
   */
  public  static final class EstimateBacklogRequest extends
      com.google.protobuf.GeneratedMessageLite<
          EstimateBacklogRequest, EstimateBacklogRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.EstimateBacklogRequest)
      EstimateBacklogRequestOrBuilder {
    private EstimateBacklogRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int MAX_UNAPPLIED_COUNT_FIELD_NUMBER = 2;
    private int maxUnappliedCount_;
    /**
     * <code>int32 max_unapplied_count = 2;</code>
     * @return The maxUnappliedCount.
     */
    @java.lang.Override
    public int getMaxUnappliedCount() {
      return maxUnappliedCount_;
    }
    /**
     * <code>int32 max_unapplied_count = 2;</code>
     * @param value The maxUnappliedCount to set.
     */
    private void setMaxUnappliedCount(int value) {
      
      maxUnappliedCount_ = value;
    }
    /**
     * <code>int32 max_unapplied_count = 2;</code>
     */
    private void clearMaxUnappliedCount() {
      
      maxUnappliedCount_ = 0;
    }

    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code google.keytransparency.sequencer.EstimateBacklogRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.EstimateBacklogRequest)
        google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequestOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <code>int32 max_unapplied_count = 2;</code>
       * @return The maxUnappliedCount.
       */
      @java.lang.Override
      public int getMaxUnappliedCount() {
        return instance.getMaxUnappliedCount();
      }
      /**
       * <code>int32 max_unapplied_count = 2;</code>
       * @param value The maxUnappliedCount to set.
       * @return This builder for chaining.
       */
      public Builder setMaxUnappliedCount(int value) {
        copyOnWrite();
        instance.setMaxUnappliedCount(value);
        return this;
      }
      /**
       * <code>int32 max_unapplied_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxUnappliedCount() {
        copyOnWrite();
        instance.clearMaxUnappliedCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.EstimateBacklogRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "maxUnappliedCount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0004" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.EstimateBacklogRequest)
    private static final google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest DEFAULT_INSTANCE;
    static {
      EstimateBacklogRequest defaultInstance = new EstimateBacklogRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EstimateBacklogRequest.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EstimateBacklogRequest> PARSER;

    public static com.google.protobuf.Parser<EstimateBacklogRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EstimateBacklogResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.sequencer.EstimateBacklogResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <code>int32 unapplied_count = 2;</code>
     * @return The unappliedCount.
     */
    int getUnappliedCount();
  }
  /**
   * Protobuf type {@code google.keytransparency.sequencer.EstimateBacklogResponse}
   */
  public  static final class EstimateBacklogResponse extends
      com.google.protobuf.GeneratedMessageLite<
          EstimateBacklogResponse, EstimateBacklogResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.sequencer.EstimateBacklogResponse)
      EstimateBacklogResponseOrBuilder {
    private EstimateBacklogResponse() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int UNAPPLIED_COUNT_FIELD_NUMBER = 2;
    private int unappliedCount_;
    /**
     * <code>int32 unapplied_count = 2;</code>
     * @return The unappliedCount.
     */
    @java.lang.Override
    public int getUnappliedCount() {
      return unappliedCount_;
    }
    /**
     * <code>int32 unapplied_count = 2;</code>
     * @param value The unappliedCount to set.
     */
    private void setUnappliedCount(int value) {
      
      unappliedCount_ = value;
    }
    /**
     * <code>int32 unapplied_count = 2;</code>
     */
    private void clearUnappliedCount() {
      
      unappliedCount_ = 0;
    }

    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code google.keytransparency.sequencer.EstimateBacklogResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.sequencer.EstimateBacklogResponse)
        google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponseOrBuilder {
      // Construct using google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <code>int32 unapplied_count = 2;</code>
       * @return The unappliedCount.
       */
      @java.lang.Override
      public int getUnappliedCount() {
        return instance.getUnappliedCount();
      }
      /**
       * <code>int32 unapplied_count = 2;</code>
       * @param value The unappliedCount to set.
       * @return This builder for chaining.
       */
      public Builder setUnappliedCount(int value) {
        copyOnWrite();
        instance.setUnappliedCount(value);
        return this;
      }
      /**
       * <code>int32 unapplied_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnappliedCount() {
        copyOnWrite();
        instance.clearUnappliedCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.sequencer.EstimateBacklogResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "unappliedCount_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0004" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.sequencer.EstimateBacklogResponse)
    private static final google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse DEFAULT_INSTANCE;
    static {
      EstimateBacklogResponse defaultInstance = new EstimateBacklogResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EstimateBacklogResponse.class, defaultInstance);
    }

    public static google.keytransparency.sequencer.SequencerApi.EstimateBacklogResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EstimateBacklogResponse> PARSER;

    public static com.google.protobuf.Parser<EstimateBacklogResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
