// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entry.proto

package google.keytransparency.v1;

public final class EntryOuterClass {
  private EntryOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.Entry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @return The index.
     */
    com.google.protobuf.ByteString getIndex();

    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @return The commitment.
     */
    com.google.protobuf.ByteString getCommitment();

    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @return The authorizedKeyset.
     */
    com.google.protobuf.ByteString getAuthorizedKeyset();

    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @return The previous.
     */
    com.google.protobuf.ByteString getPrevious();
  }
  /**
   * <pre>
   * Entry is a signed change to a map entry.
   * Entry contains a commitment to profile and a set of authorized update keys.
   * Entry is placed in the verifiable map as leaf data.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.Entry}
   */
  public  static final class Entry extends
      com.google.protobuf.GeneratedMessageLite<
          Entry, Entry.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.Entry)
      EntryOrBuilder {
    private Entry() {
      index_ = com.google.protobuf.ByteString.EMPTY;
      commitment_ = com.google.protobuf.ByteString.EMPTY;
      authorizedKeyset_ = com.google.protobuf.ByteString.EMPTY;
      previous_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int INDEX_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString index_;
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @return The index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIndex() {
      return index_;
    }
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @param value The index to set.
     */
    private void setIndex(com.google.protobuf.ByteString value) {
      value.getClass();
  
      index_ = value;
    }
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     */
    private void clearIndex() {
      
      index_ = getDefaultInstance().getIndex();
    }

    public static final int COMMITMENT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString commitment_;
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @return The commitment.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommitment() {
      return commitment_;
    }
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @param value The commitment to set.
     */
    private void setCommitment(com.google.protobuf.ByteString value) {
      value.getClass();
  
      commitment_ = value;
    }
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     */
    private void clearCommitment() {
      
      commitment_ = getDefaultInstance().getCommitment();
    }

    public static final int AUTHORIZED_KEYSET_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString authorizedKeyset_;
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @return The authorizedKeyset.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAuthorizedKeyset() {
      return authorizedKeyset_;
    }
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @param value The authorizedKeyset to set.
     */
    private void setAuthorizedKeyset(com.google.protobuf.ByteString value) {
      value.getClass();
  
      authorizedKeyset_ = value;
    }
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     */
    private void clearAuthorizedKeyset() {
      
      authorizedKeyset_ = getDefaultInstance().getAuthorizedKeyset();
    }

    public static final int PREVIOUS_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString previous_;
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @return The previous.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrevious() {
      return previous_;
    }
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @param value The previous to set.
     */
    private void setPrevious(com.google.protobuf.ByteString value) {
      value.getClass();
  
      previous_ = value;
    }
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     */
    private void clearPrevious() {
      
      previous_ = getDefaultInstance().getPrevious();
    }

    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.EntryOuterClass.Entry prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Entry is a signed change to a map entry.
     * Entry contains a commitment to profile and a set of authorized update keys.
     * Entry is placed in the verifiable map as leaf data.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.Entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.EntryOuterClass.Entry, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.Entry)
        google.keytransparency.v1.EntryOuterClass.EntryOrBuilder {
      // Construct using google.keytransparency.v1.EntryOuterClass.Entry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @return The index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIndex() {
        return instance.getIndex();
      }
      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @return The commitment.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCommitment() {
        return instance.getCommitment();
      }
      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @param value The commitment to set.
       * @return This builder for chaining.
       */
      public Builder setCommitment(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCommitment(value);
        return this;
      }
      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommitment() {
        copyOnWrite();
        instance.clearCommitment();
        return this;
      }

      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @return The authorizedKeyset.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAuthorizedKeyset() {
        return instance.getAuthorizedKeyset();
      }
      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @param value The authorizedKeyset to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorizedKeyset(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAuthorizedKeyset(value);
        return this;
      }
      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorizedKeyset() {
        copyOnWrite();
        instance.clearAuthorizedKeyset();
        return this;
      }

      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @return The previous.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrevious() {
        return instance.getPrevious();
      }
      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @param value The previous to set.
       * @return This builder for chaining.
       */
      public Builder setPrevious(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrevious(value);
        return this;
      }
      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevious() {
        copyOnWrite();
        instance.clearPrevious();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.Entry)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.EntryOuterClass.Entry();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "index_",
              "commitment_",
              "previous_",
              "authorizedKeyset_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0003\t\u0004\u0000\u0000\u0000\u0003\n\u0006\n\b\n\t\n" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.EntryOuterClass.Entry> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.EntryOuterClass.Entry.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.EntryOuterClass.Entry>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.Entry)
    private static final google.keytransparency.v1.EntryOuterClass.Entry DEFAULT_INSTANCE;
    static {
      Entry defaultInstance = new Entry();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Entry.class, defaultInstance);
    }

    public static google.keytransparency.v1.EntryOuterClass.Entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Entry> PARSER;

    public static com.google.protobuf.Parser<Entry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SignedEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.SignedEntry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @return The entry.
     */
    com.google.protobuf.ByteString getEntry();

    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    java.util.List<com.google.protobuf.ByteString> getSignaturesList();
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    int getSignaturesCount();
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    com.google.protobuf.ByteString getSignatures(int index);
  }
  /**
   * <pre>
   * SignedEntry is a cryptographically signed Entry.
   * SignedEntry will be stored as a trillian.Map leaf.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.SignedEntry}
   */
  public  static final class SignedEntry extends
      com.google.protobuf.GeneratedMessageLite<
          SignedEntry, SignedEntry.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.SignedEntry)
      SignedEntryOrBuilder {
    private SignedEntry() {
      entry_ = com.google.protobuf.ByteString.EMPTY;
      signatures_ = emptyProtobufList();
    }
    public static final int ENTRY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString entry_;
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @return The entry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEntry() {
      return entry_;
    }
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @param value The entry to set.
     */
    private void setEntry(com.google.protobuf.ByteString value) {
      value.getClass();
  
      entry_ = value;
    }
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     */
    private void clearEntry() {
      
      entry_ = getDefaultInstance().getEntry();
    }

    public static final int SIGNATURES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> signatures_;
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    @java.lang.Override
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }
    private void ensureSignaturesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = signatures_;
      if (!tmp.isModifiable()) {
        signatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index to set the value at.
     * @param value The signatures to set.
     */
    private void setSignatures(
        int index, com.google.protobuf.ByteString value) {
      value.getClass();
  ensureSignaturesIsMutable();
      signatures_.set(index, value);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param value The signatures to add.
     */
    private void addSignatures(com.google.protobuf.ByteString value) {
      value.getClass();
  ensureSignaturesIsMutable();
      signatures_.add(value);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param values The signatures to add.
     */
    private void addAllSignatures(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureSignaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, signatures_);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisoins. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void clearSignatures() {
      signatures_ = emptyProtobufList();
    }

    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.EntryOuterClass.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.EntryOuterClass.SignedEntry prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * SignedEntry is a cryptographically signed Entry.
     * SignedEntry will be stored as a trillian.Map leaf.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.SignedEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.EntryOuterClass.SignedEntry, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.SignedEntry)
        google.keytransparency.v1.EntryOuterClass.SignedEntryOrBuilder {
      // Construct using google.keytransparency.v1.EntryOuterClass.SignedEntry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @return The entry.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEntry() {
        return instance.getEntry();
      }
      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @param value The entry to set.
       * @return This builder for chaining.
       */
      public Builder setEntry(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEntry(value);
        return this;
      }
      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntry() {
        copyOnWrite();
        instance.clearEntry();
        return this;
      }

      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return A list containing the signatures.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getSignaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSignaturesList());
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return The count of signatures.
       */
      @java.lang.Override
      public int getSignaturesCount() {
        return instance.getSignaturesCount();
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param index The index of the element to return.
       * @return The signatures at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignatures(int index) {
        return instance.getSignatures(index);
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to set.
       * @return This builder for chaining.
       */
      public Builder setSignatures(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignatures(index, value);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addSignatures(value);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param values The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllSignatures(values);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisoins. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignatures() {
        copyOnWrite();
        instance.clearSignatures();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.SignedEntry)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.EntryOuterClass.SignedEntry();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "entry_",
              "signatures_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\n\u0002\u001c" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.EntryOuterClass.SignedEntry> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.EntryOuterClass.SignedEntry.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.EntryOuterClass.SignedEntry>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.SignedEntry)
    private static final google.keytransparency.v1.EntryOuterClass.SignedEntry DEFAULT_INSTANCE;
    static {
      SignedEntry defaultInstance = new SignedEntry();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SignedEntry.class, defaultInstance);
    }

    public static google.keytransparency.v1.EntryOuterClass.SignedEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SignedEntry> PARSER;

    public static com.google.protobuf.Parser<SignedEntry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
