// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keytransparency.proto

package google.keytransparency.v1;

public final class Keytransparency {
  private Keytransparency() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CommittedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.Committed)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * key is the 16 byte random commitment key.
     * </pre>
     *
     * <code>bytes key = 1;</code>
     * @return The key.
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <pre>
     * data is the data being committed to.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * <pre>
   * Committed represents the data committed to in a cryptographic commitment.
   * commitment = HMAC_SHA512_256(key, data)
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.Committed}
   */
  public  static final class Committed extends
      com.google.protobuf.GeneratedMessageLite<
          Committed, Committed.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.Committed)
      CommittedOrBuilder {
    private Committed() {
      key_ = com.google.protobuf.ByteString.EMPTY;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString key_;
    /**
     * <pre>
     * key is the 16 byte random commitment key.
     * </pre>
     *
     * <code>bytes key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }
    /**
     * <pre>
     * key is the 16 byte random commitment key.
     * </pre>
     *
     * <code>bytes key = 1;</code>
     * @param value The key to set.
     */
    private void setKey(com.google.protobuf.ByteString value) {
      value.getClass();
  
      key_ = value;
    }
    /**
     * <pre>
     * key is the 16 byte random commitment key.
     * </pre>
     *
     * <code>bytes key = 1;</code>
     */
    private void clearKey() {
      
      key_ = getDefaultInstance().getKey();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * data is the data being committed to.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * data is the data being committed to.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <pre>
     * data is the data being committed to.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Committed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.Committed prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Committed represents the data committed to in a cryptographic commitment.
     * commitment = HMAC_SHA512_256(key, data)
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.Committed}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.Committed, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.Committed)
        google.keytransparency.v1.Keytransparency.CommittedOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.Committed.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * key is the 16 byte random commitment key.
       * </pre>
       *
       * <code>bytes key = 1;</code>
       * @return The key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKey() {
        return instance.getKey();
      }
      /**
       * <pre>
       * key is the 16 byte random commitment key.
       * </pre>
       *
       * <code>bytes key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKey(value);
        return this;
      }
      /**
       * <pre>
       * key is the 16 byte random commitment key.
       * </pre>
       *
       * <code>bytes key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        copyOnWrite();
        instance.clearKey();
        return this;
      }

      /**
       * <pre>
       * data is the data being committed to.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <pre>
       * data is the data being committed to.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <pre>
       * data is the data being committed to.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.Committed)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.Committed();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "key_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.Committed> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.Committed.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.Committed>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.Committed)
    private static final google.keytransparency.v1.Keytransparency.Committed DEFAULT_INSTANCE;
    static {
      Committed defaultInstance = new Committed();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Committed.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.Committed getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Committed> PARSER;

    public static com.google.protobuf.Parser<Committed> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EntryUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.EntryUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     * @return Whether the mutation field is set.
     */
    boolean hasMutation();
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     * @return The mutation.
     */
    google.keytransparency.v1.Keytransparency.SignedEntry getMutation();

    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     * @return Whether the committed field is set.
     */
    boolean hasCommitted();
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     * @return The committed.
     */
    google.keytransparency.v1.Keytransparency.Committed getCommitted();
  }
  /**
   * <pre>
   * EntryUpdate contains the user entry update(s).
   * EntryUpdate will be placed in a Log of mutations.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.EntryUpdate}
   */
  public  static final class EntryUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          EntryUpdate, EntryUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.EntryUpdate)
      EntryUpdateOrBuilder {
    private EntryUpdate() {
      userId_ = "";
    }
    public static final int USER_ID_FIELD_NUMBER = 1;
    private java.lang.String userId_;
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @param value The userId to set.
     */
    private void setUserId(
        java.lang.String value) {
      value.getClass();
  
      userId_ = value;
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose profile is being updated.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @param value The bytes for userId to set.
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      userId_ = value.toStringUtf8();
      
    }

    public static final int MUTATION_FIELD_NUMBER = 2;
    private google.keytransparency.v1.Keytransparency.SignedEntry mutation_;
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     */
    @java.lang.Override
    public boolean hasMutation() {
      return mutation_ != null;
    }
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.SignedEntry getMutation() {
      return mutation_ == null ? google.keytransparency.v1.Keytransparency.SignedEntry.getDefaultInstance() : mutation_;
    }
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     */
    private void setMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
      value.getClass();
  mutation_ = value;
      
      }
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
      value.getClass();
  if (mutation_ != null &&
          mutation_ != google.keytransparency.v1.Keytransparency.SignedEntry.getDefaultInstance()) {
        mutation_ =
          google.keytransparency.v1.Keytransparency.SignedEntry.newBuilder(mutation_).mergeFrom(value).buildPartial();
      } else {
        mutation_ = value;
      }
      
    }
    /**
     * <pre>
     * mutation authorizes the change to entry.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
     */
    private void clearMutation() {  mutation_ = null;
      
    }

    public static final int COMMITTED_FIELD_NUMBER = 3;
    private google.keytransparency.v1.Keytransparency.Committed committed_;
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.Override
    public boolean hasCommitted() {
      return committed_ != null;
    }
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.Committed getCommitted() {
      return committed_ == null ? google.keytransparency.v1.Keytransparency.Committed.getDefaultInstance() : committed_;
    }
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    private void setCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
      value.getClass();
  committed_ = value;
      
      }
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
      value.getClass();
  if (committed_ != null &&
          committed_ != google.keytransparency.v1.Keytransparency.Committed.getDefaultInstance()) {
        committed_ =
          google.keytransparency.v1.Keytransparency.Committed.newBuilder(committed_).mergeFrom(value).buildPartial();
      } else {
        committed_ = value;
      }
      
    }
    /**
     * <pre>
     * committed contains the data committed to in mutation.commitment.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    private void clearCommitted() {  committed_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.EntryUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.EntryUpdate prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * EntryUpdate contains the user entry update(s).
     * EntryUpdate will be placed in a Log of mutations.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.EntryUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.EntryUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.EntryUpdate)
        google.keytransparency.v1.Keytransparency.EntryUpdateOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.EntryUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * user_id specifies the id for the user whose profile is being updated.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return The userId.
       */
      @java.lang.Override
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose profile is being updated.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return The bytes for userId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose profile is being updated.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose profile is being updated.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose profile is being updated.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      @java.lang.Override
      public boolean hasMutation() {
        return instance.hasMutation();
      }
      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.SignedEntry getMutation() {
        return instance.getMutation();
      }
      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      public Builder setMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
        copyOnWrite();
        instance.setMutation(value);
        return this;
        }
      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      public Builder setMutation(
          google.keytransparency.v1.Keytransparency.SignedEntry.Builder builderForValue) {
        copyOnWrite();
        instance.setMutation(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      public Builder mergeMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
        copyOnWrite();
        instance.mergeMutation(value);
        return this;
      }
      /**
       * <pre>
       * mutation authorizes the change to entry.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 2;</code>
       */
      public Builder clearMutation() {  copyOnWrite();
        instance.clearMutation();
        return this;
      }

      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      @java.lang.Override
      public boolean hasCommitted() {
        return instance.hasCommitted();
      }
      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.Committed getCommitted() {
        return instance.getCommitted();
      }
      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder setCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
        copyOnWrite();
        instance.setCommitted(value);
        return this;
        }
      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder setCommitted(
          google.keytransparency.v1.Keytransparency.Committed.Builder builderForValue) {
        copyOnWrite();
        instance.setCommitted(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder mergeCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
        copyOnWrite();
        instance.mergeCommitted(value);
        return this;
      }
      /**
       * <pre>
       * committed contains the data committed to in mutation.commitment.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder clearCommitted() {  copyOnWrite();
        instance.clearCommitted();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.EntryUpdate)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.EntryUpdate();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "userId_",
              "mutation_",
              "committed_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\t" +
                "\u0003\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.EntryUpdate> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.EntryUpdate.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.EntryUpdate>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.EntryUpdate)
    private static final google.keytransparency.v1.Keytransparency.EntryUpdate DEFAULT_INSTANCE;
    static {
      EntryUpdate defaultInstance = new EntryUpdate();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        EntryUpdate.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.EntryUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EntryUpdate> PARSER;

    public static com.google.protobuf.Parser<EntryUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.Entry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @return The index.
     */
    com.google.protobuf.ByteString getIndex();

    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @return The commitment.
     */
    com.google.protobuf.ByteString getCommitment();

    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @return The authorizedKeyset.
     */
    com.google.protobuf.ByteString getAuthorizedKeyset();

    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @return The previous.
     */
    com.google.protobuf.ByteString getPrevious();
  }
  /**
   * <pre>
   * Entry is a signed change to a map entry.
   * Entry contains a commitment to profile and a set of authorized update keys.
   * Entry is placed in the verifiable map as leaf data.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.Entry}
   */
  public  static final class Entry extends
      com.google.protobuf.GeneratedMessageLite<
          Entry, Entry.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.Entry)
      EntryOrBuilder {
    private Entry() {
      index_ = com.google.protobuf.ByteString.EMPTY;
      commitment_ = com.google.protobuf.ByteString.EMPTY;
      authorizedKeyset_ = com.google.protobuf.ByteString.EMPTY;
      previous_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int INDEX_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString index_;
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @return The index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIndex() {
      return index_;
    }
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     * @param value The index to set.
     */
    private void setIndex(com.google.protobuf.ByteString value) {
      value.getClass();
  
      index_ = value;
    }
    /**
     * <pre>
     * index is the location of this leaf in the sparse merkle tree.
     * </pre>
     *
     * <code>bytes index = 3;</code>
     */
    private void clearIndex() {
      
      index_ = getDefaultInstance().getIndex();
    }

    public static final int COMMITMENT_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString commitment_;
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @return The commitment.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCommitment() {
      return commitment_;
    }
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     * @param value The commitment to set.
     */
    private void setCommitment(com.google.protobuf.ByteString value) {
      value.getClass();
  
      commitment_ = value;
    }
    /**
     * <pre>
     * commitment is a cryptographic commitment to arbitrary data.
     * </pre>
     *
     * <code>bytes commitment = 6;</code>
     */
    private void clearCommitment() {
      
      commitment_ = getDefaultInstance().getCommitment();
    }

    public static final int AUTHORIZED_KEYSET_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString authorizedKeyset_;
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @return The authorizedKeyset.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getAuthorizedKeyset() {
      return authorizedKeyset_;
    }
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     * @param value The authorizedKeyset to set.
     */
    private void setAuthorizedKeyset(com.google.protobuf.ByteString value) {
      value.getClass();
  
      authorizedKeyset_ = value;
    }
    /**
     * <pre>
     * authorized_keys is the tink keyset that validates the signatures on the next entry.
     * </pre>
     *
     * <code>bytes authorized_keyset = 9;</code>
     */
    private void clearAuthorizedKeyset() {
      
      authorizedKeyset_ = getDefaultInstance().getAuthorizedKeyset();
    }

    public static final int PREVIOUS_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString previous_;
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @return The previous.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrevious() {
      return previous_;
    }
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     * @param value The previous to set.
     */
    private void setPrevious(com.google.protobuf.ByteString value) {
      value.getClass();
  
      previous_ = value;
    }
    /**
     * <pre>
     * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
     * </pre>
     *
     * <code>bytes previous = 8;</code>
     */
    private void clearPrevious() {
      
      previous_ = getDefaultInstance().getPrevious();
    }

    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Entry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.Entry prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Entry is a signed change to a map entry.
     * Entry contains a commitment to profile and a set of authorized update keys.
     * Entry is placed in the verifiable map as leaf data.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.Entry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.Entry, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.Entry)
        google.keytransparency.v1.Keytransparency.EntryOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.Entry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @return The index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIndex() {
        return instance.getIndex();
      }
      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <pre>
       * index is the location of this leaf in the sparse merkle tree.
       * </pre>
       *
       * <code>bytes index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @return The commitment.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCommitment() {
        return instance.getCommitment();
      }
      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @param value The commitment to set.
       * @return This builder for chaining.
       */
      public Builder setCommitment(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCommitment(value);
        return this;
      }
      /**
       * <pre>
       * commitment is a cryptographic commitment to arbitrary data.
       * </pre>
       *
       * <code>bytes commitment = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommitment() {
        copyOnWrite();
        instance.clearCommitment();
        return this;
      }

      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @return The authorizedKeyset.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getAuthorizedKeyset() {
        return instance.getAuthorizedKeyset();
      }
      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @param value The authorizedKeyset to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorizedKeyset(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setAuthorizedKeyset(value);
        return this;
      }
      /**
       * <pre>
       * authorized_keys is the tink keyset that validates the signatures on the next entry.
       * </pre>
       *
       * <code>bytes authorized_keyset = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorizedKeyset() {
        copyOnWrite();
        instance.clearAuthorizedKeyset();
        return this;
      }

      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @return The previous.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrevious() {
        return instance.getPrevious();
      }
      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @param value The previous to set.
       * @return This builder for chaining.
       */
      public Builder setPrevious(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPrevious(value);
        return this;
      }
      /**
       * <pre>
       * previous contains the SHA256 hash of SignedEntry.Entry the last time it was modified.
       * </pre>
       *
       * <code>bytes previous = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevious() {
        copyOnWrite();
        instance.clearPrevious();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.Entry)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.Entry();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "index_",
              "commitment_",
              "previous_",
              "authorizedKeyset_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0003\t\u0004\u0000\u0000\u0000\u0003\n\u0006\n\b\n\t\n" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.Entry> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.Entry.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.Entry>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.Entry)
    private static final google.keytransparency.v1.Keytransparency.Entry DEFAULT_INSTANCE;
    static {
      Entry defaultInstance = new Entry();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Entry.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.Entry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Entry> PARSER;

    public static com.google.protobuf.Parser<Entry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SignedEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.SignedEntry)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @return The entry.
     */
    com.google.protobuf.ByteString getEntry();

    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    java.util.List<com.google.protobuf.ByteString> getSignaturesList();
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    int getSignaturesCount();
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    com.google.protobuf.ByteString getSignatures(int index);
  }
  /**
   * <pre>
   * SignedEntry is a cryptographically signed Entry.
   * SignedEntry will be storead as a trillian.Map leaf.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.SignedEntry}
   */
  public  static final class SignedEntry extends
      com.google.protobuf.GeneratedMessageLite<
          SignedEntry, SignedEntry.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.SignedEntry)
      SignedEntryOrBuilder {
    private SignedEntry() {
      entry_ = com.google.protobuf.ByteString.EMPTY;
      signatures_ = emptyProtobufList();
    }
    public static final int ENTRY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString entry_;
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @return The entry.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEntry() {
      return entry_;
    }
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     * @param value The entry to set.
     */
    private void setEntry(com.google.protobuf.ByteString value) {
      value.getClass();
  
      entry_ = value;
    }
    /**
     * <pre>
     * entry contains a serialized Entry.
     * </pre>
     *
     * <code>bytes entry = 1;</code>
     */
    private void clearEntry() {
      
      entry_ = getDefaultInstance().getEntry();
    }

    public static final int SIGNATURES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> signatures_;
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return A list containing the signatures.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @return The count of signatures.
     */
    @java.lang.Override
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index of the element to return.
     * @return The signatures at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }
    private void ensureSignaturesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = signatures_;
      if (!tmp.isModifiable()) {
        signatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param index The index to set the value at.
     * @param value The signatures to set.
     */
    private void setSignatures(
        int index, com.google.protobuf.ByteString value) {
      value.getClass();
  ensureSignaturesIsMutable();
      signatures_.set(index, value);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param value The signatures to add.
     */
    private void addSignatures(com.google.protobuf.ByteString value) {
      value.getClass();
  ensureSignaturesIsMutable();
      signatures_.add(value);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     * @param values The signatures to add.
     */
    private void addAllSignatures(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureSignaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, signatures_);
    }
    /**
     * <pre>
     * signatures on entry. Must be signed by keys from both previous and
     * current revisions. The first proves ownership of new revision key, and the
     * second proves that the correct owner is making this change.
     * The signature scheme is specified by the authorized_keys tink.Keyset.
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    private void clearSignatures() {
      signatures_ = emptyProtobufList();
    }

    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.SignedEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.SignedEntry prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * SignedEntry is a cryptographically signed Entry.
     * SignedEntry will be storead as a trillian.Map leaf.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.SignedEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.SignedEntry, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.SignedEntry)
        google.keytransparency.v1.Keytransparency.SignedEntryOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.SignedEntry.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @return The entry.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEntry() {
        return instance.getEntry();
      }
      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @param value The entry to set.
       * @return This builder for chaining.
       */
      public Builder setEntry(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEntry(value);
        return this;
      }
      /**
       * <pre>
       * entry contains a serialized Entry.
       * </pre>
       *
       * <code>bytes entry = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEntry() {
        copyOnWrite();
        instance.clearEntry();
        return this;
      }

      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return A list containing the signatures.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getSignaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSignaturesList());
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return The count of signatures.
       */
      @java.lang.Override
      public int getSignaturesCount() {
        return instance.getSignaturesCount();
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param index The index of the element to return.
       * @return The signatures at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignatures(int index) {
        return instance.getSignatures(index);
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to set.
       * @return This builder for chaining.
       */
      public Builder setSignatures(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignatures(index, value);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param value The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addSignatures(value);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @param values The signatures to add.
       * @return This builder for chaining.
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllSignatures(values);
        return this;
      }
      /**
       * <pre>
       * signatures on entry. Must be signed by keys from both previous and
       * current revisions. The first proves ownership of new revision key, and the
       * second proves that the correct owner is making this change.
       * The signature scheme is specified by the authorized_keys tink.Keyset.
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignatures() {
        copyOnWrite();
        instance.clearSignatures();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.SignedEntry)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.SignedEntry();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "entry_",
              "signatures_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\n\u0002\u001c" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.SignedEntry> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.SignedEntry.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.SignedEntry>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.SignedEntry)
    private static final google.keytransparency.v1.Keytransparency.SignedEntry DEFAULT_INSTANCE;
    static {
      SignedEntry defaultInstance = new SignedEntry();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SignedEntry.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.SignedEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SignedEntry> PARSER;

    public static com.google.protobuf.Parser<SignedEntry> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MutationProofOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.MutationProof)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     * @return Whether the mutation field is set.
     */
    boolean hasMutation();
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     * @return The mutation.
     */
    google.keytransparency.v1.Keytransparency.SignedEntry getMutation();

    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     * @return Whether the leafProof field is set.
     */
    boolean hasLeafProof();
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     * @return The leafProof.
     */
    google.trillian.proto.MapLeafInclusion getLeafProof();
  }
  /**
   * <pre>
   * MutationProof contains the information necessary to compute the new leaf
   * value. It contains a) the old leaf value with it's inclusion proof and b) the
   * mutation. The new leaf value is computed via:
   *       Mutate(leaf_value, mutation)
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.MutationProof}
   */
  public  static final class MutationProof extends
      com.google.protobuf.GeneratedMessageLite<
          MutationProof, MutationProof.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.MutationProof)
      MutationProofOrBuilder {
    private MutationProof() {
    }
    public static final int MUTATION_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.SignedEntry mutation_;
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     */
    @java.lang.Override
    public boolean hasMutation() {
      return mutation_ != null;
    }
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.SignedEntry getMutation() {
      return mutation_ == null ? google.keytransparency.v1.Keytransparency.SignedEntry.getDefaultInstance() : mutation_;
    }
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     */
    private void setMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
      value.getClass();
  mutation_ = value;
      
      }
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
      value.getClass();
  if (mutation_ != null &&
          mutation_ != google.keytransparency.v1.Keytransparency.SignedEntry.getDefaultInstance()) {
        mutation_ =
          google.keytransparency.v1.Keytransparency.SignedEntry.newBuilder(mutation_).mergeFrom(value).buildPartial();
      } else {
        mutation_ = value;
      }
      
    }
    /**
     * <pre>
     * mutation contains the information needed to modify the old leaf.
     * The format of a mutation is specific to the particular Mutate function
     * being used.
     * </pre>
     *
     * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
     */
    private void clearMutation() {  mutation_ = null;
      
    }

    public static final int LEAF_PROOF_FIELD_NUMBER = 2;
    private google.trillian.proto.MapLeafInclusion leafProof_;
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     */
    @java.lang.Override
    public boolean hasLeafProof() {
      return leafProof_ != null;
    }
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     */
    @java.lang.Override
    public google.trillian.proto.MapLeafInclusion getLeafProof() {
      return leafProof_ == null ? google.trillian.proto.MapLeafInclusion.getDefaultInstance() : leafProof_;
    }
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     */
    private void setLeafProof(google.trillian.proto.MapLeafInclusion value) {
      value.getClass();
  leafProof_ = value;
      
      }
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLeafProof(google.trillian.proto.MapLeafInclusion value) {
      value.getClass();
  if (leafProof_ != null &&
          leafProof_ != google.trillian.proto.MapLeafInclusion.getDefaultInstance()) {
        leafProof_ =
          google.trillian.proto.MapLeafInclusion.newBuilder(leafProof_).mergeFrom(value).buildPartial();
      } else {
        leafProof_ = value;
      }
      
    }
    /**
     * <pre>
     * leaf_proof contains the leaf and its inclusion proof for a particular map
     * revision.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
     */
    private void clearLeafProof() {  leafProof_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MutationProof parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.MutationProof prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * MutationProof contains the information necessary to compute the new leaf
     * value. It contains a) the old leaf value with it's inclusion proof and b) the
     * mutation. The new leaf value is computed via:
     *       Mutate(leaf_value, mutation)
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.MutationProof}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.MutationProof, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.MutationProof)
        google.keytransparency.v1.Keytransparency.MutationProofOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.MutationProof.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      @java.lang.Override
      public boolean hasMutation() {
        return instance.hasMutation();
      }
      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.SignedEntry getMutation() {
        return instance.getMutation();
      }
      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      public Builder setMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
        copyOnWrite();
        instance.setMutation(value);
        return this;
        }
      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      public Builder setMutation(
          google.keytransparency.v1.Keytransparency.SignedEntry.Builder builderForValue) {
        copyOnWrite();
        instance.setMutation(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      public Builder mergeMutation(google.keytransparency.v1.Keytransparency.SignedEntry value) {
        copyOnWrite();
        instance.mergeMutation(value);
        return this;
      }
      /**
       * <pre>
       * mutation contains the information needed to modify the old leaf.
       * The format of a mutation is specific to the particular Mutate function
       * being used.
       * </pre>
       *
       * <code>.google.keytransparency.v1.SignedEntry mutation = 1;</code>
       */
      public Builder clearMutation() {  copyOnWrite();
        instance.clearMutation();
        return this;
      }

      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      @java.lang.Override
      public boolean hasLeafProof() {
        return instance.hasLeafProof();
      }
      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      @java.lang.Override
      public google.trillian.proto.MapLeafInclusion getLeafProof() {
        return instance.getLeafProof();
      }
      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      public Builder setLeafProof(google.trillian.proto.MapLeafInclusion value) {
        copyOnWrite();
        instance.setLeafProof(value);
        return this;
        }
      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      public Builder setLeafProof(
          google.trillian.proto.MapLeafInclusion.Builder builderForValue) {
        copyOnWrite();
        instance.setLeafProof(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      public Builder mergeLeafProof(google.trillian.proto.MapLeafInclusion value) {
        copyOnWrite();
        instance.mergeLeafProof(value);
        return this;
      }
      /**
       * <pre>
       * leaf_proof contains the leaf and its inclusion proof for a particular map
       * revision.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion leaf_proof = 2;</code>
       */
      public Builder clearLeafProof() {  copyOnWrite();
        instance.clearLeafProof();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.MutationProof)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.MutationProof();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "mutation_",
              "leafProof_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.MutationProof> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.MutationProof.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.MutationProof>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.MutationProof)
    private static final google.keytransparency.v1.Keytransparency.MutationProof DEFAULT_INSTANCE;
    static {
      MutationProof defaultInstance = new MutationProof();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MutationProof.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.MutationProof getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MutationProof> PARSER;

    public static com.google.protobuf.Parser<MutationProof> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MapperMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.MapperMetadata)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int64 highest_fully_completed_seq = 1;</code>
     * @return The highestFullyCompletedSeq.
     */
    long getHighestFullyCompletedSeq();
  }
  /**
   * <pre>
   * MapperMetadata tracks the mutations that have been mapped so far. It is
   * embedded in the Trillian SignedMapHead.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.MapperMetadata}
   */
  public  static final class MapperMetadata extends
      com.google.protobuf.GeneratedMessageLite<
          MapperMetadata, MapperMetadata.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.MapperMetadata)
      MapperMetadataOrBuilder {
    private MapperMetadata() {
    }
    public static final int HIGHEST_FULLY_COMPLETED_SEQ_FIELD_NUMBER = 1;
    private long highestFullyCompletedSeq_;
    /**
     * <code>int64 highest_fully_completed_seq = 1;</code>
     * @return The highestFullyCompletedSeq.
     */
    @java.lang.Override
    public long getHighestFullyCompletedSeq() {
      return highestFullyCompletedSeq_;
    }
    /**
     * <code>int64 highest_fully_completed_seq = 1;</code>
     * @param value The highestFullyCompletedSeq to set.
     */
    private void setHighestFullyCompletedSeq(long value) {
      
      highestFullyCompletedSeq_ = value;
    }
    /**
     * <code>int64 highest_fully_completed_seq = 1;</code>
     */
    private void clearHighestFullyCompletedSeq() {
      
      highestFullyCompletedSeq_ = 0L;
    }

    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapperMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.MapperMetadata prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * MapperMetadata tracks the mutations that have been mapped so far. It is
     * embedded in the Trillian SignedMapHead.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.MapperMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.MapperMetadata, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.MapperMetadata)
        google.keytransparency.v1.Keytransparency.MapperMetadataOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.MapperMetadata.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int64 highest_fully_completed_seq = 1;</code>
       * @return The highestFullyCompletedSeq.
       */
      @java.lang.Override
      public long getHighestFullyCompletedSeq() {
        return instance.getHighestFullyCompletedSeq();
      }
      /**
       * <code>int64 highest_fully_completed_seq = 1;</code>
       * @param value The highestFullyCompletedSeq to set.
       * @return This builder for chaining.
       */
      public Builder setHighestFullyCompletedSeq(long value) {
        copyOnWrite();
        instance.setHighestFullyCompletedSeq(value);
        return this;
      }
      /**
       * <code>int64 highest_fully_completed_seq = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestFullyCompletedSeq() {
        copyOnWrite();
        instance.clearHighestFullyCompletedSeq();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.MapperMetadata)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.MapperMetadata();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "highestFullyCompletedSeq_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.MapperMetadata> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.MapperMetadata.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.MapperMetadata>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.MapperMetadata)
    private static final google.keytransparency.v1.Keytransparency.MapperMetadata DEFAULT_INSTANCE;
    static {
      MapperMetadata defaultInstance = new MapperMetadata();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MapperMetadata.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.MapperMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MapperMetadata> PARSER;

    public static com.google.protobuf.Parser<MapperMetadata> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetUserRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.GetUserRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * Gets the leaf entry for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.GetUserRequest}
   */
  public  static final class GetUserRequest extends
      com.google.protobuf.GeneratedMessageLite<
          GetUserRequest, GetUserRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.GetUserRequest)
      GetUserRequestOrBuilder {
    private GetUserRequest() {
      directoryId_ = "";
      userId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private java.lang.String userId_;
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The userId to set.
     */
    private void setUserId(
        java.lang.String value) {
      value.getClass();
  
      userId_ = value;
    }
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <pre>
     * user_id is the user identifier, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The bytes for userId to set.
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      userId_ = value.toStringUtf8();
      
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 4;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.GetUserRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Gets the leaf entry for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.GetUserRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.GetUserRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.GetUserRequest)
        google.keytransparency.v1.Keytransparency.GetUserRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.GetUserRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_id is the user identifier, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The userId.
       */
      @java.lang.Override
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * user_id is the user identifier, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The bytes for userId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <pre>
       * user_id is the user identifier, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.GetUserRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.GetUserRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userId_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0004\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0004\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.GetUserRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.GetUserRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.GetUserRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.GetUserRequest)
    private static final google.keytransparency.v1.Keytransparency.GetUserRequest DEFAULT_INSTANCE;
    static {
      GetUserRequest defaultInstance = new GetUserRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetUserRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.GetUserRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetUserRequest> PARSER;

    public static com.google.protobuf.Parser<GetUserRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MapLeafOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.MapLeaf)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * vrf_proof is the proof for the VRF on user_id.
     * </pre>
     *
     * <code>bytes vrf_proof = 1;</code>
     * @return The vrfProof.
     */
    com.google.protobuf.ByteString getVrfProof();

    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     * @return Whether the mapInclusion field is set.
     */
    boolean hasMapInclusion();
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     * @return The mapInclusion.
     */
    google.trillian.proto.MapLeafInclusion getMapInclusion();

    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     * @return Whether the committed field is set.
     */
    boolean hasCommitted();
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     * @return The committed.
     */
    google.keytransparency.v1.Keytransparency.Committed getCommitted();
  }
  /**
   * <pre>
   * Leaf entry for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.MapLeaf}
   */
  public  static final class MapLeaf extends
      com.google.protobuf.GeneratedMessageLite<
          MapLeaf, MapLeaf.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.MapLeaf)
      MapLeafOrBuilder {
    private MapLeaf() {
      vrfProof_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int VRF_PROOF_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString vrfProof_;
    /**
     * <pre>
     * vrf_proof is the proof for the VRF on user_id.
     * </pre>
     *
     * <code>bytes vrf_proof = 1;</code>
     * @return The vrfProof.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getVrfProof() {
      return vrfProof_;
    }
    /**
     * <pre>
     * vrf_proof is the proof for the VRF on user_id.
     * </pre>
     *
     * <code>bytes vrf_proof = 1;</code>
     * @param value The vrfProof to set.
     */
    private void setVrfProof(com.google.protobuf.ByteString value) {
      value.getClass();
  
      vrfProof_ = value;
    }
    /**
     * <pre>
     * vrf_proof is the proof for the VRF on user_id.
     * </pre>
     *
     * <code>bytes vrf_proof = 1;</code>
     */
    private void clearVrfProof() {
      
      vrfProof_ = getDefaultInstance().getVrfProof();
    }

    public static final int MAP_INCLUSION_FIELD_NUMBER = 2;
    private google.trillian.proto.MapLeafInclusion mapInclusion_;
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     */
    @java.lang.Override
    public boolean hasMapInclusion() {
      return mapInclusion_ != null;
    }
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     */
    @java.lang.Override
    public google.trillian.proto.MapLeafInclusion getMapInclusion() {
      return mapInclusion_ == null ? google.trillian.proto.MapLeafInclusion.getDefaultInstance() : mapInclusion_;
    }
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     */
    private void setMapInclusion(google.trillian.proto.MapLeafInclusion value) {
      value.getClass();
  mapInclusion_ = value;
      
      }
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapInclusion(google.trillian.proto.MapLeafInclusion value) {
      value.getClass();
  if (mapInclusion_ != null &&
          mapInclusion_ != google.trillian.proto.MapLeafInclusion.getDefaultInstance()) {
        mapInclusion_ =
          google.trillian.proto.MapLeafInclusion.newBuilder(mapInclusion_).mergeFrom(value).buildPartial();
      } else {
        mapInclusion_ = value;
      }
      
    }
    /**
     * <pre>
     * map_inclusion is an inclusion proof for the map leaf in an accompanying
     * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
     * stores a serialized Entry proto.
     * </pre>
     *
     * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
     */
    private void clearMapInclusion() {  mapInclusion_ = null;
      
    }

    public static final int COMMITTED_FIELD_NUMBER = 3;
    private google.keytransparency.v1.Keytransparency.Committed committed_;
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.Override
    public boolean hasCommitted() {
      return committed_ != null;
    }
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.Committed getCommitted() {
      return committed_ == null ? google.keytransparency.v1.Keytransparency.Committed.getDefaultInstance() : committed_;
    }
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    private void setCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
      value.getClass();
  committed_ = value;
      
      }
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
      value.getClass();
  if (committed_ != null &&
          committed_ != google.keytransparency.v1.Keytransparency.Committed.getDefaultInstance()) {
        committed_ =
          google.keytransparency.v1.Keytransparency.Committed.newBuilder(committed_).mergeFrom(value).buildPartial();
      } else {
        committed_ = value;
      }
      
    }
    /**
     * <pre>
     * committed contains the data and nonce used to make a cryptographic
     * commitment, which is stored in the commitment field of the serialized Entry
     * proto from map_inclusion.
     * Note: committed can also be found serialized in
     * map_inclusion.leaf.extra_data.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Committed committed = 3;</code>
     */
    private void clearCommitted() {  committed_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapLeaf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.MapLeaf prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Leaf entry for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.MapLeaf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.MapLeaf, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.MapLeaf)
        google.keytransparency.v1.Keytransparency.MapLeafOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.MapLeaf.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * vrf_proof is the proof for the VRF on user_id.
       * </pre>
       *
       * <code>bytes vrf_proof = 1;</code>
       * @return The vrfProof.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getVrfProof() {
        return instance.getVrfProof();
      }
      /**
       * <pre>
       * vrf_proof is the proof for the VRF on user_id.
       * </pre>
       *
       * <code>bytes vrf_proof = 1;</code>
       * @param value The vrfProof to set.
       * @return This builder for chaining.
       */
      public Builder setVrfProof(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVrfProof(value);
        return this;
      }
      /**
       * <pre>
       * vrf_proof is the proof for the VRF on user_id.
       * </pre>
       *
       * <code>bytes vrf_proof = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVrfProof() {
        copyOnWrite();
        instance.clearVrfProof();
        return this;
      }

      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      @java.lang.Override
      public boolean hasMapInclusion() {
        return instance.hasMapInclusion();
      }
      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      @java.lang.Override
      public google.trillian.proto.MapLeafInclusion getMapInclusion() {
        return instance.getMapInclusion();
      }
      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      public Builder setMapInclusion(google.trillian.proto.MapLeafInclusion value) {
        copyOnWrite();
        instance.setMapInclusion(value);
        return this;
        }
      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      public Builder setMapInclusion(
          google.trillian.proto.MapLeafInclusion.Builder builderForValue) {
        copyOnWrite();
        instance.setMapInclusion(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      public Builder mergeMapInclusion(google.trillian.proto.MapLeafInclusion value) {
        copyOnWrite();
        instance.mergeMapInclusion(value);
        return this;
      }
      /**
       * <pre>
       * map_inclusion is an inclusion proof for the map leaf in an accompanying
       * trillian.SignedMapRoot. If the leaf is non-empty, its leaf.leaf_value
       * stores a serialized Entry proto.
       * </pre>
       *
       * <code>.trillian.MapLeafInclusion map_inclusion = 2;</code>
       */
      public Builder clearMapInclusion() {  copyOnWrite();
        instance.clearMapInclusion();
        return this;
      }

      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      @java.lang.Override
      public boolean hasCommitted() {
        return instance.hasCommitted();
      }
      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.Committed getCommitted() {
        return instance.getCommitted();
      }
      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder setCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
        copyOnWrite();
        instance.setCommitted(value);
        return this;
        }
      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder setCommitted(
          google.keytransparency.v1.Keytransparency.Committed.Builder builderForValue) {
        copyOnWrite();
        instance.setCommitted(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder mergeCommitted(google.keytransparency.v1.Keytransparency.Committed value) {
        copyOnWrite();
        instance.mergeCommitted(value);
        return this;
      }
      /**
       * <pre>
       * committed contains the data and nonce used to make a cryptographic
       * commitment, which is stored in the commitment field of the serialized Entry
       * proto from map_inclusion.
       * Note: committed can also be found serialized in
       * map_inclusion.leaf.extra_data.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Committed committed = 3;</code>
       */
      public Builder clearCommitted() {  copyOnWrite();
        instance.clearCommitted();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.MapLeaf)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.MapLeaf();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "vrfProof_",
              "mapInclusion_",
              "committed_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\t\u0003" +
                "\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.MapLeaf> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.MapLeaf.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.MapLeaf>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.MapLeaf)
    private static final google.keytransparency.v1.Keytransparency.MapLeaf DEFAULT_INSTANCE;
    static {
      MapLeaf defaultInstance = new MapLeaf();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MapLeaf.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.MapLeaf getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MapLeaf> PARSER;

    public static com.google.protobuf.Parser<MapLeaf> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetUserResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.GetUserResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     * @return Whether the revision field is set.
     */
    boolean hasRevision();
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     * @return The revision.
     */
    google.keytransparency.v1.Keytransparency.Revision getRevision();

    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     * @return Whether the leaf field is set.
     */
    boolean hasLeaf();
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     * @return The leaf.
     */
    google.keytransparency.v1.Keytransparency.MapLeaf getLeaf();
  }
  /**
   * <pre>
   * Contains the leaf entry for a user at the most recently published revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.GetUserResponse}
   */
  public  static final class GetUserResponse extends
      com.google.protobuf.GeneratedMessageLite<
          GetUserResponse, GetUserResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.GetUserResponse)
      GetUserResponseOrBuilder {
    private GetUserResponse() {
    }
    public static final int REVISION_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.Revision revision_;
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.Override
    public boolean hasRevision() {
      return revision_ != null;
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.Revision getRevision() {
      return revision_ == null ? google.keytransparency.v1.Keytransparency.Revision.getDefaultInstance() : revision_;
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    private void setRevision(google.keytransparency.v1.Keytransparency.Revision value) {
      value.getClass();
  revision_ = value;
      
      }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRevision(google.keytransparency.v1.Keytransparency.Revision value) {
      value.getClass();
  if (revision_ != null &&
          revision_ != google.keytransparency.v1.Keytransparency.Revision.getDefaultInstance()) {
        revision_ =
          google.keytransparency.v1.Keytransparency.Revision.newBuilder(revision_).mergeFrom(value).buildPartial();
      } else {
        revision_ = value;
      }
      
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    private void clearRevision() {  revision_ = null;
      
    }

    public static final int LEAF_FIELD_NUMBER = 2;
    private google.keytransparency.v1.Keytransparency.MapLeaf leaf_;
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     */
    @java.lang.Override
    public boolean hasLeaf() {
      return leaf_ != null;
    }
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapLeaf getLeaf() {
      return leaf_ == null ? google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance() : leaf_;
    }
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     */
    private void setLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
      value.getClass();
  leaf_ = value;
      
      }
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
      value.getClass();
  if (leaf_ != null &&
          leaf_ != google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance()) {
        leaf_ =
          google.keytransparency.v1.Keytransparency.MapLeaf.newBuilder(leaf_).mergeFrom(value).buildPartial();
      } else {
        leaf_ = value;
      }
      
    }
    /**
     * <pre>
     * leaf is the leaf entry for the requested user.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
     */
    private void clearLeaf() {  leaf_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetUserResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.GetUserResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Contains the leaf entry for a user at the most recently published revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.GetUserResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.GetUserResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.GetUserResponse)
        google.keytransparency.v1.Keytransparency.GetUserResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.GetUserResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      @java.lang.Override
      public boolean hasRevision() {
        return instance.hasRevision();
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.Revision getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder setRevision(google.keytransparency.v1.Keytransparency.Revision value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
        }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder setRevision(
          google.keytransparency.v1.Keytransparency.Revision.Builder builderForValue) {
        copyOnWrite();
        instance.setRevision(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder mergeRevision(google.keytransparency.v1.Keytransparency.Revision value) {
        copyOnWrite();
        instance.mergeRevision(value);
        return this;
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder clearRevision() {  copyOnWrite();
        instance.clearRevision();
        return this;
      }

      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      @java.lang.Override
      public boolean hasLeaf() {
        return instance.hasLeaf();
      }
      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapLeaf getLeaf() {
        return instance.getLeaf();
      }
      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      public Builder setLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
        copyOnWrite();
        instance.setLeaf(value);
        return this;
        }
      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      public Builder setLeaf(
          google.keytransparency.v1.Keytransparency.MapLeaf.Builder builderForValue) {
        copyOnWrite();
        instance.setLeaf(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      public Builder mergeLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
        copyOnWrite();
        instance.mergeLeaf(value);
        return this;
      }
      /**
       * <pre>
       * leaf is the leaf entry for the requested user.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf leaf = 2;</code>
       */
      public Builder clearLeaf() {  copyOnWrite();
        instance.clearLeaf();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.GetUserResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.GetUserResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "revision_",
              "leaf_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.GetUserResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.GetUserResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.GetUserResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.GetUserResponse)
    private static final google.keytransparency.v1.Keytransparency.GetUserResponse DEFAULT_INSTANCE;
    static {
      GetUserResponse defaultInstance = new GetUserResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetUserResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.GetUserResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetUserResponse> PARSER;

    public static com.google.protobuf.Parser<GetUserResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchGetUserRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchGetUserRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    java.util.List<java.lang.String>
        getUserIdsList();
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    int getUserIdsCount();
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    java.lang.String getUserIds(int index);
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    com.google.protobuf.ByteString
        getUserIdsBytes(int index);

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * BatchGetUserRequest contains multiple user_ids to fetch.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchGetUserRequest}
   */
  public  static final class BatchGetUserRequest extends
      com.google.protobuf.GeneratedMessageLite<
          BatchGetUserRequest, BatchGetUserRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchGetUserRequest)
      BatchGetUserRequestOrBuilder {
    private BatchGetUserRequest() {
      directoryId_ = "";
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> userIds_;
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getUserIdsList() {
      return userIds_;
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    @java.lang.Override
    public int getUserIdsCount() {
      return userIds_.size();
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    @java.lang.Override
    public java.lang.String getUserIds(int index) {
      return userIds_.get(index);
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userIds at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          userIds_.get(index));
    }
    private void ensureUserIdsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          userIds_;  if (!tmp.isModifiable()) {
        userIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index to set the value at.
     * @param value The userIds to set.
     */
    private void setUserIds(
        int index, java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.set(index, value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The userIds to add.
     */
    private void addUserIds(
        java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.add(value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param values The userIds to add.
     */
    private void addAllUserIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureUserIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userIds_);
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     */
    private void clearUserIds() {
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * user_ids are the user identifiers, the format for which is defined by the
     * application.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The bytes of the userIds to add.
     */
    private void addUserIdsBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureUserIdsIsMutable();
      userIds_.add(value.toStringUtf8());
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 4;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchGetUserRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchGetUserRequest contains multiple user_ids to fetch.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchGetUserRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchGetUserRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchGetUserRequest)
        google.keytransparency.v1.Keytransparency.BatchGetUserRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchGetUserRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return A list containing the userIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getUserIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserIdsList());
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return The count of userIds.
       */
      @java.lang.Override
      public int getUserIdsCount() {
        return instance.getUserIdsCount();
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The userIds at the given index.
       */
      @java.lang.Override
      public java.lang.String getUserIds(int index) {
        return instance.getUserIds(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the userIds at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdsBytes(int index) {
        return instance.getUserIdsBytes(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The userIds to set.
       * @return This builder for chaining.
       */
      public Builder setUserIds(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setUserIds(index, value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIds(
          java.lang.String value) {
        copyOnWrite();
        instance.addUserIds(value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param values The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserIds(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllUserIds(values);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserIds() {
        copyOnWrite();
        instance.clearUserIds();
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers, the format for which is defined by the
       * application.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The bytes of the userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIdsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addUserIdsBytes(value);
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchGetUserRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchGetUserRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userIds_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0004\u0003\u0000\u0001\u0000\u0001\u0208\u0002\u021a" +
                "\u0004\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchGetUserRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchGetUserRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchGetUserRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchGetUserRequest)
    private static final google.keytransparency.v1.Keytransparency.BatchGetUserRequest DEFAULT_INSTANCE;
    static {
      BatchGetUserRequest defaultInstance = new BatchGetUserRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchGetUserRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchGetUserRequest> PARSER;

    public static com.google.protobuf.Parser<BatchGetUserRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchGetUserIndexRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchGetUserIndexRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    java.util.List<java.lang.String>
        getUserIdsList();
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    int getUserIdsCount();
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    java.lang.String getUserIds(int index);
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    com.google.protobuf.ByteString
        getUserIdsBytes(int index);
  }
  /**
   * <pre>
   * BatchGetUserIndexRequest identifies a set of users.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchGetUserIndexRequest}
   */
  public  static final class BatchGetUserIndexRequest extends
      com.google.protobuf.GeneratedMessageLite<
          BatchGetUserIndexRequest, BatchGetUserIndexRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchGetUserIndexRequest)
      BatchGetUserIndexRequestOrBuilder {
    private BatchGetUserIndexRequest() {
      directoryId_ = "";
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> userIds_;
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getUserIdsList() {
      return userIds_;
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    @java.lang.Override
    public int getUserIdsCount() {
      return userIds_.size();
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    @java.lang.Override
    public java.lang.String getUserIds(int index) {
      return userIds_.get(index);
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userIds at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          userIds_.get(index));
    }
    private void ensureUserIdsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          userIds_;  if (!tmp.isModifiable()) {
        userIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index to set the value at.
     * @param value The userIds to set.
     */
    private void setUserIds(
        int index, java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.set(index, value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The userIds to add.
     */
    private void addUserIds(
        java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.add(value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param values The userIds to add.
     */
    private void addAllUserIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureUserIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userIds_);
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     */
    private void clearUserIds() {
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * user_ids are the user identifiers
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The bytes of the userIds to add.
     */
    private void addUserIdsBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureUserIdsIsMutable();
      userIds_.add(value.toStringUtf8());
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchGetUserIndexRequest identifies a set of users.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchGetUserIndexRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchGetUserIndexRequest)
        google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return A list containing the userIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getUserIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserIdsList());
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return The count of userIds.
       */
      @java.lang.Override
      public int getUserIdsCount() {
        return instance.getUserIdsCount();
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The userIds at the given index.
       */
      @java.lang.Override
      public java.lang.String getUserIds(int index) {
        return instance.getUserIds(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the userIds at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdsBytes(int index) {
        return instance.getUserIdsBytes(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The userIds to set.
       * @return This builder for chaining.
       */
      public Builder setUserIds(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setUserIds(index, value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIds(
          java.lang.String value) {
        copyOnWrite();
        instance.addUserIds(value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param values The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserIds(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllUserIds(values);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserIds() {
        copyOnWrite();
        instance.clearUserIds();
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The bytes of the userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIdsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addUserIdsBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchGetUserIndexRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userIds_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u0208\u0002\u021a" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchGetUserIndexRequest)
    private static final google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest DEFAULT_INSTANCE;
    static {
      BatchGetUserIndexRequest defaultInstance = new BatchGetUserIndexRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchGetUserIndexRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchGetUserIndexRequest> PARSER;

    public static com.google.protobuf.Parser<BatchGetUserIndexRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchGetUserIndexResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchGetUserIndexResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    int getProofsCount();
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    boolean containsProofs(
        java.lang.String key);
    /**
     * Use {@link #getProofsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getProofs();
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getProofsMap();
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */

    com.google.protobuf.ByteString getProofsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */

    com.google.protobuf.ByteString getProofsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * BatchGetUserIndexRequest identifies a single user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchGetUserIndexResponse}
   */
  public  static final class BatchGetUserIndexResponse extends
      com.google.protobuf.GeneratedMessageLite<
          BatchGetUserIndexResponse, BatchGetUserIndexResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchGetUserIndexResponse)
      BatchGetUserIndexResponseOrBuilder {
    private BatchGetUserIndexResponse() {
    }
    public static final int PROOFS_FIELD_NUMBER = 1;
    private static final class ProofsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, com.google.protobuf.ByteString> proofs_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetProofs() {
      return proofs_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableProofs() {
      if (!proofs_.isMutable()) {
        proofs_ = proofs_.mutableCopy();
      }
      return proofs_;
    }
    @java.lang.Override

    public int getProofsCount() {
      return internalGetProofs().size();
    }
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    @java.lang.Override

    public boolean containsProofs(
        java.lang.String key) {
      key.getClass();
      return internalGetProofs().containsKey(key);
    }
    /**
     * Use {@link #getProofsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getProofs() {
      return getProofsMap();
    }
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getProofsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetProofs());
    }
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getProofsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetProofs();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getProofsOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetProofs();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * proofs is a map from user_id to its VRF proof.
     * Clients get the index by verifying the VRF proof.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; proofs = 1;</code>
     */
    private java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableProofsMap() {
      return internalGetMutableProofs();
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchGetUserIndexRequest identifies a single user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchGetUserIndexResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchGetUserIndexResponse)
        google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      @java.lang.Override

      public int getProofsCount() {
        return instance.getProofsMap().size();
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      @java.lang.Override

      public boolean containsProofs(
          java.lang.String key) {
        key.getClass();
        return instance.getProofsMap().containsKey(key);
      }

      public Builder clearProofs() {
        copyOnWrite();
        instance.getMutableProofsMap().clear();
        return this;
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */

      public Builder removeProofs(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableProofsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getProofsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getProofs() {
        return getProofsMap();
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getProofsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getProofsMap());
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getProofsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getProofsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getProofsOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            instance.getProofsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      public Builder putProofs(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableProofsMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * proofs is a map from user_id to its VRF proof.
       * Clients get the index by verifying the VRF proof.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; proofs = 1;</code>
       */
      public Builder putAllProofs(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.getMutableProofsMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchGetUserIndexResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "proofs_",
              ProofsDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u00012";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchGetUserIndexResponse)
    private static final google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse DEFAULT_INSTANCE;
    static {
      BatchGetUserIndexResponse defaultInstance = new BatchGetUserIndexResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchGetUserIndexResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserIndexResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchGetUserIndexResponse> PARSER;

    public static com.google.protobuf.Parser<BatchGetUserIndexResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchGetUserResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchGetUserResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     * @return Whether the revision field is set.
     */
    boolean hasRevision();
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     * @return The revision.
     */
    google.keytransparency.v1.Keytransparency.Revision getRevision();

    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    int getMapLeavesByUserIdCount();
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    boolean containsMapLeavesByUserId(
        java.lang.String key);
    /**
     * Use {@link #getMapLeavesByUserIdMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMapLeavesByUserId();
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMapLeavesByUserIdMap();
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */

    google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
        java.lang.String key,
        google.keytransparency.v1.Keytransparency.MapLeaf defaultValue);
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */

    google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * BatchGetUserResponse contains the leaf entries for a set of users at the most
   * recently published revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchGetUserResponse}
   */
  public  static final class BatchGetUserResponse extends
      com.google.protobuf.GeneratedMessageLite<
          BatchGetUserResponse, BatchGetUserResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchGetUserResponse)
      BatchGetUserResponseOrBuilder {
    private BatchGetUserResponse() {
    }
    public static final int REVISION_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.Revision revision_;
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.Override
    public boolean hasRevision() {
      return revision_ != null;
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.Revision getRevision() {
      return revision_ == null ? google.keytransparency.v1.Keytransparency.Revision.getDefaultInstance() : revision_;
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    private void setRevision(google.keytransparency.v1.Keytransparency.Revision value) {
      value.getClass();
  revision_ = value;
      
      }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRevision(google.keytransparency.v1.Keytransparency.Revision value) {
      value.getClass();
  if (revision_ != null &&
          revision_ != google.keytransparency.v1.Keytransparency.Revision.getDefaultInstance()) {
        revision_ =
          google.keytransparency.v1.Keytransparency.Revision.newBuilder(revision_).mergeFrom(value).buildPartial();
      } else {
        revision_ = value;
      }
      
    }
    /**
     * <pre>
     * revision is the most recently published revision.
     * </pre>
     *
     * <code>.google.keytransparency.v1.Revision revision = 1;</code>
     */
    private void clearRevision() {  revision_ = null;
      
    }

    public static final int MAP_LEAVES_BY_USER_ID_FIELD_NUMBER = 2;
    private static final class MapLeavesByUserIdDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> mapLeavesByUserId_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    internalGetMapLeavesByUserId() {
      return mapLeavesByUserId_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    internalGetMutableMapLeavesByUserId() {
      if (!mapLeavesByUserId_.isMutable()) {
        mapLeavesByUserId_ = mapLeavesByUserId_.mutableCopy();
      }
      return mapLeavesByUserId_;
    }
    @java.lang.Override

    public int getMapLeavesByUserIdCount() {
      return internalGetMapLeavesByUserId().size();
    }
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public boolean containsMapLeavesByUserId(
        java.lang.String key) {
      key.getClass();
      return internalGetMapLeavesByUserId().containsKey(key);
    }
    /**
     * Use {@link #getMapLeavesByUserIdMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserId() {
      return getMapLeavesByUserIdMap();
    }
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserIdMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetMapLeavesByUserId());
    }
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
        java.lang.String key,
        google.keytransparency.v1.Keytransparency.MapLeaf defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
          internalGetMapLeavesByUserId();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
          internalGetMapLeavesByUserId();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * map_leaves_by_user_id is a map from user_id to the map leaf at the most
     * recently published revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    private java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMutableMapLeavesByUserIdMap() {
      return internalGetMutableMapLeavesByUserId();
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchGetUserResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchGetUserResponse contains the leaf entries for a set of users at the most
     * recently published revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchGetUserResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchGetUserResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchGetUserResponse)
        google.keytransparency.v1.Keytransparency.BatchGetUserResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchGetUserResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      @java.lang.Override
      public boolean hasRevision() {
        return instance.hasRevision();
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.Revision getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder setRevision(google.keytransparency.v1.Keytransparency.Revision value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
        }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder setRevision(
          google.keytransparency.v1.Keytransparency.Revision.Builder builderForValue) {
        copyOnWrite();
        instance.setRevision(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder mergeRevision(google.keytransparency.v1.Keytransparency.Revision value) {
        copyOnWrite();
        instance.mergeRevision(value);
        return this;
      }
      /**
       * <pre>
       * revision is the most recently published revision.
       * </pre>
       *
       * <code>.google.keytransparency.v1.Revision revision = 1;</code>
       */
      public Builder clearRevision() {  copyOnWrite();
        instance.clearRevision();
        return this;
      }

      @java.lang.Override

      public int getMapLeavesByUserIdCount() {
        return instance.getMapLeavesByUserIdMap().size();
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public boolean containsMapLeavesByUserId(
          java.lang.String key) {
        key.getClass();
        return instance.getMapLeavesByUserIdMap().containsKey(key);
      }

      public Builder clearMapLeavesByUserId() {
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().clear();
        return this;
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */

      public Builder removeMapLeavesByUserId(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getMapLeavesByUserIdMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserId() {
        return getMapLeavesByUserIdMap();
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserIdMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getMapLeavesByUserIdMap());
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
          java.lang.String key,
          google.keytransparency.v1.Keytransparency.MapLeaf defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
            instance.getMapLeavesByUserIdMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
            instance.getMapLeavesByUserIdMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      public Builder putMapLeavesByUserId(
          java.lang.String key,
          google.keytransparency.v1.Keytransparency.MapLeaf value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * map_leaves_by_user_id is a map from user_id to the map leaf at the most
       * recently published revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      public Builder putAllMapLeavesByUserId(
          java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> values) {
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchGetUserResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchGetUserResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "revision_",
              "mapLeavesByUserId_",
              MapLeavesByUserIdDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0001\u0000\u0000\u0001\t\u00022";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchGetUserResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchGetUserResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchGetUserResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchGetUserResponse)
    private static final google.keytransparency.v1.Keytransparency.BatchGetUserResponse DEFAULT_INSTANCE;
    static {
      BatchGetUserResponse defaultInstance = new BatchGetUserResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchGetUserResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchGetUserResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchGetUserResponse> PARSER;

    public static com.google.protobuf.Parser<BatchGetUserResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListEntryHistoryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListEntryHistoryRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     * start is the starting revision.
     * </pre>
     *
     * <code>int64 start = 2;</code>
     * @return The start.
     */
    long getStart();

    /**
     * <pre>
     * page_size is the maximum number of entries to return.
     * The server can return fewer entries than requested.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @return The pageSize.
     */
    int getPageSize();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * ListEntryHistoryRequest gets a list of historical keys for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListEntryHistoryRequest}
   */
  public  static final class ListEntryHistoryRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ListEntryHistoryRequest, ListEntryHistoryRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListEntryHistoryRequest)
      ListEntryHistoryRequestOrBuilder {
    private ListEntryHistoryRequest() {
      directoryId_ = "";
      userId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 6;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 6;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_ID_FIELD_NUMBER = 1;
    private java.lang.String userId_;
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @param value The userId to set.
     */
    private void setUserId(
        java.lang.String value) {
      value.getClass();
  
      userId_ = value;
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 1;</code>
     * @param value The bytes for userId to set.
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      userId_ = value.toStringUtf8();
      
    }

    public static final int START_FIELD_NUMBER = 2;
    private long start_;
    /**
     * <pre>
     * start is the starting revision.
     * </pre>
     *
     * <code>int64 start = 2;</code>
     * @return The start.
     */
    @java.lang.Override
    public long getStart() {
      return start_;
    }
    /**
     * <pre>
     * start is the starting revision.
     * </pre>
     *
     * <code>int64 start = 2;</code>
     * @param value The start to set.
     */
    private void setStart(long value) {
      
      start_ = value;
    }
    /**
     * <pre>
     * start is the starting revision.
     * </pre>
     *
     * <code>int64 start = 2;</code>
     */
    private void clearStart() {
      
      start_ = 0L;
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 3;
    private int pageSize_;
    /**
     * <pre>
     * page_size is the maximum number of entries to return.
     * The server can return fewer entries than requested.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return.
     * The server can return fewer entries than requested.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     * @param value The pageSize to set.
     */
    private void setPageSize(int value) {
      
      pageSize_ = value;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return.
     * The server can return fewer entries than requested.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = 0;
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 7;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListEntryHistoryRequest gets a list of historical keys for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListEntryHistoryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListEntryHistoryRequest)
        google.keytransparency.v1.Keytransparency.ListEntryHistoryRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 6;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 6;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 6;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 6;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return The userId.
       */
      @java.lang.Override
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return The bytes for userId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 1;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * start is the starting revision.
       * </pre>
       *
       * <code>int64 start = 2;</code>
       * @return The start.
       */
      @java.lang.Override
      public long getStart() {
        return instance.getStart();
      }
      /**
       * <pre>
       * start is the starting revision.
       * </pre>
       *
       * <code>int64 start = 2;</code>
       * @param value The start to set.
       * @return This builder for chaining.
       */
      public Builder setStart(long value) {
        copyOnWrite();
        instance.setStart(value);
        return this;
      }
      /**
       * <pre>
       * start is the starting revision.
       * </pre>
       *
       * <code>int64 start = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStart() {
        copyOnWrite();
        instance.clearStart();
        return this;
      }

      /**
       * <pre>
       * page_size is the maximum number of entries to return.
       * The server can return fewer entries than requested.
       * </pre>
       *
       * <code>int32 page_size = 3;</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return.
       * The server can return fewer entries than requested.
       * </pre>
       *
       * <code>int32 page_size = 3;</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return.
       * The server can return fewer entries than requested.
       * </pre>
       *
       * <code>int32 page_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 7;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListEntryHistoryRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "userId_",
              "start_",
              "pageSize_",
              "directoryId_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0007\u0005\u0000\u0000\u0000\u0001\u0208\u0002\u0002" +
                "\u0003\u0004\u0006\u0208\u0007\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListEntryHistoryRequest)
    private static final google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest DEFAULT_INSTANCE;
    static {
      ListEntryHistoryRequest defaultInstance = new ListEntryHistoryRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListEntryHistoryRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListEntryHistoryRequest> PARSER;

    public static com.google.protobuf.Parser<ListEntryHistoryRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListEntryHistoryResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListEntryHistoryResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    java.util.List<google.keytransparency.v1.Keytransparency.GetUserResponse> 
        getValuesList();
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    google.keytransparency.v1.Keytransparency.GetUserResponse getValues(int index);
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    int getValuesCount();

    /**
     * <pre>
     * next_start is the next page token to query for pagination.
     * next_start is 0 when there are no more results to fetch.
     * </pre>
     *
     * <code>int64 next_start = 2;</code>
     * @return The nextStart.
     */
    long getNextStart();
  }
  /**
   * <pre>
   * ListEntryHistoryResponse requests a paginated history of keys for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListEntryHistoryResponse}
   */
  public  static final class ListEntryHistoryResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ListEntryHistoryResponse, ListEntryHistoryResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListEntryHistoryResponse)
      ListEntryHistoryResponseOrBuilder {
    private ListEntryHistoryResponse() {
      values_ = emptyProtobufList();
    }
    public static final int VALUES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.GetUserResponse> values_;
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.v1.Keytransparency.GetUserResponse> getValuesList() {
      return values_;
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    public java.util.List<? extends google.keytransparency.v1.Keytransparency.GetUserResponseOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.GetUserResponse getValues(int index) {
      return values_.get(index);
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    public google.keytransparency.v1.Keytransparency.GetUserResponseOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }
    private void ensureValuesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.GetUserResponse> tmp = values_;
      if (!tmp.isModifiable()) {
        values_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void setValues(
        int index, google.keytransparency.v1.Keytransparency.GetUserResponse value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.set(index, value);
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void addValues(google.keytransparency.v1.Keytransparency.GetUserResponse value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.add(value);
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void addValues(
        int index, google.keytransparency.v1.Keytransparency.GetUserResponse value) {
      value.getClass();
  ensureValuesIsMutable();
      values_.add(index, value);
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void addAllValues(
        java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.GetUserResponse> values) {
      ensureValuesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, values_);
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void clearValues() {
      values_ = emptyProtobufList();
    }
    /**
     * <pre>
     * values represents the list of keys this user_id has contained over time.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
     */
    private void removeValues(int index) {
      ensureValuesIsMutable();
      values_.remove(index);
    }

    public static final int NEXT_START_FIELD_NUMBER = 2;
    private long nextStart_;
    /**
     * <pre>
     * next_start is the next page token to query for pagination.
     * next_start is 0 when there are no more results to fetch.
     * </pre>
     *
     * <code>int64 next_start = 2;</code>
     * @return The nextStart.
     */
    @java.lang.Override
    public long getNextStart() {
      return nextStart_;
    }
    /**
     * <pre>
     * next_start is the next page token to query for pagination.
     * next_start is 0 when there are no more results to fetch.
     * </pre>
     *
     * <code>int64 next_start = 2;</code>
     * @param value The nextStart to set.
     */
    private void setNextStart(long value) {
      
      nextStart_ = value;
    }
    /**
     * <pre>
     * next_start is the next page token to query for pagination.
     * next_start is 0 when there are no more results to fetch.
     * </pre>
     *
     * <code>int64 next_start = 2;</code>
     */
    private void clearNextStart() {
      
      nextStart_ = 0L;
    }

    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListEntryHistoryResponse requests a paginated history of keys for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListEntryHistoryResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListEntryHistoryResponse)
        google.keytransparency.v1.Keytransparency.ListEntryHistoryResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.v1.Keytransparency.GetUserResponse> getValuesList() {
        return java.util.Collections.unmodifiableList(
            instance.getValuesList());
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      @java.lang.Override
      public int getValuesCount() {
        return instance.getValuesCount();
      }/**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.GetUserResponse getValues(int index) {
        return instance.getValues(index);
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder setValues(
          int index, google.keytransparency.v1.Keytransparency.GetUserResponse value) {
        copyOnWrite();
        instance.setValues(index, value);
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder setValues(
          int index, google.keytransparency.v1.Keytransparency.GetUserResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setValues(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder addValues(google.keytransparency.v1.Keytransparency.GetUserResponse value) {
        copyOnWrite();
        instance.addValues(value);
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder addValues(
          int index, google.keytransparency.v1.Keytransparency.GetUserResponse value) {
        copyOnWrite();
        instance.addValues(index, value);
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder addValues(
          google.keytransparency.v1.Keytransparency.GetUserResponse.Builder builderForValue) {
        copyOnWrite();
        instance.addValues(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder addValues(
          int index, google.keytransparency.v1.Keytransparency.GetUserResponse.Builder builderForValue) {
        copyOnWrite();
        instance.addValues(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.GetUserResponse> values) {
        copyOnWrite();
        instance.addAllValues(values);
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder clearValues() {
        copyOnWrite();
        instance.clearValues();
        return this;
      }
      /**
       * <pre>
       * values represents the list of keys this user_id has contained over time.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.GetUserResponse values = 1;</code>
       */
      public Builder removeValues(int index) {
        copyOnWrite();
        instance.removeValues(index);
        return this;
      }

      /**
       * <pre>
       * next_start is the next page token to query for pagination.
       * next_start is 0 when there are no more results to fetch.
       * </pre>
       *
       * <code>int64 next_start = 2;</code>
       * @return The nextStart.
       */
      @java.lang.Override
      public long getNextStart() {
        return instance.getNextStart();
      }
      /**
       * <pre>
       * next_start is the next page token to query for pagination.
       * next_start is 0 when there are no more results to fetch.
       * </pre>
       *
       * <code>int64 next_start = 2;</code>
       * @param value The nextStart to set.
       * @return This builder for chaining.
       */
      public Builder setNextStart(long value) {
        copyOnWrite();
        instance.setNextStart(value);
        return this;
      }
      /**
       * <pre>
       * next_start is the next page token to query for pagination.
       * next_start is 0 when there are no more results to fetch.
       * </pre>
       *
       * <code>int64 next_start = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextStart() {
        copyOnWrite();
        instance.clearNextStart();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListEntryHistoryResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "values_",
              google.keytransparency.v1.Keytransparency.GetUserResponse.class,
              "nextStart_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u001b\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListEntryHistoryResponse)
    private static final google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse DEFAULT_INSTANCE;
    static {
      ListEntryHistoryResponse defaultInstance = new ListEntryHistoryResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListEntryHistoryResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListEntryHistoryResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListEntryHistoryResponse> PARSER;

    public static com.google.protobuf.Parser<ListEntryHistoryResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListUserRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListUserRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     * start_revision is the starting epoch.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @return The startRevision.
     */
    long getStartRevision();

    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @return The endRevision.
     */
    long getEndRevision();

    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @return The pageSize.
     */
    int getPageSize();

    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The pageToken.
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The bytes for pageToken.
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * ListUserRevisionsRequest gets a list of historical keys for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsRequest}
   */
  public  static final class ListUserRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ListUserRevisionsRequest, ListUserRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListUserRevisionsRequest)
      ListUserRevisionsRequestOrBuilder {
    private ListUserRevisionsRequest() {
      directoryId_ = "";
      userId_ = "";
      pageToken_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private java.lang.String userId_;
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The userId to set.
     */
    private void setUserId(
        java.lang.String value) {
      value.getClass();
  
      userId_ = value;
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <pre>
     * user_id is the user identifier.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The bytes for userId to set.
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      userId_ = value.toStringUtf8();
      
    }

    public static final int START_REVISION_FIELD_NUMBER = 3;
    private long startRevision_;
    /**
     * <pre>
     * start_revision is the starting epoch.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @return The startRevision.
     */
    @java.lang.Override
    public long getStartRevision() {
      return startRevision_;
    }
    /**
     * <pre>
     * start_revision is the starting epoch.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @param value The startRevision to set.
     */
    private void setStartRevision(long value) {
      
      startRevision_ = value;
    }
    /**
     * <pre>
     * start_revision is the starting epoch.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     */
    private void clearStartRevision() {
      
      startRevision_ = 0L;
    }

    public static final int END_REVISION_FIELD_NUMBER = 4;
    private long endRevision_;
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @return The endRevision.
     */
    @java.lang.Override
    public long getEndRevision() {
      return endRevision_;
    }
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @param value The endRevision to set.
     */
    private void setEndRevision(long value) {
      
      endRevision_ = value;
    }
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     */
    private void clearEndRevision() {
      
      endRevision_ = 0L;
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 5;
    private int pageSize_;
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @param value The pageSize to set.
     */
    private void setPageSize(int value) {
      
      pageSize_ = value;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = 0;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 6;
    private java.lang.String pageToken_;
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The pageToken.
     */
    @java.lang.Override
    public java.lang.String getPageToken() {
      return pageToken_;
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The bytes for pageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageToken_);
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @param value The pageToken to set.
     */
    private void setPageToken(
        java.lang.String value) {
      value.getClass();
  
      pageToken_ = value;
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     */
    private void clearPageToken() {
      
      pageToken_ = getDefaultInstance().getPageToken();
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @param value The bytes for pageToken to set.
     */
    private void setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      pageToken_ = value.toStringUtf8();
      
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 8;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListUserRevisionsRequest gets a list of historical keys for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListUserRevisionsRequest)
        google.keytransparency.v1.Keytransparency.ListUserRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The userId.
       */
      @java.lang.Override
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The bytes for userId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <pre>
       * user_id is the user identifier.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * start_revision is the starting epoch.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @return The startRevision.
       */
      @java.lang.Override
      public long getStartRevision() {
        return instance.getStartRevision();
      }
      /**
       * <pre>
       * start_revision is the starting epoch.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @param value The startRevision to set.
       * @return This builder for chaining.
       */
      public Builder setStartRevision(long value) {
        copyOnWrite();
        instance.setStartRevision(value);
        return this;
      }
      /**
       * <pre>
       * start_revision is the starting epoch.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartRevision() {
        copyOnWrite();
        instance.clearStartRevision();
        return this;
      }

      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @return The endRevision.
       */
      @java.lang.Override
      public long getEndRevision() {
        return instance.getEndRevision();
      }
      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @param value The endRevision to set.
       * @return This builder for chaining.
       */
      public Builder setEndRevision(long value) {
        copyOnWrite();
        instance.setEndRevision(value);
        return this;
      }
      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndRevision() {
        copyOnWrite();
        instance.clearEndRevision();
        return this;
      }

      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }

      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return The pageToken.
       */
      @java.lang.Override
      public java.lang.String getPageToken() {
        return instance.getPageToken();
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return The bytes for pageToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        return instance.getPageTokenBytes();
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @param value The pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageToken(value);
        return this;
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageToken() {
        copyOnWrite();
        instance.clearPageToken();
        return this;
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @param value The bytes for pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageTokenBytes(value);
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListUserRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userId_",
              "startRevision_",
              "endRevision_",
              "pageSize_",
              "pageToken_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\b\u0007\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u0002\u0004\u0002\u0005\u0004\u0006\u0208\b\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListUserRevisionsRequest)
    private static final google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest DEFAULT_INSTANCE;
    static {
      ListUserRevisionsRequest defaultInstance = new ListUserRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListUserRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListUserRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<ListUserRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MapRevisionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.MapRevision)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     * @return Whether the mapRoot field is set.
     */
    boolean hasMapRoot();
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     * @return The mapRoot.
     */
    google.keytransparency.v1.Keytransparency.MapRoot getMapRoot();

    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     * @return Whether the mapLeaf field is set.
     */
    boolean hasMapLeaf();
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     * @return The mapLeaf.
     */
    google.keytransparency.v1.Keytransparency.MapLeaf getMapLeaf();
  }
  /**
   * <pre>
   * MapRevision contains a map leaf at a speific revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.MapRevision}
   */
  public  static final class MapRevision extends
      com.google.protobuf.GeneratedMessageLite<
          MapRevision, MapRevision.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.MapRevision)
      MapRevisionOrBuilder {
    private MapRevision() {
    }
    public static final int MAP_ROOT_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.MapRoot mapRoot_;
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasMapRoot() {
      return mapRoot_ != null;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
      return mapRoot_ == null ? google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance() : mapRoot_;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    private void setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  mapRoot_ = value;
      
      }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  if (mapRoot_ != null &&
          mapRoot_ != google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance()) {
        mapRoot_ =
          google.keytransparency.v1.Keytransparency.MapRoot.newBuilder(mapRoot_).mergeFrom(value).buildPartial();
      } else {
        mapRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    private void clearMapRoot() {  mapRoot_ = null;
      
    }

    public static final int MAP_LEAF_FIELD_NUMBER = 2;
    private google.keytransparency.v1.Keytransparency.MapLeaf mapLeaf_;
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     */
    @java.lang.Override
    public boolean hasMapLeaf() {
      return mapLeaf_ != null;
    }
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeaf() {
      return mapLeaf_ == null ? google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance() : mapLeaf_;
    }
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     */
    private void setMapLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
      value.getClass();
  mapLeaf_ = value;
      
      }
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
      value.getClass();
  if (mapLeaf_ != null &&
          mapLeaf_ != google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance()) {
        mapLeaf_ =
          google.keytransparency.v1.Keytransparency.MapLeaf.newBuilder(mapLeaf_).mergeFrom(value).buildPartial();
      } else {
        mapLeaf_ = value;
      }
      
    }
    /**
     * <pre>
     * map_leaf contains a leaf and its inclusion proof to map_root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
     */
    private void clearMapLeaf() {  mapLeaf_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRevision parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.MapRevision prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * MapRevision contains a map leaf at a speific revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.MapRevision}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.MapRevision, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.MapRevision)
        google.keytransparency.v1.Keytransparency.MapRevisionOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.MapRevision.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasMapRoot() {
        return instance.hasMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
        return instance.getMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.setMapRoot(value);
        return this;
        }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(
          google.keytransparency.v1.Keytransparency.MapRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.mergeMapRoot(value);
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder clearMapRoot() {  copyOnWrite();
        instance.clearMapRoot();
        return this;
      }

      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      @java.lang.Override
      public boolean hasMapLeaf() {
        return instance.hasMapLeaf();
      }
      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeaf() {
        return instance.getMapLeaf();
      }
      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      public Builder setMapLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
        copyOnWrite();
        instance.setMapLeaf(value);
        return this;
        }
      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      public Builder setMapLeaf(
          google.keytransparency.v1.Keytransparency.MapLeaf.Builder builderForValue) {
        copyOnWrite();
        instance.setMapLeaf(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      public Builder mergeMapLeaf(google.keytransparency.v1.Keytransparency.MapLeaf value) {
        copyOnWrite();
        instance.mergeMapLeaf(value);
        return this;
      }
      /**
       * <pre>
       * map_leaf contains a leaf and its inclusion proof to map_root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapLeaf map_leaf = 2;</code>
       */
      public Builder clearMapLeaf() {  copyOnWrite();
        instance.clearMapLeaf();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.MapRevision)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.MapRevision();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "mapRoot_",
              "mapLeaf_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.MapRevision> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.MapRevision.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.MapRevision>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.MapRevision)
    private static final google.keytransparency.v1.Keytransparency.MapRevision DEFAULT_INSTANCE;
    static {
      MapRevision defaultInstance = new MapRevision();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MapRevision.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.MapRevision getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MapRevision> PARSER;

    public static com.google.protobuf.Parser<MapRevision> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListUserRevisionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListUserRevisionsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     * @return Whether the latestLogRoot field is set.
     */
    boolean hasLatestLogRoot();
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     * @return The latestLogRoot.
     */
    google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot();

    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    java.util.List<google.keytransparency.v1.Keytransparency.MapRevision> 
        getMapRevisionsList();
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    google.keytransparency.v1.Keytransparency.MapRevision getMapRevisions(int index);
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    int getMapRevisionsCount();

    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @return The nextPageToken.
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @return The bytes for nextPageToken.
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * ListUserRevisionsResponse requests a paginated history of keys for a user.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsResponse}
   */
  public  static final class ListUserRevisionsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ListUserRevisionsResponse, ListUserRevisionsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListUserRevisionsResponse)
      ListUserRevisionsResponseOrBuilder {
    private ListUserRevisionsResponse() {
      mapRevisions_ = emptyProtobufList();
      nextPageToken_ = "";
    }
    public static final int LATEST_LOG_ROOT_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.LogRoot latestLogRoot_;
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasLatestLogRoot() {
      return latestLogRoot_ != null;
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
      return latestLogRoot_ == null ? google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance() : latestLogRoot_;
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    private void setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  latestLogRoot_ = value;
      
      }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  if (latestLogRoot_ != null &&
          latestLogRoot_ != google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance()) {
        latestLogRoot_ =
          google.keytransparency.v1.Keytransparency.LogRoot.newBuilder(latestLogRoot_).mergeFrom(value).buildPartial();
      } else {
        latestLogRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    private void clearLatestLogRoot() {  latestLogRoot_ = null;
      
    }

    public static final int MAP_REVISIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.MapRevision> mapRevisions_;
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.v1.Keytransparency.MapRevision> getMapRevisionsList() {
      return mapRevisions_;
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    public java.util.List<? extends google.keytransparency.v1.Keytransparency.MapRevisionOrBuilder> 
        getMapRevisionsOrBuilderList() {
      return mapRevisions_;
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public int getMapRevisionsCount() {
      return mapRevisions_.size();
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapRevision getMapRevisions(int index) {
      return mapRevisions_.get(index);
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    public google.keytransparency.v1.Keytransparency.MapRevisionOrBuilder getMapRevisionsOrBuilder(
        int index) {
      return mapRevisions_.get(index);
    }
    private void ensureMapRevisionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.MapRevision> tmp = mapRevisions_;
      if (!tmp.isModifiable()) {
        mapRevisions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void setMapRevisions(
        int index, google.keytransparency.v1.Keytransparency.MapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.set(index, value);
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void addMapRevisions(google.keytransparency.v1.Keytransparency.MapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.add(value);
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void addMapRevisions(
        int index, google.keytransparency.v1.Keytransparency.MapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.add(index, value);
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void addAllMapRevisions(
        java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.MapRevision> values) {
      ensureMapRevisionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mapRevisions_);
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void clearMapRevisions() {
      mapRevisions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * map_revisions represents the list of keys this user_id has contained over
     * time. At most page_size results will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
     */
    private void removeMapRevisions(int index) {
      ensureMapRevisionsIsMutable();
      mapRevisions_.remove(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 3;
    private java.lang.String nextPageToken_;
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @return The nextPageToken.
     */
    @java.lang.Override
    public java.lang.String getNextPageToken() {
      return nextPageToken_;
    }
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @return The bytes for nextPageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(nextPageToken_);
    }
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @param value The nextPageToken to set.
     */
    private void setNextPageToken(
        java.lang.String value) {
      value.getClass();
  
      nextPageToken_ = value;
    }
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     */
    private void clearNextPageToken() {
      
      nextPageToken_ = getDefaultInstance().getNextPageToken();
    }
    /**
     * <pre>
     * next_page_token is a pagination token which will be set if more than
     * page_size results are available. Clients can pass this value as
     * the page_token in the next request in order to continue pagination.
     * </pre>
     *
     * <code>string next_page_token = 3;</code>
     * @param value The bytes for nextPageToken to set.
     */
    private void setNextPageTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      nextPageToken_ = value.toStringUtf8();
      
    }

    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListUserRevisionsResponse requests a paginated history of keys for a user.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListUserRevisionsResponse)
        google.keytransparency.v1.Keytransparency.ListUserRevisionsResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasLatestLogRoot() {
        return instance.hasLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
        return instance.getLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.setLatestLogRoot(value);
        return this;
        }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder setLatestLogRoot(
          google.keytransparency.v1.Keytransparency.LogRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setLatestLogRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.mergeLatestLogRoot(value);
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder clearLatestLogRoot() {  copyOnWrite();
        instance.clearLatestLogRoot();
        return this;
      }

      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.v1.Keytransparency.MapRevision> getMapRevisionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMapRevisionsList());
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public int getMapRevisionsCount() {
        return instance.getMapRevisionsCount();
      }/**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapRevision getMapRevisions(int index) {
        return instance.getMapRevisions(index);
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder setMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.MapRevision value) {
        copyOnWrite();
        instance.setMapRevisions(index, value);
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder setMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.MapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRevisions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(google.keytransparency.v1.Keytransparency.MapRevision value) {
        copyOnWrite();
        instance.addMapRevisions(value);
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.MapRevision value) {
        copyOnWrite();
        instance.addMapRevisions(index, value);
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          google.keytransparency.v1.Keytransparency.MapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.addMapRevisions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.MapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.addMapRevisions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder addAllMapRevisions(
          java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.MapRevision> values) {
        copyOnWrite();
        instance.addAllMapRevisions(values);
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder clearMapRevisions() {
        copyOnWrite();
        instance.clearMapRevisions();
        return this;
      }
      /**
       * <pre>
       * map_revisions represents the list of keys this user_id has contained over
       * time. At most page_size results will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MapRevision map_revisions = 2;</code>
       */
      public Builder removeMapRevisions(int index) {
        copyOnWrite();
        instance.removeMapRevisions(index);
        return this;
      }

      /**
       * <pre>
       * next_page_token is a pagination token which will be set if more than
       * page_size results are available. Clients can pass this value as
       * the page_token in the next request in order to continue pagination.
       * </pre>
       *
       * <code>string next_page_token = 3;</code>
       * @return The nextPageToken.
       */
      @java.lang.Override
      public java.lang.String getNextPageToken() {
        return instance.getNextPageToken();
      }
      /**
       * <pre>
       * next_page_token is a pagination token which will be set if more than
       * page_size results are available. Clients can pass this value as
       * the page_token in the next request in order to continue pagination.
       * </pre>
       *
       * <code>string next_page_token = 3;</code>
       * @return The bytes for nextPageToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        return instance.getNextPageTokenBytes();
      }
      /**
       * <pre>
       * next_page_token is a pagination token which will be set if more than
       * page_size results are available. Clients can pass this value as
       * the page_token in the next request in order to continue pagination.
       * </pre>
       *
       * <code>string next_page_token = 3;</code>
       * @param value The nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setNextPageToken(value);
        return this;
      }
      /**
       * <pre>
       * next_page_token is a pagination token which will be set if more than
       * page_size results are available. Clients can pass this value as
       * the page_token in the next request in order to continue pagination.
       * </pre>
       *
       * <code>string next_page_token = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextPageToken() {
        copyOnWrite();
        instance.clearNextPageToken();
        return this;
      }
      /**
       * <pre>
       * next_page_token is a pagination token which will be set if more than
       * page_size results are available. Clients can pass this value as
       * the page_token in the next request in order to continue pagination.
       * </pre>
       *
       * <code>string next_page_token = 3;</code>
       * @param value The bytes for nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNextPageTokenBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListUserRevisionsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "latestLogRoot_",
              "mapRevisions_",
              google.keytransparency.v1.Keytransparency.MapRevision.class,
              "nextPageToken_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\t\u0002\u001b" +
                "\u0003\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListUserRevisionsResponse)
    private static final google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse DEFAULT_INSTANCE;
    static {
      ListUserRevisionsResponse defaultInstance = new ListUserRevisionsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListUserRevisionsResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListUserRevisionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListUserRevisionsResponse> PARSER;

    public static com.google.protobuf.Parser<ListUserRevisionsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchListUserRevisionsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchListUserRevisionsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    java.util.List<java.lang.String>
        getUserIdsList();
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    int getUserIdsCount();
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    java.lang.String getUserIds(int index);
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    com.google.protobuf.ByteString
        getUserIdsBytes(int index);

    /**
     * <pre>
     * start_revision is the starting revision.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @return The startRevision.
     */
    long getStartRevision();

    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @return The endRevision.
     */
    long getEndRevision();

    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @return The pageSize.
     */
    int getPageSize();

    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The pageToken.
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The bytes for pageToken.
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * BatchListUserRevisionsRequest contains a list of users and a range of revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchListUserRevisionsRequest}
   */
  public  static final class BatchListUserRevisionsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          BatchListUserRevisionsRequest, BatchListUserRevisionsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchListUserRevisionsRequest)
      BatchListUserRevisionsRequestOrBuilder {
    private BatchListUserRevisionsRequest() {
      directoryId_ = "";
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      pageToken_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> userIds_;
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return A list containing the userIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getUserIdsList() {
      return userIds_;
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @return The count of userIds.
     */
    @java.lang.Override
    public int getUserIdsCount() {
      return userIds_.size();
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The userIds at the given index.
     */
    @java.lang.Override
    public java.lang.String getUserIds(int index) {
      return userIds_.get(index);
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the userIds at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdsBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          userIds_.get(index));
    }
    private void ensureUserIdsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          userIds_;  if (!tmp.isModifiable()) {
        userIds_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param index The index to set the value at.
     * @param value The userIds to set.
     */
    private void setUserIds(
        int index, java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.set(index, value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The userIds to add.
     */
    private void addUserIds(
        java.lang.String value) {
      value.getClass();
  ensureUserIdsIsMutable();
      userIds_.add(value);
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param values The userIds to add.
     */
    private void addAllUserIds(
        java.lang.Iterable<java.lang.String> values) {
      ensureUserIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userIds_);
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     */
    private void clearUserIds() {
      userIds_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * user_ids are the user identifiers.
     * </pre>
     *
     * <code>repeated string user_ids = 2;</code>
     * @param value The bytes of the userIds to add.
     */
    private void addUserIdsBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      ensureUserIdsIsMutable();
      userIds_.add(value.toStringUtf8());
    }

    public static final int START_REVISION_FIELD_NUMBER = 3;
    private long startRevision_;
    /**
     * <pre>
     * start_revision is the starting revision.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @return The startRevision.
     */
    @java.lang.Override
    public long getStartRevision() {
      return startRevision_;
    }
    /**
     * <pre>
     * start_revision is the starting revision.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     * @param value The startRevision to set.
     */
    private void setStartRevision(long value) {
      
      startRevision_ = value;
    }
    /**
     * <pre>
     * start_revision is the starting revision.
     * </pre>
     *
     * <code>int64 start_revision = 3;</code>
     */
    private void clearStartRevision() {
      
      startRevision_ = 0L;
    }

    public static final int END_REVISION_FIELD_NUMBER = 4;
    private long endRevision_;
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @return The endRevision.
     */
    @java.lang.Override
    public long getEndRevision() {
      return endRevision_;
    }
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     * @param value The endRevision to set.
     */
    private void setEndRevision(long value) {
      
      endRevision_ = value;
    }
    /**
     * <pre>
     * end_revision is the ending epoch.
     * </pre>
     *
     * <code>int64 end_revision = 4;</code>
     */
    private void clearEndRevision() {
      
      endRevision_ = 0L;
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 5;
    private int pageSize_;
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     * @param value The pageSize to set.
     */
    private void setPageSize(int value) {
      
      pageSize_ = value;
    }
    /**
     * <pre>
     * page_size is the maximum number of entries to return. If page_size is
     * unspecified, the server will decide how to paginate results.
     * </pre>
     *
     * <code>int32 page_size = 5;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = 0;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 6;
    private java.lang.String pageToken_;
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The pageToken.
     */
    @java.lang.Override
    public java.lang.String getPageToken() {
      return pageToken_;
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @return The bytes for pageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageToken_);
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @param value The pageToken to set.
     */
    private void setPageToken(
        java.lang.String value) {
      value.getClass();
  
      pageToken_ = value;
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     */
    private void clearPageToken() {
      
      pageToken_ = getDefaultInstance().getPageToken();
    }
    /**
     * <pre>
     * page_token is a continuation token for paginating through results.
     * </pre>
     *
     * <code>string page_token = 6;</code>
     * @param value The bytes for pageToken to set.
     */
    private void setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      pageToken_ = value.toStringUtf8();
      
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 8;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchListUserRevisionsRequest contains a list of users and a range of revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchListUserRevisionsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchListUserRevisionsRequest)
        google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return A list containing the userIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getUserIdsList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserIdsList());
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return The count of userIds.
       */
      @java.lang.Override
      public int getUserIdsCount() {
        return instance.getUserIdsCount();
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The userIds at the given index.
       */
      @java.lang.Override
      public java.lang.String getUserIds(int index) {
        return instance.getUserIds(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the userIds at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdsBytes(int index) {
        return instance.getUserIdsBytes(index);
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The userIds to set.
       * @return This builder for chaining.
       */
      public Builder setUserIds(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setUserIds(index, value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIds(
          java.lang.String value) {
        copyOnWrite();
        instance.addUserIds(value);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param values The userIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserIds(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllUserIds(values);
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserIds() {
        copyOnWrite();
        instance.clearUserIds();
        return this;
      }
      /**
       * <pre>
       * user_ids are the user identifiers.
       * </pre>
       *
       * <code>repeated string user_ids = 2;</code>
       * @param value The bytes of the userIds to add.
       * @return This builder for chaining.
       */
      public Builder addUserIdsBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addUserIdsBytes(value);
        return this;
      }

      /**
       * <pre>
       * start_revision is the starting revision.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @return The startRevision.
       */
      @java.lang.Override
      public long getStartRevision() {
        return instance.getStartRevision();
      }
      /**
       * <pre>
       * start_revision is the starting revision.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @param value The startRevision to set.
       * @return This builder for chaining.
       */
      public Builder setStartRevision(long value) {
        copyOnWrite();
        instance.setStartRevision(value);
        return this;
      }
      /**
       * <pre>
       * start_revision is the starting revision.
       * </pre>
       *
       * <code>int64 start_revision = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartRevision() {
        copyOnWrite();
        instance.clearStartRevision();
        return this;
      }

      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @return The endRevision.
       */
      @java.lang.Override
      public long getEndRevision() {
        return instance.getEndRevision();
      }
      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @param value The endRevision to set.
       * @return This builder for chaining.
       */
      public Builder setEndRevision(long value) {
        copyOnWrite();
        instance.setEndRevision(value);
        return this;
      }
      /**
       * <pre>
       * end_revision is the ending epoch.
       * </pre>
       *
       * <code>int64 end_revision = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndRevision() {
        copyOnWrite();
        instance.clearEndRevision();
        return this;
      }

      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <pre>
       * page_size is the maximum number of entries to return. If page_size is
       * unspecified, the server will decide how to paginate results.
       * </pre>
       *
       * <code>int32 page_size = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }

      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return The pageToken.
       */
      @java.lang.Override
      public java.lang.String getPageToken() {
        return instance.getPageToken();
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return The bytes for pageToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        return instance.getPageTokenBytes();
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @param value The pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageToken(value);
        return this;
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageToken() {
        copyOnWrite();
        instance.clearPageToken();
        return this;
      }
      /**
       * <pre>
       * page_token is a continuation token for paginating through results.
       * </pre>
       *
       * <code>string page_token = 6;</code>
       * @param value The bytes for pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageTokenBytes(value);
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 8;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchListUserRevisionsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userIds_",
              "startRevision_",
              "endRevision_",
              "pageSize_",
              "pageToken_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\b\u0007\u0000\u0001\u0000\u0001\u0208\u0002\u021a" +
                "\u0003\u0002\u0004\u0002\u0005\u0004\u0006\u0208\b\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchListUserRevisionsRequest)
    private static final google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest DEFAULT_INSTANCE;
    static {
      BatchListUserRevisionsRequest defaultInstance = new BatchListUserRevisionsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchListUserRevisionsRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchListUserRevisionsRequest> PARSER;

    public static com.google.protobuf.Parser<BatchListUserRevisionsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchMapRevisionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchMapRevision)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     * @return Whether the mapRoot field is set.
     */
    boolean hasMapRoot();
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     * @return The mapRoot.
     */
    google.keytransparency.v1.Keytransparency.MapRoot getMapRoot();

    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    int getMapLeavesByUserIdCount();
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    boolean containsMapLeavesByUserId(
        java.lang.String key);
    /**
     * Use {@link #getMapLeavesByUserIdMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMapLeavesByUserId();
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMapLeavesByUserIdMap();
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */

    google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
        java.lang.String key,
        google.keytransparency.v1.Keytransparency.MapLeaf defaultValue);
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */

    google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * BatchMapRevision contains a set of map leaves at a speific revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchMapRevision}
   */
  public  static final class BatchMapRevision extends
      com.google.protobuf.GeneratedMessageLite<
          BatchMapRevision, BatchMapRevision.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchMapRevision)
      BatchMapRevisionOrBuilder {
    private BatchMapRevision() {
    }
    public static final int MAP_ROOT_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.MapRoot mapRoot_;
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasMapRoot() {
      return mapRoot_ != null;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
      return mapRoot_ == null ? google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance() : mapRoot_;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    private void setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  mapRoot_ = value;
      
      }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  if (mapRoot_ != null &&
          mapRoot_ != google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance()) {
        mapRoot_ =
          google.keytransparency.v1.Keytransparency.MapRoot.newBuilder(mapRoot_).mergeFrom(value).buildPartial();
      } else {
        mapRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
     */
    private void clearMapRoot() {  mapRoot_ = null;
      
    }

    public static final int MAP_LEAVES_BY_USER_ID_FIELD_NUMBER = 2;
    private static final class MapLeavesByUserIdDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  google.keytransparency.v1.Keytransparency.MapLeaf.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> mapLeavesByUserId_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    internalGetMapLeavesByUserId() {
      return mapLeavesByUserId_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    internalGetMutableMapLeavesByUserId() {
      if (!mapLeavesByUserId_.isMutable()) {
        mapLeavesByUserId_ = mapLeavesByUserId_.mutableCopy();
      }
      return mapLeavesByUserId_;
    }
    @java.lang.Override

    public int getMapLeavesByUserIdCount() {
      return internalGetMapLeavesByUserId().size();
    }
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public boolean containsMapLeavesByUserId(
        java.lang.String key) {
      key.getClass();
      return internalGetMapLeavesByUserId().containsKey(key);
    }
    /**
     * Use {@link #getMapLeavesByUserIdMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserId() {
      return getMapLeavesByUserIdMap();
    }
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserIdMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetMapLeavesByUserId());
    }
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
        java.lang.String key,
        google.keytransparency.v1.Keytransparency.MapLeaf defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
          internalGetMapLeavesByUserId();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    @java.lang.Override

    public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
          internalGetMapLeavesByUserId();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
     * this revision.
     * </pre>
     *
     * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
     */
    private java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf>
    getMutableMapLeavesByUserIdMap() {
      return internalGetMutableMapLeavesByUserId();
    }

    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchMapRevision parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchMapRevision prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchMapRevision contains a set of map leaves at a speific revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchMapRevision}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchMapRevision, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchMapRevision)
        google.keytransparency.v1.Keytransparency.BatchMapRevisionOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchMapRevision.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasMapRoot() {
        return instance.hasMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
        return instance.getMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.setMapRoot(value);
        return this;
        }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(
          google.keytransparency.v1.Keytransparency.MapRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.mergeMapRoot(value);
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 1;</code>
       */
      public Builder clearMapRoot() {  copyOnWrite();
        instance.clearMapRoot();
        return this;
      }

      @java.lang.Override

      public int getMapLeavesByUserIdCount() {
        return instance.getMapLeavesByUserIdMap().size();
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public boolean containsMapLeavesByUserId(
          java.lang.String key) {
        key.getClass();
        return instance.getMapLeavesByUserIdMap().containsKey(key);
      }

      public Builder clearMapLeavesByUserId() {
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().clear();
        return this;
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */

      public Builder removeMapLeavesByUserId(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getMapLeavesByUserIdMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserId() {
        return getMapLeavesByUserIdMap();
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> getMapLeavesByUserIdMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getMapLeavesByUserIdMap());
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrDefault(
          java.lang.String key,
          google.keytransparency.v1.Keytransparency.MapLeaf defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
            instance.getMapLeavesByUserIdMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      @java.lang.Override

      public google.keytransparency.v1.Keytransparency.MapLeaf getMapLeavesByUserIdOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> map =
            instance.getMapLeavesByUserIdMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      public Builder putMapLeavesByUserId(
          java.lang.String key,
          google.keytransparency.v1.Keytransparency.MapLeaf value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().put(key, value);
        return this;
      }
      /**
       * <pre>
       * map_leaves_by_user_id contains a mapping from user_id to the map leaf at
       * this revision.
       * </pre>
       *
       * <code>map&lt;string, .google.keytransparency.v1.MapLeaf&gt; map_leaves_by_user_id = 2;</code>
       */
      public Builder putAllMapLeavesByUserId(
          java.util.Map<java.lang.String, google.keytransparency.v1.Keytransparency.MapLeaf> values) {
        copyOnWrite();
        instance.getMutableMapLeavesByUserIdMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchMapRevision)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchMapRevision();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "mapRoot_",
              "mapLeavesByUserId_",
              MapLeavesByUserIdDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0001\u0000\u0000\u0001\t\u00022";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchMapRevision> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchMapRevision.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchMapRevision>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchMapRevision)
    private static final google.keytransparency.v1.Keytransparency.BatchMapRevision DEFAULT_INSTANCE;
    static {
      BatchMapRevision defaultInstance = new BatchMapRevision();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchMapRevision.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchMapRevision getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchMapRevision> PARSER;

    public static com.google.protobuf.Parser<BatchMapRevision> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchListUserRevisionsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchListUserRevisionsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     * @return Whether the latestLogRoot field is set.
     */
    boolean hasLatestLogRoot();
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     * @return The latestLogRoot.
     */
    google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot();

    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    java.util.List<google.keytransparency.v1.Keytransparency.BatchMapRevision> 
        getMapRevisionsList();
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    google.keytransparency.v1.Keytransparency.BatchMapRevision getMapRevisions(int index);
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    int getMapRevisionsCount();
  }
  /**
   * <pre>
   * BatchListUserRevisionsResponse contains multiple map leaves across multiple revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchListUserRevisionsResponse}
   */
  public  static final class BatchListUserRevisionsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          BatchListUserRevisionsResponse, BatchListUserRevisionsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchListUserRevisionsResponse)
      BatchListUserRevisionsResponseOrBuilder {
    private BatchListUserRevisionsResponse() {
      mapRevisions_ = emptyProtobufList();
    }
    public static final int LATEST_LOG_ROOT_FIELD_NUMBER = 1;
    private google.keytransparency.v1.Keytransparency.LogRoot latestLogRoot_;
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasLatestLogRoot() {
      return latestLogRoot_ != null;
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
      return latestLogRoot_ == null ? google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance() : latestLogRoot_;
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    private void setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  latestLogRoot_ = value;
      
      }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  if (latestLogRoot_ != null &&
          latestLogRoot_ != google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance()) {
        latestLogRoot_ =
          google.keytransparency.v1.Keytransparency.LogRoot.newBuilder(latestLogRoot_).mergeFrom(value).buildPartial();
      } else {
        latestLogRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * latest_log_root contains the latest log root and its consistency proof.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
     */
    private void clearLatestLogRoot() {  latestLogRoot_ = null;
      
    }

    public static final int MAP_REVISIONS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.BatchMapRevision> mapRevisions_;
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.v1.Keytransparency.BatchMapRevision> getMapRevisionsList() {
      return mapRevisions_;
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    public java.util.List<? extends google.keytransparency.v1.Keytransparency.BatchMapRevisionOrBuilder> 
        getMapRevisionsOrBuilderList() {
      return mapRevisions_;
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public int getMapRevisionsCount() {
      return mapRevisions_.size();
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.BatchMapRevision getMapRevisions(int index) {
      return mapRevisions_.get(index);
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    public google.keytransparency.v1.Keytransparency.BatchMapRevisionOrBuilder getMapRevisionsOrBuilder(
        int index) {
      return mapRevisions_.get(index);
    }
    private void ensureMapRevisionsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.BatchMapRevision> tmp = mapRevisions_;
      if (!tmp.isModifiable()) {
        mapRevisions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void setMapRevisions(
        int index, google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.set(index, value);
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void addMapRevisions(google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.add(value);
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void addMapRevisions(
        int index, google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
      value.getClass();
  ensureMapRevisionsIsMutable();
      mapRevisions_.add(index, value);
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void addAllMapRevisions(
        java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.BatchMapRevision> values) {
      ensureMapRevisionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mapRevisions_);
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void clearMapRevisions() {
      mapRevisions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
     */
    private void removeMapRevisions(int index) {
      ensureMapRevisionsIsMutable();
      mapRevisions_.remove(index);
    }

    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchListUserRevisionsResponse contains multiple map leaves across multiple revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchListUserRevisionsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchListUserRevisionsResponse)
        google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasLatestLogRoot() {
        return instance.hasLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
        return instance.getLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.setLatestLogRoot(value);
        return this;
        }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder setLatestLogRoot(
          google.keytransparency.v1.Keytransparency.LogRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setLatestLogRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.mergeLatestLogRoot(value);
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the latest log root and its consistency proof.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 1;</code>
       */
      public Builder clearLatestLogRoot() {  copyOnWrite();
        instance.clearLatestLogRoot();
        return this;
      }

      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.v1.Keytransparency.BatchMapRevision> getMapRevisionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMapRevisionsList());
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public int getMapRevisionsCount() {
        return instance.getMapRevisionsCount();
      }/**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.BatchMapRevision getMapRevisions(int index) {
        return instance.getMapRevisions(index);
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder setMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
        copyOnWrite();
        instance.setMapRevisions(index, value);
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder setMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.BatchMapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRevisions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
        copyOnWrite();
        instance.addMapRevisions(value);
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.BatchMapRevision value) {
        copyOnWrite();
        instance.addMapRevisions(index, value);
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          google.keytransparency.v1.Keytransparency.BatchMapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.addMapRevisions(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder addMapRevisions(
          int index, google.keytransparency.v1.Keytransparency.BatchMapRevision.Builder builderForValue) {
        copyOnWrite();
        instance.addMapRevisions(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder addAllMapRevisions(
          java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.BatchMapRevision> values) {
        copyOnWrite();
        instance.addAllMapRevisions(values);
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder clearMapRevisions() {
        copyOnWrite();
        instance.clearMapRevisions();
        return this;
      }
      /**
       * <pre>
       * map_revisions is a list of map revisions.  At most page_size revisions will be returned.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.BatchMapRevision map_revisions = 2;</code>
       */
      public Builder removeMapRevisions(int index) {
        copyOnWrite();
        instance.removeMapRevisions(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchListUserRevisionsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "latestLogRoot_",
              "mapRevisions_",
              google.keytransparency.v1.Keytransparency.BatchMapRevision.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\t\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchListUserRevisionsResponse)
    private static final google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse DEFAULT_INSTANCE;
    static {
      BatchListUserRevisionsResponse defaultInstance = new BatchListUserRevisionsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchListUserRevisionsResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchListUserRevisionsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchListUserRevisionsResponse> PARSER;

    public static com.google.protobuf.Parser<BatchListUserRevisionsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UpdateEntryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.UpdateEntryRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     * @return Whether the entryUpdate field is set.
     */
    boolean hasEntryUpdate();
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     * @return The entryUpdate.
     */
    google.keytransparency.v1.Keytransparency.EntryUpdate getEntryUpdate();
  }
  /**
   * <pre>
   * UpdateEntryRequest updates a user's profile.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.UpdateEntryRequest}
   */
  public  static final class UpdateEntryRequest extends
      com.google.protobuf.GeneratedMessageLite<
          UpdateEntryRequest, UpdateEntryRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.UpdateEntryRequest)
      UpdateEntryRequestOrBuilder {
    private UpdateEntryRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 5;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int ENTRY_UPDATE_FIELD_NUMBER = 4;
    private google.keytransparency.v1.Keytransparency.EntryUpdate entryUpdate_;
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     */
    @java.lang.Override
    public boolean hasEntryUpdate() {
      return entryUpdate_ != null;
    }
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.EntryUpdate getEntryUpdate() {
      return entryUpdate_ == null ? google.keytransparency.v1.Keytransparency.EntryUpdate.getDefaultInstance() : entryUpdate_;
    }
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     */
    private void setEntryUpdate(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
      value.getClass();
  entryUpdate_ = value;
      
      }
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeEntryUpdate(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
      value.getClass();
  if (entryUpdate_ != null &&
          entryUpdate_ != google.keytransparency.v1.Keytransparency.EntryUpdate.getDefaultInstance()) {
        entryUpdate_ =
          google.keytransparency.v1.Keytransparency.EntryUpdate.newBuilder(entryUpdate_).mergeFrom(value).buildPartial();
      } else {
        entryUpdate_ = value;
      }
      
    }
    /**
     * <pre>
     * entry_update contains the user submitted update.
     * </pre>
     *
     * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
     */
    private void clearEntryUpdate() {  entryUpdate_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.UpdateEntryRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * UpdateEntryRequest updates a user's profile.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.UpdateEntryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.UpdateEntryRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.UpdateEntryRequest)
        google.keytransparency.v1.Keytransparency.UpdateEntryRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.UpdateEntryRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      @java.lang.Override
      public boolean hasEntryUpdate() {
        return instance.hasEntryUpdate();
      }
      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.EntryUpdate getEntryUpdate() {
        return instance.getEntryUpdate();
      }
      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      public Builder setEntryUpdate(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
        copyOnWrite();
        instance.setEntryUpdate(value);
        return this;
        }
      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      public Builder setEntryUpdate(
          google.keytransparency.v1.Keytransparency.EntryUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.setEntryUpdate(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      public Builder mergeEntryUpdate(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
        copyOnWrite();
        instance.mergeEntryUpdate(value);
        return this;
      }
      /**
       * <pre>
       * entry_update contains the user submitted update.
       * </pre>
       *
       * <code>.google.keytransparency.v1.EntryUpdate entry_update = 4;</code>
       */
      public Builder clearEntryUpdate() {  copyOnWrite();
        instance.clearEntryUpdate();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.UpdateEntryRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.UpdateEntryRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "entryUpdate_",
              "directoryId_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0004\u0005\u0002\u0000\u0000\u0000\u0004\t\u0005\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.UpdateEntryRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.UpdateEntryRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.UpdateEntryRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.UpdateEntryRequest)
    private static final google.keytransparency.v1.Keytransparency.UpdateEntryRequest DEFAULT_INSTANCE;
    static {
      UpdateEntryRequest defaultInstance = new UpdateEntryRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UpdateEntryRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.UpdateEntryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UpdateEntryRequest> PARSER;

    public static com.google.protobuf.Parser<UpdateEntryRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BatchQueueUserUpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.BatchQueueUserUpdateRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    java.util.List<google.keytransparency.v1.Keytransparency.EntryUpdate> 
        getUpdatesList();
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    google.keytransparency.v1.Keytransparency.EntryUpdate getUpdates(int index);
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    int getUpdatesCount();
  }
  /**
   * <pre>
   * BatchQueueUserUpdateRequest enqueues multiple changes to user profiles.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.BatchQueueUserUpdateRequest}
   */
  public  static final class BatchQueueUserUpdateRequest extends
      com.google.protobuf.GeneratedMessageLite<
          BatchQueueUserUpdateRequest, BatchQueueUserUpdateRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.BatchQueueUserUpdateRequest)
      BatchQueueUserUpdateRequestOrBuilder {
    private BatchQueueUserUpdateRequest() {
      directoryId_ = "";
      updates_ = emptyProtobufList();
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the users live.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int UPDATES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.EntryUpdate> updates_;
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.v1.Keytransparency.EntryUpdate> getUpdatesList() {
      return updates_;
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    public java.util.List<? extends google.keytransparency.v1.Keytransparency.EntryUpdateOrBuilder> 
        getUpdatesOrBuilderList() {
      return updates_;
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    @java.lang.Override
    public int getUpdatesCount() {
      return updates_.size();
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.EntryUpdate getUpdates(int index) {
      return updates_.get(index);
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    public google.keytransparency.v1.Keytransparency.EntryUpdateOrBuilder getUpdatesOrBuilder(
        int index) {
      return updates_.get(index);
    }
    private void ensureUpdatesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.EntryUpdate> tmp = updates_;
      if (!tmp.isModifiable()) {
        updates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void setUpdates(
        int index, google.keytransparency.v1.Keytransparency.EntryUpdate value) {
      value.getClass();
  ensureUpdatesIsMutable();
      updates_.set(index, value);
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void addUpdates(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
      value.getClass();
  ensureUpdatesIsMutable();
      updates_.add(value);
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void addUpdates(
        int index, google.keytransparency.v1.Keytransparency.EntryUpdate value) {
      value.getClass();
  ensureUpdatesIsMutable();
      updates_.add(index, value);
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void addAllUpdates(
        java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.EntryUpdate> values) {
      ensureUpdatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, updates_);
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void clearUpdates() {
      updates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * updates contains user updates.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
     */
    private void removeUpdates(int index) {
      ensureUpdatesIsMutable();
      updates_.remove(index);
    }

    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * BatchQueueUserUpdateRequest enqueues multiple changes to user profiles.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.BatchQueueUserUpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.BatchQueueUserUpdateRequest)
        google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the users live.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.v1.Keytransparency.EntryUpdate> getUpdatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getUpdatesList());
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      @java.lang.Override
      public int getUpdatesCount() {
        return instance.getUpdatesCount();
      }/**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.EntryUpdate getUpdates(int index) {
        return instance.getUpdates(index);
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder setUpdates(
          int index, google.keytransparency.v1.Keytransparency.EntryUpdate value) {
        copyOnWrite();
        instance.setUpdates(index, value);
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder setUpdates(
          int index, google.keytransparency.v1.Keytransparency.EntryUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.setUpdates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder addUpdates(google.keytransparency.v1.Keytransparency.EntryUpdate value) {
        copyOnWrite();
        instance.addUpdates(value);
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder addUpdates(
          int index, google.keytransparency.v1.Keytransparency.EntryUpdate value) {
        copyOnWrite();
        instance.addUpdates(index, value);
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder addUpdates(
          google.keytransparency.v1.Keytransparency.EntryUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdates(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder addUpdates(
          int index, google.keytransparency.v1.Keytransparency.EntryUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addUpdates(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder addAllUpdates(
          java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.EntryUpdate> values) {
        copyOnWrite();
        instance.addAllUpdates(values);
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder clearUpdates() {
        copyOnWrite();
        instance.clearUpdates();
        return this;
      }
      /**
       * <pre>
       * updates contains user updates.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.EntryUpdate updates = 2;</code>
       */
      public Builder removeUpdates(int index) {
        copyOnWrite();
        instance.removeUpdates(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.BatchQueueUserUpdateRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "updates_",
              google.keytransparency.v1.Keytransparency.EntryUpdate.class,
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\u0208\u0002\u001b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.BatchQueueUserUpdateRequest)
    private static final google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest DEFAULT_INSTANCE;
    static {
      BatchQueueUserUpdateRequest defaultInstance = new BatchQueueUserUpdateRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        BatchQueueUserUpdateRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.BatchQueueUserUpdateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BatchQueueUserUpdateRequest> PARSER;

    public static com.google.protobuf.Parser<BatchQueueUserUpdateRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetRevisionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.GetRevisionRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * revision specifies the revision number in which mutations will be returned.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @return The revision.
     */
    long getRevision();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * GetRevisionRequest identifies a particular revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.GetRevisionRequest}
   */
  public  static final class GetRevisionRequest extends
      com.google.protobuf.GeneratedMessageLite<
          GetRevisionRequest, GetRevisionRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.GetRevisionRequest)
      GetRevisionRequestOrBuilder {
    private GetRevisionRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 5;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int REVISION_FIELD_NUMBER = 1;
    private long revision_;
    /**
     * <pre>
     * revision specifies the revision number in which mutations will be returned.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @return The revision.
     */
    @java.lang.Override
    public long getRevision() {
      return revision_;
    }
    /**
     * <pre>
     * revision specifies the revision number in which mutations will be returned.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @param value The revision to set.
     */
    private void setRevision(long value) {
      
      revision_ = value;
    }
    /**
     * <pre>
     * revision specifies the revision number in which mutations will be returned.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     */
    private void clearRevision() {
      
      revision_ = 0L;
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 4;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.GetRevisionRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * GetRevisionRequest identifies a particular revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.GetRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.GetRevisionRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.GetRevisionRequest)
        google.keytransparency.v1.Keytransparency.GetRevisionRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.GetRevisionRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * revision specifies the revision number in which mutations will be returned.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @return The revision.
       */
      @java.lang.Override
      public long getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * revision specifies the revision number in which mutations will be returned.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(long value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
      }
      /**
       * <pre>
       * revision specifies the revision number in which mutations will be returned.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        copyOnWrite();
        instance.clearRevision();
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 4;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.GetRevisionRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.GetRevisionRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "revision_",
              "lastVerified_",
              "directoryId_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0005\u0003\u0000\u0000\u0000\u0001\u0002\u0004\t" +
                "\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.GetRevisionRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.GetRevisionRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.GetRevisionRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.GetRevisionRequest)
    private static final google.keytransparency.v1.Keytransparency.GetRevisionRequest DEFAULT_INSTANCE;
    static {
      GetRevisionRequest defaultInstance = new GetRevisionRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetRevisionRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.GetRevisionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetRevisionRequest> PARSER;

    public static com.google.protobuf.Parser<GetRevisionRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GetLatestRevisionRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.GetLatestRevisionRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     * @return Whether the lastVerified field is set.
     */
    boolean hasLastVerified();
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     * @return The lastVerified.
     */
    google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified();
  }
  /**
   * <pre>
   * GetLatestRevisionRequest identifies a particular revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.GetLatestRevisionRequest}
   */
  public  static final class GetLatestRevisionRequest extends
      com.google.protobuf.GeneratedMessageLite<
          GetLatestRevisionRequest, GetLatestRevisionRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.GetLatestRevisionRequest)
      GetLatestRevisionRequestOrBuilder {
    private GetLatestRevisionRequest() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory for which revisions are being requested.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int LAST_VERIFIED_FIELD_NUMBER = 3;
    private google.keytransparency.v1.Keytransparency.LogRootRequest lastVerified_;
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     */
    @java.lang.Override
    public boolean hasLastVerified() {
      return lastVerified_ != null;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
      return lastVerified_ == null ? google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance() : lastVerified_;
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     */
    private void setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  lastVerified_ = value;
      
      }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
      value.getClass();
  if (lastVerified_ != null &&
          lastVerified_ != google.keytransparency.v1.Keytransparency.LogRootRequest.getDefaultInstance()) {
        lastVerified_ =
          google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder(lastVerified_).mergeFrom(value).buildPartial();
      } else {
        lastVerified_ = value;
      }
      
    }
    /**
     * <pre>
     * last_verified is the last log root the client verified.
     * Omitting this field will omit the log consistency proof from the response.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
     */
    private void clearLastVerified() {  lastVerified_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * GetLatestRevisionRequest identifies a particular revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.GetLatestRevisionRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.GetLatestRevisionRequest)
        google.keytransparency.v1.Keytransparency.GetLatestRevisionRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory for which revisions are being requested.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      @java.lang.Override
      public boolean hasLastVerified() {
        return instance.hasLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRootRequest getLastVerified() {
        return instance.getLastVerified();
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      public Builder setLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.setLastVerified(value);
        return this;
        }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      public Builder setLastVerified(
          google.keytransparency.v1.Keytransparency.LogRootRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setLastVerified(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      public Builder mergeLastVerified(google.keytransparency.v1.Keytransparency.LogRootRequest value) {
        copyOnWrite();
        instance.mergeLastVerified(value);
        return this;
      }
      /**
       * <pre>
       * last_verified is the last log root the client verified.
       * Omitting this field will omit the log consistency proof from the response.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRootRequest last_verified = 3;</code>
       */
      public Builder clearLastVerified() {  copyOnWrite();
        instance.clearLastVerified();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.GetLatestRevisionRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "lastVerified_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0003\u0002\u0000\u0000\u0000\u0001\u0208\u0003\t" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.GetLatestRevisionRequest)
    private static final google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest DEFAULT_INSTANCE;
    static {
      GetLatestRevisionRequest defaultInstance = new GetLatestRevisionRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        GetLatestRevisionRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.GetLatestRevisionRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GetLatestRevisionRequest> PARSER;

    public static com.google.protobuf.Parser<GetLatestRevisionRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MapRootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.MapRoot)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     * @return Whether the mapRoot field is set.
     */
    boolean hasMapRoot();
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     * @return The mapRoot.
     */
    google.trillian.proto.SignedMapRoot getMapRoot();

    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @return A list containing the logInclusion.
     */
    java.util.List<com.google.protobuf.ByteString> getLogInclusionList();
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @return The count of logInclusion.
     */
    int getLogInclusionCount();
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @param index The index of the element to return.
     * @return The logInclusion at the given index.
     */
    com.google.protobuf.ByteString getLogInclusion(int index);
  }
  /**
   * <pre>
   * MapRoot contains the map root and its inclusion proof in the log.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.MapRoot}
   */
  public  static final class MapRoot extends
      com.google.protobuf.GeneratedMessageLite<
          MapRoot, MapRoot.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.MapRoot)
      MapRootOrBuilder {
    private MapRoot() {
      logInclusion_ = emptyProtobufList();
    }
    public static final int MAP_ROOT_FIELD_NUMBER = 1;
    private google.trillian.proto.SignedMapRoot mapRoot_;
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasMapRoot() {
      return mapRoot_ != null;
    }
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     */
    @java.lang.Override
    public google.trillian.proto.SignedMapRoot getMapRoot() {
      return mapRoot_ == null ? google.trillian.proto.SignedMapRoot.getDefaultInstance() : mapRoot_;
    }
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     */
    private void setMapRoot(google.trillian.proto.SignedMapRoot value) {
      value.getClass();
  mapRoot_ = value;
      
      }
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapRoot(google.trillian.proto.SignedMapRoot value) {
      value.getClass();
  if (mapRoot_ != null &&
          mapRoot_ != google.trillian.proto.SignedMapRoot.getDefaultInstance()) {
        mapRoot_ =
          google.trillian.proto.SignedMapRoot.newBuilder(mapRoot_).mergeFrom(value).buildPartial();
      } else {
        mapRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * map_root contains the signed map root for the sparse Merkle Tree.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot map_root = 1;</code>
     */
    private void clearMapRoot() {  mapRoot_ = null;
      
    }

    public static final int LOG_INCLUSION_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> logInclusion_;
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @return A list containing the logInclusion.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getLogInclusionList() {
      return logInclusion_;
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @return The count of logInclusion.
     */
    @java.lang.Override
    public int getLogInclusionCount() {
      return logInclusion_.size();
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @param index The index of the element to return.
     * @return The logInclusion at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLogInclusion(int index) {
      return logInclusion_.get(index);
    }
    private void ensureLogInclusionIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = logInclusion_;
      if (!tmp.isModifiable()) {
        logInclusion_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @param index The index to set the value at.
     * @param value The logInclusion to set.
     */
    private void setLogInclusion(
        int index, com.google.protobuf.ByteString value) {
      value.getClass();
  ensureLogInclusionIsMutable();
      logInclusion_.set(index, value);
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @param value The logInclusion to add.
     */
    private void addLogInclusion(com.google.protobuf.ByteString value) {
      value.getClass();
  ensureLogInclusionIsMutable();
      logInclusion_.add(value);
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     * @param values The logInclusion to add.
     */
    private void addAllLogInclusion(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureLogInclusionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, logInclusion_);
    }
    /**
     * <pre>
     * log_inclusion proves that map_root is part of log_root at
     * index=map_root.MapRevision.
     * </pre>
     *
     * <code>repeated bytes log_inclusion = 2;</code>
     */
    private void clearLogInclusion() {
      logInclusion_ = emptyProtobufList();
    }

    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.MapRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.MapRoot prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * MapRoot contains the map root and its inclusion proof in the log.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.MapRoot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.MapRoot, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.MapRoot)
        google.keytransparency.v1.Keytransparency.MapRootOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.MapRoot.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasMapRoot() {
        return instance.hasMapRoot();
      }
      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      @java.lang.Override
      public google.trillian.proto.SignedMapRoot getMapRoot() {
        return instance.getMapRoot();
      }
      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(google.trillian.proto.SignedMapRoot value) {
        copyOnWrite();
        instance.setMapRoot(value);
        return this;
        }
      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      public Builder setMapRoot(
          google.trillian.proto.SignedMapRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      public Builder mergeMapRoot(google.trillian.proto.SignedMapRoot value) {
        copyOnWrite();
        instance.mergeMapRoot(value);
        return this;
      }
      /**
       * <pre>
       * map_root contains the signed map root for the sparse Merkle Tree.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot map_root = 1;</code>
       */
      public Builder clearMapRoot() {  copyOnWrite();
        instance.clearMapRoot();
        return this;
      }

      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @return A list containing the logInclusion.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getLogInclusionList() {
        return java.util.Collections.unmodifiableList(
            instance.getLogInclusionList());
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @return The count of logInclusion.
       */
      @java.lang.Override
      public int getLogInclusionCount() {
        return instance.getLogInclusionCount();
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @param index The index of the element to return.
       * @return The logInclusion at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getLogInclusion(int index) {
        return instance.getLogInclusion(index);
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @param value The logInclusion to set.
       * @return This builder for chaining.
       */
      public Builder setLogInclusion(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogInclusion(index, value);
        return this;
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @param value The logInclusion to add.
       * @return This builder for chaining.
       */
      public Builder addLogInclusion(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addLogInclusion(value);
        return this;
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @param values The logInclusion to add.
       * @return This builder for chaining.
       */
      public Builder addAllLogInclusion(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllLogInclusion(values);
        return this;
      }
      /**
       * <pre>
       * log_inclusion proves that map_root is part of log_root at
       * index=map_root.MapRevision.
       * </pre>
       *
       * <code>repeated bytes log_inclusion = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogInclusion() {
        copyOnWrite();
        instance.clearLogInclusion();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.MapRoot)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.MapRoot();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "mapRoot_",
              "logInclusion_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\t\u0002\u001c" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.MapRoot> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.MapRoot.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.MapRoot>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.MapRoot)
    private static final google.keytransparency.v1.Keytransparency.MapRoot DEFAULT_INSTANCE;
    static {
      MapRoot defaultInstance = new MapRoot();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        MapRoot.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.MapRoot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MapRoot> PARSER;

    public static com.google.protobuf.Parser<MapRoot> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LogRootRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.LogRootRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * root_hash is the root hash of the last log root the client verified.
     * </pre>
     *
     * <code>bytes root_hash = 1;</code>
     * @return The rootHash.
     */
    com.google.protobuf.ByteString getRootHash();

    /**
     * <pre>
     * tree_size is the tree size of the last log root the client verified.
     * </pre>
     *
     * <code>int64 tree_size = 2;</code>
     * @return The treeSize.
     */
    long getTreeSize();
  }
  /**
   * <pre>
   * LogRootRequest contains the information needed to request and verify LogRoot.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.LogRootRequest}
   */
  public  static final class LogRootRequest extends
      com.google.protobuf.GeneratedMessageLite<
          LogRootRequest, LogRootRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.LogRootRequest)
      LogRootRequestOrBuilder {
    private LogRootRequest() {
      rootHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ROOT_HASH_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString rootHash_;
    /**
     * <pre>
     * root_hash is the root hash of the last log root the client verified.
     * </pre>
     *
     * <code>bytes root_hash = 1;</code>
     * @return The rootHash.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRootHash() {
      return rootHash_;
    }
    /**
     * <pre>
     * root_hash is the root hash of the last log root the client verified.
     * </pre>
     *
     * <code>bytes root_hash = 1;</code>
     * @param value The rootHash to set.
     */
    private void setRootHash(com.google.protobuf.ByteString value) {
      value.getClass();
  
      rootHash_ = value;
    }
    /**
     * <pre>
     * root_hash is the root hash of the last log root the client verified.
     * </pre>
     *
     * <code>bytes root_hash = 1;</code>
     */
    private void clearRootHash() {
      
      rootHash_ = getDefaultInstance().getRootHash();
    }

    public static final int TREE_SIZE_FIELD_NUMBER = 2;
    private long treeSize_;
    /**
     * <pre>
     * tree_size is the tree size of the last log root the client verified.
     * </pre>
     *
     * <code>int64 tree_size = 2;</code>
     * @return The treeSize.
     */
    @java.lang.Override
    public long getTreeSize() {
      return treeSize_;
    }
    /**
     * <pre>
     * tree_size is the tree size of the last log root the client verified.
     * </pre>
     *
     * <code>int64 tree_size = 2;</code>
     * @param value The treeSize to set.
     */
    private void setTreeSize(long value) {
      
      treeSize_ = value;
    }
    /**
     * <pre>
     * tree_size is the tree size of the last log root the client verified.
     * </pre>
     *
     * <code>int64 tree_size = 2;</code>
     */
    private void clearTreeSize() {
      
      treeSize_ = 0L;
    }

    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRootRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.LogRootRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * LogRootRequest contains the information needed to request and verify LogRoot.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.LogRootRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.LogRootRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.LogRootRequest)
        google.keytransparency.v1.Keytransparency.LogRootRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.LogRootRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * root_hash is the root hash of the last log root the client verified.
       * </pre>
       *
       * <code>bytes root_hash = 1;</code>
       * @return The rootHash.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRootHash() {
        return instance.getRootHash();
      }
      /**
       * <pre>
       * root_hash is the root hash of the last log root the client verified.
       * </pre>
       *
       * <code>bytes root_hash = 1;</code>
       * @param value The rootHash to set.
       * @return This builder for chaining.
       */
      public Builder setRootHash(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRootHash(value);
        return this;
      }
      /**
       * <pre>
       * root_hash is the root hash of the last log root the client verified.
       * </pre>
       *
       * <code>bytes root_hash = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootHash() {
        copyOnWrite();
        instance.clearRootHash();
        return this;
      }

      /**
       * <pre>
       * tree_size is the tree size of the last log root the client verified.
       * </pre>
       *
       * <code>int64 tree_size = 2;</code>
       * @return The treeSize.
       */
      @java.lang.Override
      public long getTreeSize() {
        return instance.getTreeSize();
      }
      /**
       * <pre>
       * tree_size is the tree size of the last log root the client verified.
       * </pre>
       *
       * <code>int64 tree_size = 2;</code>
       * @param value The treeSize to set.
       * @return This builder for chaining.
       */
      public Builder setTreeSize(long value) {
        copyOnWrite();
        instance.setTreeSize(value);
        return this;
      }
      /**
       * <pre>
       * tree_size is the tree size of the last log root the client verified.
       * </pre>
       *
       * <code>int64 tree_size = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTreeSize() {
        copyOnWrite();
        instance.clearTreeSize();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.LogRootRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.LogRootRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "rootHash_",
              "treeSize_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.LogRootRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.LogRootRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.LogRootRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.LogRootRequest)
    private static final google.keytransparency.v1.Keytransparency.LogRootRequest DEFAULT_INSTANCE;
    static {
      LogRootRequest defaultInstance = new LogRootRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LogRootRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.LogRootRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LogRootRequest> PARSER;

    public static com.google.protobuf.Parser<LogRootRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LogRootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.LogRoot)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     * @return Whether the logRoot field is set.
     */
    boolean hasLogRoot();
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     * @return The logRoot.
     */
    google.trillian.proto.SignedLogRoot getLogRoot();

    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @return A list containing the logConsistency.
     */
    java.util.List<com.google.protobuf.ByteString> getLogConsistencyList();
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @return The count of logConsistency.
     */
    int getLogConsistencyCount();
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @param index The index of the element to return.
     * @return The logConsistency at the given index.
     */
    com.google.protobuf.ByteString getLogConsistency(int index);
  }
  /**
   * <pre>
   * LogRoot contains the latest log root and its consistency proof.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.LogRoot}
   */
  public  static final class LogRoot extends
      com.google.protobuf.GeneratedMessageLite<
          LogRoot, LogRoot.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.LogRoot)
      LogRootOrBuilder {
    private LogRoot() {
      logConsistency_ = emptyProtobufList();
    }
    public static final int LOG_ROOT_FIELD_NUMBER = 1;
    private google.trillian.proto.SignedLogRoot logRoot_;
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     */
    @java.lang.Override
    public boolean hasLogRoot() {
      return logRoot_ != null;
    }
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     */
    @java.lang.Override
    public google.trillian.proto.SignedLogRoot getLogRoot() {
      return logRoot_ == null ? google.trillian.proto.SignedLogRoot.getDefaultInstance() : logRoot_;
    }
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     */
    private void setLogRoot(google.trillian.proto.SignedLogRoot value) {
      value.getClass();
  logRoot_ = value;
      
      }
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLogRoot(google.trillian.proto.SignedLogRoot value) {
      value.getClass();
  if (logRoot_ != null &&
          logRoot_ != google.trillian.proto.SignedLogRoot.getDefaultInstance()) {
        logRoot_ =
          google.trillian.proto.SignedLogRoot.newBuilder(logRoot_).mergeFrom(value).buildPartial();
      } else {
        logRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * log_root is the latest globally consistent log root.
     * </pre>
     *
     * <code>.trillian.SignedLogRoot log_root = 1;</code>
     */
    private void clearLogRoot() {  logRoot_ = null;
      
    }

    public static final int LOG_CONSISTENCY_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> logConsistency_;
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @return A list containing the logConsistency.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getLogConsistencyList() {
      return logConsistency_;
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @return The count of logConsistency.
     */
    @java.lang.Override
    public int getLogConsistencyCount() {
      return logConsistency_.size();
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @param index The index of the element to return.
     * @return The logConsistency at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getLogConsistency(int index) {
      return logConsistency_.get(index);
    }
    private void ensureLogConsistencyIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = logConsistency_;
      if (!tmp.isModifiable()) {
        logConsistency_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @param index The index to set the value at.
     * @param value The logConsistency to set.
     */
    private void setLogConsistency(
        int index, com.google.protobuf.ByteString value) {
      value.getClass();
  ensureLogConsistencyIsMutable();
      logConsistency_.set(index, value);
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @param value The logConsistency to add.
     */
    private void addLogConsistency(com.google.protobuf.ByteString value) {
      value.getClass();
  ensureLogConsistencyIsMutable();
      logConsistency_.add(value);
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     * @param values The logConsistency to add.
     */
    private void addAllLogConsistency(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureLogConsistencyIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, logConsistency_);
    }
    /**
     * <pre>
     * log_consistency proves that log_root is consistent with previously seen
     * roots.
     * </pre>
     *
     * <code>repeated bytes log_consistency = 2;</code>
     */
    private void clearLogConsistency() {
      logConsistency_ = emptyProtobufList();
    }

    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.LogRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.LogRoot prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * LogRoot contains the latest log root and its consistency proof.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.LogRoot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.LogRoot, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.LogRoot)
        google.keytransparency.v1.Keytransparency.LogRootOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.LogRoot.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      @java.lang.Override
      public boolean hasLogRoot() {
        return instance.hasLogRoot();
      }
      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      @java.lang.Override
      public google.trillian.proto.SignedLogRoot getLogRoot() {
        return instance.getLogRoot();
      }
      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      public Builder setLogRoot(google.trillian.proto.SignedLogRoot value) {
        copyOnWrite();
        instance.setLogRoot(value);
        return this;
        }
      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      public Builder setLogRoot(
          google.trillian.proto.SignedLogRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setLogRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      public Builder mergeLogRoot(google.trillian.proto.SignedLogRoot value) {
        copyOnWrite();
        instance.mergeLogRoot(value);
        return this;
      }
      /**
       * <pre>
       * log_root is the latest globally consistent log root.
       * </pre>
       *
       * <code>.trillian.SignedLogRoot log_root = 1;</code>
       */
      public Builder clearLogRoot() {  copyOnWrite();
        instance.clearLogRoot();
        return this;
      }

      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @return A list containing the logConsistency.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getLogConsistencyList() {
        return java.util.Collections.unmodifiableList(
            instance.getLogConsistencyList());
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @return The count of logConsistency.
       */
      @java.lang.Override
      public int getLogConsistencyCount() {
        return instance.getLogConsistencyCount();
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @param index The index of the element to return.
       * @return The logConsistency at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getLogConsistency(int index) {
        return instance.getLogConsistency(index);
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @param value The logConsistency to set.
       * @return This builder for chaining.
       */
      public Builder setLogConsistency(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogConsistency(index, value);
        return this;
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @param value The logConsistency to add.
       * @return This builder for chaining.
       */
      public Builder addLogConsistency(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addLogConsistency(value);
        return this;
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @param values The logConsistency to add.
       * @return This builder for chaining.
       */
      public Builder addAllLogConsistency(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllLogConsistency(values);
        return this;
      }
      /**
       * <pre>
       * log_consistency proves that log_root is consistent with previously seen
       * roots.
       * </pre>
       *
       * <code>repeated bytes log_consistency = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogConsistency() {
        copyOnWrite();
        instance.clearLogConsistency();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.LogRoot)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.LogRoot();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "logRoot_",
              "logConsistency_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\t\u0002\u001c" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.LogRoot> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.LogRoot.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.LogRoot>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.LogRoot)
    private static final google.keytransparency.v1.Keytransparency.LogRoot DEFAULT_INSTANCE;
    static {
      LogRoot defaultInstance = new LogRoot();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LogRoot.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.LogRoot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LogRoot> PARSER;

    public static com.google.protobuf.Parser<LogRoot> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RevisionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.Revision)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     * @return Whether the mapRoot field is set.
     */
    boolean hasMapRoot();
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     * @return The mapRoot.
     */
    google.keytransparency.v1.Keytransparency.MapRoot getMapRoot();

    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     * @return Whether the latestLogRoot field is set.
     */
    boolean hasLatestLogRoot();
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     * @return The latestLogRoot.
     */
    google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot();
  }
  /**
   * <pre>
   * Revision represents a snapshot of the entire key directory and
   * a diff of what changed between this revision and the previous revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.Revision}
   */
  public  static final class Revision extends
      com.google.protobuf.GeneratedMessageLite<
          Revision, Revision.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.Revision)
      RevisionOrBuilder {
    private Revision() {
      directoryId_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int MAP_ROOT_FIELD_NUMBER = 5;
    private google.keytransparency.v1.Keytransparency.MapRoot mapRoot_;
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     */
    @java.lang.Override
    public boolean hasMapRoot() {
      return mapRoot_ != null;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
      return mapRoot_ == null ? google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance() : mapRoot_;
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     */
    private void setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  mapRoot_ = value;
      
      }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
      value.getClass();
  if (mapRoot_ != null &&
          mapRoot_ != google.keytransparency.v1.Keytransparency.MapRoot.getDefaultInstance()) {
        mapRoot_ =
          google.keytransparency.v1.Keytransparency.MapRoot.newBuilder(mapRoot_).mergeFrom(value).buildPartial();
      } else {
        mapRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * map_root contains the map root and its inclusion in the log.
     * </pre>
     *
     * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
     */
    private void clearMapRoot() {  mapRoot_ = null;
      
    }

    public static final int LATEST_LOG_ROOT_FIELD_NUMBER = 6;
    private google.keytransparency.v1.Keytransparency.LogRoot latestLogRoot_;
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     */
    @java.lang.Override
    public boolean hasLatestLogRoot() {
      return latestLogRoot_ != null;
    }
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
      return latestLogRoot_ == null ? google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance() : latestLogRoot_;
    }
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     */
    private void setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  latestLogRoot_ = value;
      
      }
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
      value.getClass();
  if (latestLogRoot_ != null &&
          latestLogRoot_ != google.keytransparency.v1.Keytransparency.LogRoot.getDefaultInstance()) {
        latestLogRoot_ =
          google.keytransparency.v1.Keytransparency.LogRoot.newBuilder(latestLogRoot_).mergeFrom(value).buildPartial();
      } else {
        latestLogRoot_ = value;
      }
      
    }
    /**
     * <pre>
     * latest_log_root contains the most recent log root and its consistency
     * proof to the client's last seen log root.
     * </pre>
     *
     * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
     */
    private void clearLatestLogRoot() {  latestLogRoot_ = null;
      
    }

    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.Revision parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.Revision prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Revision represents a snapshot of the entire key directory and
     * a diff of what changed between this revision and the previous revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.Revision}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.Revision, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.Revision)
        google.keytransparency.v1.Keytransparency.RevisionOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.Revision.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      @java.lang.Override
      public boolean hasMapRoot() {
        return instance.hasMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MapRoot getMapRoot() {
        return instance.getMapRoot();
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      public Builder setMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.setMapRoot(value);
        return this;
        }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      public Builder setMapRoot(
          google.keytransparency.v1.Keytransparency.MapRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setMapRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      public Builder mergeMapRoot(google.keytransparency.v1.Keytransparency.MapRoot value) {
        copyOnWrite();
        instance.mergeMapRoot(value);
        return this;
      }
      /**
       * <pre>
       * map_root contains the map root and its inclusion in the log.
       * </pre>
       *
       * <code>.google.keytransparency.v1.MapRoot map_root = 5;</code>
       */
      public Builder clearMapRoot() {  copyOnWrite();
        instance.clearMapRoot();
        return this;
      }

      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      @java.lang.Override
      public boolean hasLatestLogRoot() {
        return instance.hasLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.LogRoot getLatestLogRoot() {
        return instance.getLatestLogRoot();
      }
      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      public Builder setLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.setLatestLogRoot(value);
        return this;
        }
      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      public Builder setLatestLogRoot(
          google.keytransparency.v1.Keytransparency.LogRoot.Builder builderForValue) {
        copyOnWrite();
        instance.setLatestLogRoot(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      public Builder mergeLatestLogRoot(google.keytransparency.v1.Keytransparency.LogRoot value) {
        copyOnWrite();
        instance.mergeLatestLogRoot(value);
        return this;
      }
      /**
       * <pre>
       * latest_log_root contains the most recent log root and its consistency
       * proof to the client's last seen log root.
       * </pre>
       *
       * <code>.google.keytransparency.v1.LogRoot latest_log_root = 6;</code>
       */
      public Builder clearLatestLogRoot() {  copyOnWrite();
        instance.clearLatestLogRoot();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.Revision)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.Revision();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "mapRoot_",
              "latestLogRoot_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0006\u0003\u0000\u0000\u0000\u0001\u0208\u0005\t" +
                "\u0006\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.Revision> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.Revision.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.Revision>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.Revision)
    private static final google.keytransparency.v1.Keytransparency.Revision DEFAULT_INSTANCE;
    static {
      Revision defaultInstance = new Revision();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Revision.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.Revision getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Revision> PARSER;

    public static com.google.protobuf.Parser<Revision> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListMutationsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListMutationsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * revision specifies the revision number.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @return The revision.
     */
    long getRevision();

    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @return The pageToken.
     */
    java.lang.String getPageToken();
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @return The bytes for pageToken.
     */
    com.google.protobuf.ByteString
        getPageTokenBytes();

    /**
     * <pre>
     * page_size is the maximum number of mutations to return in a single request.
     * The server may choose a smaller page_size than the one requested.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     * @return The pageSize.
     */
    int getPageSize();
  }
  /**
   * <pre>
   * ListMutationsRequest requests the mutations that created a given revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListMutationsRequest}
   */
  public  static final class ListMutationsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ListMutationsRequest, ListMutationsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListMutationsRequest)
      ListMutationsRequestOrBuilder {
    private ListMutationsRequest() {
      directoryId_ = "";
      pageToken_ = "";
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 5;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id is the directory identifier.
     * </pre>
     *
     * <code>string directory_id = 5;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int REVISION_FIELD_NUMBER = 1;
    private long revision_;
    /**
     * <pre>
     * revision specifies the revision number.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @return The revision.
     */
    @java.lang.Override
    public long getRevision() {
      return revision_;
    }
    /**
     * <pre>
     * revision specifies the revision number.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     * @param value The revision to set.
     */
    private void setRevision(long value) {
      
      revision_ = value;
    }
    /**
     * <pre>
     * revision specifies the revision number.
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     */
    private void clearRevision() {
      
      revision_ = 0L;
    }

    public static final int PAGE_TOKEN_FIELD_NUMBER = 3;
    private java.lang.String pageToken_;
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @return The pageToken.
     */
    @java.lang.Override
    public java.lang.String getPageToken() {
      return pageToken_;
    }
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @return The bytes for pageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageToken_);
    }
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @param value The pageToken to set.
     */
    private void setPageToken(
        java.lang.String value) {
      value.getClass();
  
      pageToken_ = value;
    }
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     */
    private void clearPageToken() {
      
      pageToken_ = getDefaultInstance().getPageToken();
    }
    /**
     * <pre>
     * page_token defines the starting point for pagination.
     * To request the next page, pass next_page_token from the previous response.
     * To start at the beginning, simply omit page_token from the request.
     * </pre>
     *
     * <code>string page_token = 3;</code>
     * @param value The bytes for pageToken to set.
     */
    private void setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      pageToken_ = value.toStringUtf8();
      
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 4;
    private int pageSize_;
    /**
     * <pre>
     * page_size is the maximum number of mutations to return in a single request.
     * The server may choose a smaller page_size than the one requested.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     * @return The pageSize.
     */
    @java.lang.Override
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * page_size is the maximum number of mutations to return in a single request.
     * The server may choose a smaller page_size than the one requested.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     * @param value The pageSize to set.
     */
    private void setPageSize(int value) {
      
      pageSize_ = value;
    }
    /**
     * <pre>
     * page_size is the maximum number of mutations to return in a single request.
     * The server may choose a smaller page_size than the one requested.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = 0;
    }

    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListMutationsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListMutationsRequest requests the mutations that created a given revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListMutationsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListMutationsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListMutationsRequest)
        google.keytransparency.v1.Keytransparency.ListMutationsRequestOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListMutationsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id is the directory identifier.
       * </pre>
       *
       * <code>string directory_id = 5;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * revision specifies the revision number.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @return The revision.
       */
      @java.lang.Override
      public long getRevision() {
        return instance.getRevision();
      }
      /**
       * <pre>
       * revision specifies the revision number.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @param value The revision to set.
       * @return This builder for chaining.
       */
      public Builder setRevision(long value) {
        copyOnWrite();
        instance.setRevision(value);
        return this;
      }
      /**
       * <pre>
       * revision specifies the revision number.
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevision() {
        copyOnWrite();
        instance.clearRevision();
        return this;
      }

      /**
       * <pre>
       * page_token defines the starting point for pagination.
       * To request the next page, pass next_page_token from the previous response.
       * To start at the beginning, simply omit page_token from the request.
       * </pre>
       *
       * <code>string page_token = 3;</code>
       * @return The pageToken.
       */
      @java.lang.Override
      public java.lang.String getPageToken() {
        return instance.getPageToken();
      }
      /**
       * <pre>
       * page_token defines the starting point for pagination.
       * To request the next page, pass next_page_token from the previous response.
       * To start at the beginning, simply omit page_token from the request.
       * </pre>
       *
       * <code>string page_token = 3;</code>
       * @return The bytes for pageToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPageTokenBytes() {
        return instance.getPageTokenBytes();
      }
      /**
       * <pre>
       * page_token defines the starting point for pagination.
       * To request the next page, pass next_page_token from the previous response.
       * To start at the beginning, simply omit page_token from the request.
       * </pre>
       *
       * <code>string page_token = 3;</code>
       * @param value The pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageToken(value);
        return this;
      }
      /**
       * <pre>
       * page_token defines the starting point for pagination.
       * To request the next page, pass next_page_token from the previous response.
       * To start at the beginning, simply omit page_token from the request.
       * </pre>
       *
       * <code>string page_token = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageToken() {
        copyOnWrite();
        instance.clearPageToken();
        return this;
      }
      /**
       * <pre>
       * page_token defines the starting point for pagination.
       * To request the next page, pass next_page_token from the previous response.
       * To start at the beginning, simply omit page_token from the request.
       * </pre>
       *
       * <code>string page_token = 3;</code>
       * @param value The bytes for pageToken to set.
       * @return This builder for chaining.
       */
      public Builder setPageTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageTokenBytes(value);
        return this;
      }

      /**
       * <pre>
       * page_size is the maximum number of mutations to return in a single request.
       * The server may choose a smaller page_size than the one requested.
       * </pre>
       *
       * <code>int32 page_size = 4;</code>
       * @return The pageSize.
       */
      @java.lang.Override
      public int getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <pre>
       * page_size is the maximum number of mutations to return in a single request.
       * The server may choose a smaller page_size than the one requested.
       * </pre>
       *
       * <code>int32 page_size = 4;</code>
       * @param value The pageSize to set.
       * @return This builder for chaining.
       */
      public Builder setPageSize(int value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <pre>
       * page_size is the maximum number of mutations to return in a single request.
       * The server may choose a smaller page_size than the one requested.
       * </pre>
       *
       * <code>int32 page_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListMutationsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListMutationsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "revision_",
              "pageToken_",
              "pageSize_",
              "directoryId_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0005\u0004\u0000\u0000\u0000\u0001\u0002\u0003\u0208" +
                "\u0004\u0004\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListMutationsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListMutationsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListMutationsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListMutationsRequest)
    private static final google.keytransparency.v1.Keytransparency.ListMutationsRequest DEFAULT_INSTANCE;
    static {
      ListMutationsRequest defaultInstance = new ListMutationsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListMutationsRequest.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListMutationsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListMutationsRequest> PARSER;

    public static com.google.protobuf.Parser<ListMutationsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListMutationsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListMutationsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    java.util.List<google.keytransparency.v1.Keytransparency.MutationProof> 
        getMutationsList();
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    google.keytransparency.v1.Keytransparency.MutationProof getMutations(int index);
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    int getMutationsCount();

    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @return The nextPageToken.
     */
    java.lang.String getNextPageToken();
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @return The bytes for nextPageToken.
     */
    com.google.protobuf.ByteString
        getNextPageTokenBytes();
  }
  /**
   * <pre>
   * ListMutationsResponse contains the mutations that produced an revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListMutationsResponse}
   */
  public  static final class ListMutationsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ListMutationsResponse, ListMutationsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListMutationsResponse)
      ListMutationsResponseOrBuilder {
    private ListMutationsResponse() {
      mutations_ = emptyProtobufList();
      nextPageToken_ = "";
    }
    public static final int MUTATIONS_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.MutationProof> mutations_;
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    @java.lang.Override
    public java.util.List<google.keytransparency.v1.Keytransparency.MutationProof> getMutationsList() {
      return mutations_;
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    public java.util.List<? extends google.keytransparency.v1.Keytransparency.MutationProofOrBuilder> 
        getMutationsOrBuilderList() {
      return mutations_;
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    @java.lang.Override
    public int getMutationsCount() {
      return mutations_.size();
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.Keytransparency.MutationProof getMutations(int index) {
      return mutations_.get(index);
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    public google.keytransparency.v1.Keytransparency.MutationProofOrBuilder getMutationsOrBuilder(
        int index) {
      return mutations_.get(index);
    }
    private void ensureMutationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<google.keytransparency.v1.Keytransparency.MutationProof> tmp = mutations_;
      if (!tmp.isModifiable()) {
        mutations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void setMutations(
        int index, google.keytransparency.v1.Keytransparency.MutationProof value) {
      value.getClass();
  ensureMutationsIsMutable();
      mutations_.set(index, value);
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void addMutations(google.keytransparency.v1.Keytransparency.MutationProof value) {
      value.getClass();
  ensureMutationsIsMutable();
      mutations_.add(value);
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void addMutations(
        int index, google.keytransparency.v1.Keytransparency.MutationProof value) {
      value.getClass();
  ensureMutationsIsMutable();
      mutations_.add(index, value);
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void addAllMutations(
        java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.MutationProof> values) {
      ensureMutationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mutations_);
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void clearMutations() {
      mutations_ = emptyProtobufList();
    }
    /**
     * <pre>
     * mutations contains the mutation object and the leaf value it operated on.
     * </pre>
     *
     * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
     */
    private void removeMutations(int index) {
      ensureMutationsIsMutable();
      mutations_.remove(index);
    }

    public static final int NEXT_PAGE_TOKEN_FIELD_NUMBER = 7;
    private java.lang.String nextPageToken_;
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @return The nextPageToken.
     */
    @java.lang.Override
    public java.lang.String getNextPageToken() {
      return nextPageToken_;
    }
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @return The bytes for nextPageToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextPageTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(nextPageToken_);
    }
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @param value The nextPageToken to set.
     */
    private void setNextPageToken(
        java.lang.String value) {
      value.getClass();
  
      nextPageToken_ = value;
    }
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     */
    private void clearNextPageToken() {
      
      nextPageToken_ = getDefaultInstance().getNextPageToken();
    }
    /**
     * <pre>
     * next_page_token is the next page token to query for pagination.
     * An empty value means there are no more results to fetch.
     * </pre>
     *
     * <code>string next_page_token = 7;</code>
     * @param value The bytes for nextPageToken to set.
     */
    private void setNextPageTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      nextPageToken_ = value.toStringUtf8();
      
    }

    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Keytransparency.ListMutationsResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListMutationsResponse contains the mutations that produced an revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListMutationsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Keytransparency.ListMutationsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListMutationsResponse)
        google.keytransparency.v1.Keytransparency.ListMutationsResponseOrBuilder {
      // Construct using google.keytransparency.v1.Keytransparency.ListMutationsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      @java.lang.Override
      public java.util.List<google.keytransparency.v1.Keytransparency.MutationProof> getMutationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMutationsList());
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      @java.lang.Override
      public int getMutationsCount() {
        return instance.getMutationsCount();
      }/**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.Keytransparency.MutationProof getMutations(int index) {
        return instance.getMutations(index);
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder setMutations(
          int index, google.keytransparency.v1.Keytransparency.MutationProof value) {
        copyOnWrite();
        instance.setMutations(index, value);
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder setMutations(
          int index, google.keytransparency.v1.Keytransparency.MutationProof.Builder builderForValue) {
        copyOnWrite();
        instance.setMutations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder addMutations(google.keytransparency.v1.Keytransparency.MutationProof value) {
        copyOnWrite();
        instance.addMutations(value);
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder addMutations(
          int index, google.keytransparency.v1.Keytransparency.MutationProof value) {
        copyOnWrite();
        instance.addMutations(index, value);
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder addMutations(
          google.keytransparency.v1.Keytransparency.MutationProof.Builder builderForValue) {
        copyOnWrite();
        instance.addMutations(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder addMutations(
          int index, google.keytransparency.v1.Keytransparency.MutationProof.Builder builderForValue) {
        copyOnWrite();
        instance.addMutations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder addAllMutations(
          java.lang.Iterable<? extends google.keytransparency.v1.Keytransparency.MutationProof> values) {
        copyOnWrite();
        instance.addAllMutations(values);
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder clearMutations() {
        copyOnWrite();
        instance.clearMutations();
        return this;
      }
      /**
       * <pre>
       * mutations contains the mutation object and the leaf value it operated on.
       * </pre>
       *
       * <code>repeated .google.keytransparency.v1.MutationProof mutations = 6;</code>
       */
      public Builder removeMutations(int index) {
        copyOnWrite();
        instance.removeMutations(index);
        return this;
      }

      /**
       * <pre>
       * next_page_token is the next page token to query for pagination.
       * An empty value means there are no more results to fetch.
       * </pre>
       *
       * <code>string next_page_token = 7;</code>
       * @return The nextPageToken.
       */
      @java.lang.Override
      public java.lang.String getNextPageToken() {
        return instance.getNextPageToken();
      }
      /**
       * <pre>
       * next_page_token is the next page token to query for pagination.
       * An empty value means there are no more results to fetch.
       * </pre>
       *
       * <code>string next_page_token = 7;</code>
       * @return The bytes for nextPageToken.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNextPageTokenBytes() {
        return instance.getNextPageTokenBytes();
      }
      /**
       * <pre>
       * next_page_token is the next page token to query for pagination.
       * An empty value means there are no more results to fetch.
       * </pre>
       *
       * <code>string next_page_token = 7;</code>
       * @param value The nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setNextPageToken(value);
        return this;
      }
      /**
       * <pre>
       * next_page_token is the next page token to query for pagination.
       * An empty value means there are no more results to fetch.
       * </pre>
       *
       * <code>string next_page_token = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextPageToken() {
        copyOnWrite();
        instance.clearNextPageToken();
        return this;
      }
      /**
       * <pre>
       * next_page_token is the next page token to query for pagination.
       * An empty value means there are no more results to fetch.
       * </pre>
       *
       * <code>string next_page_token = 7;</code>
       * @param value The bytes for nextPageToken to set.
       * @return This builder for chaining.
       */
      public Builder setNextPageTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNextPageTokenBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListMutationsResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Keytransparency.ListMutationsResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "mutations_",
              google.keytransparency.v1.Keytransparency.MutationProof.class,
              "nextPageToken_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0006\u0007\u0002\u0000\u0001\u0000\u0006\u001b\u0007\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Keytransparency.ListMutationsResponse> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Keytransparency.ListMutationsResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Keytransparency.ListMutationsResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListMutationsResponse)
    private static final google.keytransparency.v1.Keytransparency.ListMutationsResponse DEFAULT_INSTANCE;
    static {
      ListMutationsResponse defaultInstance = new ListMutationsResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListMutationsResponse.class, defaultInstance);
    }

    public static google.keytransparency.v1.Keytransparency.ListMutationsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListMutationsResponse> PARSER;

    public static com.google.protobuf.Parser<ListMutationsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
