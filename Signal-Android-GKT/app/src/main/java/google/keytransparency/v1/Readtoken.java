// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: readtoken.proto

package google.keytransparency.v1;

public final class Readtoken {
  private Readtoken() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ReadTokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ReadToken)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * slice_index identifies the source for reading.
     * </pre>
     *
     * <code>int64 slice_index = 1;</code>
     * @return The sliceIndex.
     */
    long getSliceIndex();

    /**
     * <pre>
     * start_watermark identifies the lowest (exclusive) row to return.
     * </pre>
     *
     * <code>uint64 start_watermark = 4;</code>
     * @return The startWatermark.
     */
    long getStartWatermark();
  }
  /**
   * <pre>
   * ReadToken can be serialized and handed to users for pagination.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ReadToken}
   */
  public  static final class ReadToken extends
      com.google.protobuf.GeneratedMessageLite<
          ReadToken, ReadToken.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ReadToken)
      ReadTokenOrBuilder {
    private ReadToken() {
    }
    public static final int SLICE_INDEX_FIELD_NUMBER = 1;
    private long sliceIndex_;
    /**
     * <pre>
     * slice_index identifies the source for reading.
     * </pre>
     *
     * <code>int64 slice_index = 1;</code>
     * @return The sliceIndex.
     */
    @java.lang.Override
    public long getSliceIndex() {
      return sliceIndex_;
    }
    /**
     * <pre>
     * slice_index identifies the source for reading.
     * </pre>
     *
     * <code>int64 slice_index = 1;</code>
     * @param value The sliceIndex to set.
     */
    private void setSliceIndex(long value) {
      
      sliceIndex_ = value;
    }
    /**
     * <pre>
     * slice_index identifies the source for reading.
     * </pre>
     *
     * <code>int64 slice_index = 1;</code>
     */
    private void clearSliceIndex() {
      
      sliceIndex_ = 0L;
    }

    public static final int START_WATERMARK_FIELD_NUMBER = 4;
    private long startWatermark_;
    /**
     * <pre>
     * start_watermark identifies the lowest (exclusive) row to return.
     * </pre>
     *
     * <code>uint64 start_watermark = 4;</code>
     * @return The startWatermark.
     */
    @java.lang.Override
    public long getStartWatermark() {
      return startWatermark_;
    }
    /**
     * <pre>
     * start_watermark identifies the lowest (exclusive) row to return.
     * </pre>
     *
     * <code>uint64 start_watermark = 4;</code>
     * @param value The startWatermark to set.
     */
    private void setStartWatermark(long value) {
      
      startWatermark_ = value;
    }
    /**
     * <pre>
     * start_watermark identifies the lowest (exclusive) row to return.
     * </pre>
     *
     * <code>uint64 start_watermark = 4;</code>
     */
    private void clearStartWatermark() {
      
      startWatermark_ = 0L;
    }

    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ReadToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Readtoken.ReadToken prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ReadToken can be serialized and handed to users for pagination.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ReadToken}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Readtoken.ReadToken, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ReadToken)
        google.keytransparency.v1.Readtoken.ReadTokenOrBuilder {
      // Construct using google.keytransparency.v1.Readtoken.ReadToken.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * slice_index identifies the source for reading.
       * </pre>
       *
       * <code>int64 slice_index = 1;</code>
       * @return The sliceIndex.
       */
      @java.lang.Override
      public long getSliceIndex() {
        return instance.getSliceIndex();
      }
      /**
       * <pre>
       * slice_index identifies the source for reading.
       * </pre>
       *
       * <code>int64 slice_index = 1;</code>
       * @param value The sliceIndex to set.
       * @return This builder for chaining.
       */
      public Builder setSliceIndex(long value) {
        copyOnWrite();
        instance.setSliceIndex(value);
        return this;
      }
      /**
       * <pre>
       * slice_index identifies the source for reading.
       * </pre>
       *
       * <code>int64 slice_index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSliceIndex() {
        copyOnWrite();
        instance.clearSliceIndex();
        return this;
      }

      /**
       * <pre>
       * start_watermark identifies the lowest (exclusive) row to return.
       * </pre>
       *
       * <code>uint64 start_watermark = 4;</code>
       * @return The startWatermark.
       */
      @java.lang.Override
      public long getStartWatermark() {
        return instance.getStartWatermark();
      }
      /**
       * <pre>
       * start_watermark identifies the lowest (exclusive) row to return.
       * </pre>
       *
       * <code>uint64 start_watermark = 4;</code>
       * @param value The startWatermark to set.
       * @return This builder for chaining.
       */
      public Builder setStartWatermark(long value) {
        copyOnWrite();
        instance.setStartWatermark(value);
        return this;
      }
      /**
       * <pre>
       * start_watermark identifies the lowest (exclusive) row to return.
       * </pre>
       *
       * <code>uint64 start_watermark = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartWatermark() {
        copyOnWrite();
        instance.clearStartWatermark();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ReadToken)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Readtoken.ReadToken();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "sliceIndex_",
              "startWatermark_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0004\u0002\u0000\u0000\u0000\u0001\u0002\u0004\u0003" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Readtoken.ReadToken> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Readtoken.ReadToken.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Readtoken.ReadToken>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ReadToken)
    private static final google.keytransparency.v1.Readtoken.ReadToken DEFAULT_INSTANCE;
    static {
      ReadToken defaultInstance = new ReadToken();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ReadToken.class, defaultInstance);
    }

    public static google.keytransparency.v1.Readtoken.ReadToken getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ReadToken> PARSER;

    public static com.google.protobuf.Parser<ReadToken> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ListUserRevisionsTokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.v1.ListUserRevisionsToken)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     * @return Whether the request field is set.
     */
    boolean hasRequest();
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     * @return The request.
     */
    google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest getRequest();

    /**
     * <pre>
     * revisions_returned is a running tally of the number of revisions that have
     * been returned across paginated requests in this query.
     * </pre>
     *
     * <code>int64 revisions_returned = 2;</code>
     * @return The revisionsReturned.
     */
    long getRevisionsReturned();
  }
  /**
   * <pre>
   * ListUserRevisions token can be serialized and handed to users for pagination
   * when listing revisions.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsToken}
   */
  public  static final class ListUserRevisionsToken extends
      com.google.protobuf.GeneratedMessageLite<
          ListUserRevisionsToken, ListUserRevisionsToken.Builder> implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.v1.ListUserRevisionsToken)
      ListUserRevisionsTokenOrBuilder {
    private ListUserRevisionsToken() {
    }
    public static final int REQUEST_FIELD_NUMBER = 1;
    private google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest request_;
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     */
    @java.lang.Override
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     */
    @java.lang.Override
    public google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest getRequest() {
      return request_ == null ? google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest.getDefaultInstance() : request_;
    }
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     */
    private void setRequest(google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest value) {
      value.getClass();
  request_ = value;
      
      }
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRequest(google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest value) {
      value.getClass();
  if (request_ != null &&
          request_ != google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest.getDefaultInstance()) {
        request_ =
          google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest.newBuilder(request_).mergeFrom(value).buildPartial();
      } else {
        request_ = value;
      }
      
    }
    /**
     * <pre>
     * request is the query being paginated over, used for validation of
     * subsequent requests. Fields that are allowed to change between requests
     * (such as page_token or last_verified_tree_size) will not be validated and
     * should be omitted for brevity.
     * </pre>
     *
     * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
     */
    private void clearRequest() {  request_ = null;
      
    }

    public static final int REVISIONS_RETURNED_FIELD_NUMBER = 2;
    private long revisionsReturned_;
    /**
     * <pre>
     * revisions_returned is a running tally of the number of revisions that have
     * been returned across paginated requests in this query.
     * </pre>
     *
     * <code>int64 revisions_returned = 2;</code>
     * @return The revisionsReturned.
     */
    @java.lang.Override
    public long getRevisionsReturned() {
      return revisionsReturned_;
    }
    /**
     * <pre>
     * revisions_returned is a running tally of the number of revisions that have
     * been returned across paginated requests in this query.
     * </pre>
     *
     * <code>int64 revisions_returned = 2;</code>
     * @param value The revisionsReturned to set.
     */
    private void setRevisionsReturned(long value) {
      
      revisionsReturned_ = value;
    }
    /**
     * <pre>
     * revisions_returned is a running tally of the number of revisions that have
     * been returned across paginated requests in this query.
     * </pre>
     *
     * <code>int64 revisions_returned = 2;</code>
     */
    private void clearRevisionsReturned() {
      
      revisionsReturned_ = 0L;
    }

    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.keytransparency.v1.Readtoken.ListUserRevisionsToken prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * ListUserRevisions token can be serialized and handed to users for pagination
     * when listing revisions.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.v1.ListUserRevisionsToken}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.keytransparency.v1.Readtoken.ListUserRevisionsToken, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.v1.ListUserRevisionsToken)
        google.keytransparency.v1.Readtoken.ListUserRevisionsTokenOrBuilder {
      // Construct using google.keytransparency.v1.Readtoken.ListUserRevisionsToken.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      @java.lang.Override
      public boolean hasRequest() {
        return instance.hasRequest();
      }
      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      @java.lang.Override
      public google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest getRequest() {
        return instance.getRequest();
      }
      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      public Builder setRequest(google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest value) {
        copyOnWrite();
        instance.setRequest(value);
        return this;
        }
      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      public Builder setRequest(
          google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest.Builder builderForValue) {
        copyOnWrite();
        instance.setRequest(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      public Builder mergeRequest(google.keytransparency.v1.KeyTransparencyService.ListUserRevisionsRequest value) {
        copyOnWrite();
        instance.mergeRequest(value);
        return this;
      }
      /**
       * <pre>
       * request is the query being paginated over, used for validation of
       * subsequent requests. Fields that are allowed to change between requests
       * (such as page_token or last_verified_tree_size) will not be validated and
       * should be omitted for brevity.
       * </pre>
       *
       * <code>.google.keytransparency.v1.ListUserRevisionsRequest request = 1;</code>
       */
      public Builder clearRequest() {  copyOnWrite();
        instance.clearRequest();
        return this;
      }

      /**
       * <pre>
       * revisions_returned is a running tally of the number of revisions that have
       * been returned across paginated requests in this query.
       * </pre>
       *
       * <code>int64 revisions_returned = 2;</code>
       * @return The revisionsReturned.
       */
      @java.lang.Override
      public long getRevisionsReturned() {
        return instance.getRevisionsReturned();
      }
      /**
       * <pre>
       * revisions_returned is a running tally of the number of revisions that have
       * been returned across paginated requests in this query.
       * </pre>
       *
       * <code>int64 revisions_returned = 2;</code>
       * @param value The revisionsReturned to set.
       * @return This builder for chaining.
       */
      public Builder setRevisionsReturned(long value) {
        copyOnWrite();
        instance.setRevisionsReturned(value);
        return this;
      }
      /**
       * <pre>
       * revisions_returned is a running tally of the number of revisions that have
       * been returned across paginated requests in this query.
       * </pre>
       *
       * <code>int64 revisions_returned = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRevisionsReturned() {
        copyOnWrite();
        instance.clearRevisionsReturned();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.keytransparency.v1.ListUserRevisionsToken)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.keytransparency.v1.Readtoken.ListUserRevisionsToken();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "request_",
              "revisionsReturned_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\t\u0002\u0002" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.keytransparency.v1.Readtoken.ListUserRevisionsToken> parser = PARSER;
          if (parser == null) {
            synchronized (google.keytransparency.v1.Readtoken.ListUserRevisionsToken.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.keytransparency.v1.Readtoken.ListUserRevisionsToken>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.keytransparency.v1.ListUserRevisionsToken)
    private static final google.keytransparency.v1.Readtoken.ListUserRevisionsToken DEFAULT_INSTANCE;
    static {
      ListUserRevisionsToken defaultInstance = new ListUserRevisionsToken();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ListUserRevisionsToken.class, defaultInstance);
    }

    public static google.keytransparency.v1.Readtoken.ListUserRevisionsToken getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ListUserRevisionsToken> PARSER;

    public static com.google.protobuf.Parser<ListUserRevisionsToken> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
