// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/sigpb/sigpb.proto

package google.trillian.sigpb;

public final class Sigpb {
  private Sigpb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface DigitallySignedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sigpb.DigitallySigned)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @return The enum numeric value on the wire for hashAlgorithm.
     */
    int getHashAlgorithmValue();
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @return The hashAlgorithm.
     */
    google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm();

    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @return The enum numeric value on the wire for signatureAlgorithm.
     */
    int getSignatureAlgorithmValue();
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @return The signatureAlgorithm.
     */
    google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm();

    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * <pre>
   * Protocol buffer encoding of the TLS DigitallySigned type, from RFC 5246 ยง4.7.
   * </pre>
   *
   * Protobuf type {@code sigpb.DigitallySigned}
   */
  public  static final class DigitallySigned extends
      com.google.protobuf.GeneratedMessageLite<
          DigitallySigned, DigitallySigned.Builder> implements
      // @@protoc_insertion_point(message_implements:sigpb.DigitallySigned)
      DigitallySignedOrBuilder {
    private DigitallySigned() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * <pre>
     * HashAlgorithm defines the approved methods for object hashing.
     * Supported hash algorithms. The numbering space is the same as for TLS,
     * given in RFC 5246 s7.4.1.4.1 and at:
     * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-18
     * </pre>
     *
     * Protobuf enum {@code sigpb.DigitallySigned.HashAlgorithm}
     */
    public enum HashAlgorithm
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * No hash algorithm is used.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <pre>
       * SHA256 is used.
       * </pre>
       *
       * <code>SHA256 = 4;</code>
       */
      SHA256(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * No hash algorithm is used.
       * </pre>
       *
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <pre>
       * SHA256 is used.
       * </pre>
       *
       * <code>SHA256 = 4;</code>
       */
      public static final int SHA256_VALUE = 4;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static HashAlgorithm valueOf(int value) {
        return forNumber(value);
      }

      public static HashAlgorithm forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 4: return SHA256;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          HashAlgorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HashAlgorithm>() {
              @java.lang.Override
              public HashAlgorithm findValueByNumber(int number) {
                return HashAlgorithm.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return HashAlgorithmVerifier.INSTANCE;
      }

      private static final class HashAlgorithmVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new HashAlgorithmVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return HashAlgorithm.forNumber(number) != null;
              }
            };

      private final int value;

      private HashAlgorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sigpb.DigitallySigned.HashAlgorithm)
    }

    /**
     * <pre>
     * SignatureAlgorithm defines the algorithm used to sign the object.
     * Supported signature algorithms. The numbering space is the same as for TLS,
     * given in RFC 5246 s7.4.1.4.1 and at:
     * http://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-16
     * </pre>
     *
     * Protobuf enum {@code sigpb.DigitallySigned.SignatureAlgorithm}
     */
    public enum SignatureAlgorithm
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Anonymous signature scheme.
       * </pre>
       *
       * <code>ANONYMOUS = 0;</code>
       */
      ANONYMOUS(0),
      /**
       * <pre>
       * RSA signature scheme.
       * </pre>
       *
       * <code>RSA = 1;</code>
       */
      RSA(1),
      /**
       * <pre>
       * ECDSA signature scheme.
       * </pre>
       *
       * <code>ECDSA = 3;</code>
       */
      ECDSA(3),
      /**
       * <pre>
       * Ed25519 signature scheme.
       * </pre>
       *
       * <code>ED25519 = 7;</code>
       */
      ED25519(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Anonymous signature scheme.
       * </pre>
       *
       * <code>ANONYMOUS = 0;</code>
       */
      public static final int ANONYMOUS_VALUE = 0;
      /**
       * <pre>
       * RSA signature scheme.
       * </pre>
       *
       * <code>RSA = 1;</code>
       */
      public static final int RSA_VALUE = 1;
      /**
       * <pre>
       * ECDSA signature scheme.
       * </pre>
       *
       * <code>ECDSA = 3;</code>
       */
      public static final int ECDSA_VALUE = 3;
      /**
       * <pre>
       * Ed25519 signature scheme.
       * </pre>
       *
       * <code>ED25519 = 7;</code>
       */
      public static final int ED25519_VALUE = 7;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SignatureAlgorithm valueOf(int value) {
        return forNumber(value);
      }

      public static SignatureAlgorithm forNumber(int value) {
        switch (value) {
          case 0: return ANONYMOUS;
          case 1: return RSA;
          case 3: return ECDSA;
          case 7: return ED25519;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SignatureAlgorithm> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SignatureAlgorithm>() {
              @java.lang.Override
              public SignatureAlgorithm findValueByNumber(int number) {
                return SignatureAlgorithm.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return SignatureAlgorithmVerifier.INSTANCE;
      }

      private static final class SignatureAlgorithmVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SignatureAlgorithmVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return SignatureAlgorithm.forNumber(number) != null;
              }
            };

      private final int value;

      private SignatureAlgorithm(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:sigpb.DigitallySigned.SignatureAlgorithm)
    }

    public static final int HASH_ALGORITHM_FIELD_NUMBER = 1;
    private int hashAlgorithm_;
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @return The enum numeric value on the wire for hashAlgorithm.
     */
    @java.lang.Override
    public int getHashAlgorithmValue() {
      return hashAlgorithm_;
    }
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @return The hashAlgorithm.
     */
    @java.lang.Override
    public google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm() {
      google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm result = google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm.forNumber(hashAlgorithm_);
      return result == null ? google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @param value The enum numeric value on the wire for hashAlgorithm to set.
     */
    private void setHashAlgorithmValue(int value) {
        hashAlgorithm_ = value;
    }
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     * @param value The hashAlgorithm to set.
     */
    private void setHashAlgorithm(google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm value) {
      hashAlgorithm_ = value.getNumber();
      
    }
    /**
     * <pre>
     * hash_algorithm contains the hash algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
     */
    private void clearHashAlgorithm() {
      
      hashAlgorithm_ = 0;
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 2;
    private int signatureAlgorithm_;
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @return The enum numeric value on the wire for signatureAlgorithm.
     */
    @java.lang.Override
    public int getSignatureAlgorithmValue() {
      return signatureAlgorithm_;
    }
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @return The signatureAlgorithm.
     */
    @java.lang.Override
    public google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm() {
      google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm result = google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.forNumber(signatureAlgorithm_);
      return result == null ? google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @param value The enum numeric value on the wire for signatureAlgorithm to set.
     */
    private void setSignatureAlgorithmValue(int value) {
        signatureAlgorithm_ = value;
    }
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     * @param value The signatureAlgorithm to set.
     */
    private void setSignatureAlgorithm(google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm value) {
      signatureAlgorithm_ = value.getNumber();
      
    }
    /**
     * <pre>
     * sig_algorithm contains the signing algorithm used.
     * </pre>
     *
     * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
     */
    private void clearSignatureAlgorithm() {
      
      signatureAlgorithm_ = 0;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }
    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     * @param value The signature to set.
     */
    private void setSignature(com.google.protobuf.ByteString value) {
      value.getClass();
  
      signature_ = value;
    }
    /**
     * <pre>
     * signature contains the object signature.
     * </pre>
     *
     * <code>bytes signature = 3;</code>
     */
    private void clearSignature() {
      
      signature_ = getDefaultInstance().getSignature();
    }

    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.trillian.sigpb.Sigpb.DigitallySigned parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.trillian.sigpb.Sigpb.DigitallySigned prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Protocol buffer encoding of the TLS DigitallySigned type, from RFC 5246 ยง4.7.
     * </pre>
     *
     * Protobuf type {@code sigpb.DigitallySigned}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.trillian.sigpb.Sigpb.DigitallySigned, Builder> implements
        // @@protoc_insertion_point(builder_implements:sigpb.DigitallySigned)
        google.trillian.sigpb.Sigpb.DigitallySignedOrBuilder {
      // Construct using google.trillian.sigpb.Sigpb.DigitallySigned.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       * @return The enum numeric value on the wire for hashAlgorithm.
       */
      @java.lang.Override
      public int getHashAlgorithmValue() {
        return instance.getHashAlgorithmValue();
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       * @param value The hashAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setHashAlgorithmValue(int value) {
        copyOnWrite();
        instance.setHashAlgorithmValue(value);
        return this;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       * @return The hashAlgorithm.
       */
      @java.lang.Override
      public google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm getHashAlgorithm() {
        return instance.getHashAlgorithm();
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       * @param value The enum numeric value on the wire for hashAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setHashAlgorithm(google.trillian.sigpb.Sigpb.DigitallySigned.HashAlgorithm value) {
        copyOnWrite();
        instance.setHashAlgorithm(value);
        return this;
      }
      /**
       * <pre>
       * hash_algorithm contains the hash algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.HashAlgorithm hash_algorithm = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashAlgorithm() {
        copyOnWrite();
        instance.clearHashAlgorithm();
        return this;
      }

      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       * @return The enum numeric value on the wire for signatureAlgorithm.
       */
      @java.lang.Override
      public int getSignatureAlgorithmValue() {
        return instance.getSignatureAlgorithmValue();
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       * @param value The signatureAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setSignatureAlgorithmValue(int value) {
        copyOnWrite();
        instance.setSignatureAlgorithmValue(value);
        return this;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       * @return The signatureAlgorithm.
       */
      @java.lang.Override
      public google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm getSignatureAlgorithm() {
        return instance.getSignatureAlgorithm();
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       * @param value The enum numeric value on the wire for signatureAlgorithm to set.
       * @return This builder for chaining.
       */
      public Builder setSignatureAlgorithm(google.trillian.sigpb.Sigpb.DigitallySigned.SignatureAlgorithm value) {
        copyOnWrite();
        instance.setSignatureAlgorithm(value);
        return this;
      }
      /**
       * <pre>
       * sig_algorithm contains the signing algorithm used.
       * </pre>
       *
       * <code>.sigpb.DigitallySigned.SignatureAlgorithm signature_algorithm = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignatureAlgorithm() {
        copyOnWrite();
        instance.clearSignatureAlgorithm();
        return this;
      }

      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return instance.getSignature();
      }
      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSignature(value);
        return this;
      }
      /**
       * <pre>
       * signature contains the object signature.
       * </pre>
       *
       * <code>bytes signature = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        copyOnWrite();
        instance.clearSignature();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sigpb.DigitallySigned)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.trillian.sigpb.Sigpb.DigitallySigned();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "hashAlgorithm_",
              "signatureAlgorithm_",
              "signature_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\f\u0003" +
                "\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.trillian.sigpb.Sigpb.DigitallySigned> parser = PARSER;
          if (parser == null) {
            synchronized (google.trillian.sigpb.Sigpb.DigitallySigned.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.trillian.sigpb.Sigpb.DigitallySigned>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sigpb.DigitallySigned)
    private static final google.trillian.sigpb.Sigpb.DigitallySigned DEFAULT_INSTANCE;
    static {
      DigitallySigned defaultInstance = new DigitallySigned();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DigitallySigned.class, defaultInstance);
    }

    public static google.trillian.sigpb.Sigpb.DigitallySigned getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DigitallySigned> PARSER;

    public static com.google.protobuf.Parser<DigitallySigned> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
