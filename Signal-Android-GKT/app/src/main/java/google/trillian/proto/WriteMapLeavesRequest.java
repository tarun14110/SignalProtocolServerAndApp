// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian_map_api.proto

package google.trillian.proto;

/**
 * Protobuf type {@code trillian.WriteMapLeavesRequest}
 */
public  final class WriteMapLeavesRequest extends
    com.google.protobuf.GeneratedMessageLite<
        WriteMapLeavesRequest, WriteMapLeavesRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:trillian.WriteMapLeavesRequest)
    WriteMapLeavesRequestOrBuilder {
  private WriteMapLeavesRequest() {
    leaves_ = emptyProtobufList();
    metadata_ = com.google.protobuf.ByteString.EMPTY;
  }
  public static final int MAP_ID_FIELD_NUMBER = 1;
  private long mapId_;
  /**
   * <code>int64 map_id = 1;</code>
   * @return The mapId.
   */
  @java.lang.Override
  public long getMapId() {
    return mapId_;
  }
  /**
   * <code>int64 map_id = 1;</code>
   * @param value The mapId to set.
   */
  private void setMapId(long value) {
    
    mapId_ = value;
  }
  /**
   * <code>int64 map_id = 1;</code>
   */
  private void clearMapId() {
    
    mapId_ = 0L;
  }

  public static final int LEAVES_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<google.trillian.proto.MapLeaf> leaves_;
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  @java.lang.Override
  public java.util.List<google.trillian.proto.MapLeaf> getLeavesList() {
    return leaves_;
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  public java.util.List<? extends google.trillian.proto.MapLeafOrBuilder> 
      getLeavesOrBuilderList() {
    return leaves_;
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  @java.lang.Override
  public int getLeavesCount() {
    return leaves_.size();
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  @java.lang.Override
  public google.trillian.proto.MapLeaf getLeaves(int index) {
    return leaves_.get(index);
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  public google.trillian.proto.MapLeafOrBuilder getLeavesOrBuilder(
      int index) {
    return leaves_.get(index);
  }
  private void ensureLeavesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.trillian.proto.MapLeaf> tmp = leaves_;
    if (!tmp.isModifiable()) {
      leaves_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void setLeaves(
      int index, google.trillian.proto.MapLeaf value) {
    value.getClass();
  ensureLeavesIsMutable();
    leaves_.set(index, value);
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void addLeaves(google.trillian.proto.MapLeaf value) {
    value.getClass();
  ensureLeavesIsMutable();
    leaves_.add(value);
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void addLeaves(
      int index, google.trillian.proto.MapLeaf value) {
    value.getClass();
  ensureLeavesIsMutable();
    leaves_.add(index, value);
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void addAllLeaves(
      java.lang.Iterable<? extends google.trillian.proto.MapLeaf> values) {
    ensureLeavesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, leaves_);
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void clearLeaves() {
    leaves_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The leaves being set must have unique Index values within the request.
   * </pre>
   *
   * <code>repeated .trillian.MapLeaf leaves = 2;</code>
   */
  private void removeLeaves(int index) {
    ensureLeavesIsMutable();
    leaves_.remove(index);
  }

  public static final int METADATA_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString metadata_;
  /**
   * <pre>
   * Metadata that the Map should associate with the new Map root after
   * incorporating the leaf changes.  The metadata will be reflected in the
   * Map Root published for this revision.
   * Map personalities should use metadata to persist any state needed later
   * to continue mapping from an external data source.
   * </pre>
   *
   * <code>bytes metadata = 3;</code>
   * @return The metadata.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMetadata() {
    return metadata_;
  }
  /**
   * <pre>
   * Metadata that the Map should associate with the new Map root after
   * incorporating the leaf changes.  The metadata will be reflected in the
   * Map Root published for this revision.
   * Map personalities should use metadata to persist any state needed later
   * to continue mapping from an external data source.
   * </pre>
   *
   * <code>bytes metadata = 3;</code>
   * @param value The metadata to set.
   */
  private void setMetadata(com.google.protobuf.ByteString value) {
    value.getClass();
  
    metadata_ = value;
  }
  /**
   * <pre>
   * Metadata that the Map should associate with the new Map root after
   * incorporating the leaf changes.  The metadata will be reflected in the
   * Map Root published for this revision.
   * Map personalities should use metadata to persist any state needed later
   * to continue mapping from an external data source.
   * </pre>
   *
   * <code>bytes metadata = 3;</code>
   */
  private void clearMetadata() {
    
    metadata_ = getDefaultInstance().getMetadata();
  }

  public static final int EXPECT_REVISION_FIELD_NUMBER = 4;
  private long expectRevision_;
  /**
   * <pre>
   * The map revision to associate the leaves with. The request will fail if
   * this revision already exists, does not match the current write revision, or
   * is not positive. Note that revision = 0 is reserved for the empty tree.
   * </pre>
   *
   * <code>int64 expect_revision = 4;</code>
   * @return The expectRevision.
   */
  @java.lang.Override
  public long getExpectRevision() {
    return expectRevision_;
  }
  /**
   * <pre>
   * The map revision to associate the leaves with. The request will fail if
   * this revision already exists, does not match the current write revision, or
   * is not positive. Note that revision = 0 is reserved for the empty tree.
   * </pre>
   *
   * <code>int64 expect_revision = 4;</code>
   * @param value The expectRevision to set.
   */
  private void setExpectRevision(long value) {
    
    expectRevision_ = value;
  }
  /**
   * <pre>
   * The map revision to associate the leaves with. The request will fail if
   * this revision already exists, does not match the current write revision, or
   * is not positive. Note that revision = 0 is reserved for the empty tree.
   * </pre>
   *
   * <code>int64 expect_revision = 4;</code>
   */
  private void clearExpectRevision() {
    
    expectRevision_ = 0L;
  }

  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.WriteMapLeavesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.trillian.proto.WriteMapLeavesRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code trillian.WriteMapLeavesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.trillian.proto.WriteMapLeavesRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:trillian.WriteMapLeavesRequest)
      google.trillian.proto.WriteMapLeavesRequestOrBuilder {
    // Construct using google.trillian.proto.WriteMapLeavesRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>int64 map_id = 1;</code>
     * @return The mapId.
     */
    @java.lang.Override
    public long getMapId() {
      return instance.getMapId();
    }
    /**
     * <code>int64 map_id = 1;</code>
     * @param value The mapId to set.
     * @return This builder for chaining.
     */
    public Builder setMapId(long value) {
      copyOnWrite();
      instance.setMapId(value);
      return this;
    }
    /**
     * <code>int64 map_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMapId() {
      copyOnWrite();
      instance.clearMapId();
      return this;
    }

    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.trillian.proto.MapLeaf> getLeavesList() {
      return java.util.Collections.unmodifiableList(
          instance.getLeavesList());
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    @java.lang.Override
    public int getLeavesCount() {
      return instance.getLeavesCount();
    }/**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    @java.lang.Override
    public google.trillian.proto.MapLeaf getLeaves(int index) {
      return instance.getLeaves(index);
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder setLeaves(
        int index, google.trillian.proto.MapLeaf value) {
      copyOnWrite();
      instance.setLeaves(index, value);
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder setLeaves(
        int index, google.trillian.proto.MapLeaf.Builder builderForValue) {
      copyOnWrite();
      instance.setLeaves(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder addLeaves(google.trillian.proto.MapLeaf value) {
      copyOnWrite();
      instance.addLeaves(value);
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder addLeaves(
        int index, google.trillian.proto.MapLeaf value) {
      copyOnWrite();
      instance.addLeaves(index, value);
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder addLeaves(
        google.trillian.proto.MapLeaf.Builder builderForValue) {
      copyOnWrite();
      instance.addLeaves(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder addLeaves(
        int index, google.trillian.proto.MapLeaf.Builder builderForValue) {
      copyOnWrite();
      instance.addLeaves(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder addAllLeaves(
        java.lang.Iterable<? extends google.trillian.proto.MapLeaf> values) {
      copyOnWrite();
      instance.addAllLeaves(values);
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder clearLeaves() {
      copyOnWrite();
      instance.clearLeaves();
      return this;
    }
    /**
     * <pre>
     * The leaves being set must have unique Index values within the request.
     * </pre>
     *
     * <code>repeated .trillian.MapLeaf leaves = 2;</code>
     */
    public Builder removeLeaves(int index) {
      copyOnWrite();
      instance.removeLeaves(index);
      return this;
    }

    /**
     * <pre>
     * Metadata that the Map should associate with the new Map root after
     * incorporating the leaf changes.  The metadata will be reflected in the
     * Map Root published for this revision.
     * Map personalities should use metadata to persist any state needed later
     * to continue mapping from an external data source.
     * </pre>
     *
     * <code>bytes metadata = 3;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMetadata() {
      return instance.getMetadata();
    }
    /**
     * <pre>
     * Metadata that the Map should associate with the new Map root after
     * incorporating the leaf changes.  The metadata will be reflected in the
     * Map Root published for this revision.
     * Map personalities should use metadata to persist any state needed later
     * to continue mapping from an external data source.
     * </pre>
     *
     * <code>bytes metadata = 3;</code>
     * @param value The metadata to set.
     * @return This builder for chaining.
     */
    public Builder setMetadata(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMetadata(value);
      return this;
    }
    /**
     * <pre>
     * Metadata that the Map should associate with the new Map root after
     * incorporating the leaf changes.  The metadata will be reflected in the
     * Map Root published for this revision.
     * Map personalities should use metadata to persist any state needed later
     * to continue mapping from an external data source.
     * </pre>
     *
     * <code>bytes metadata = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMetadata() {
      copyOnWrite();
      instance.clearMetadata();
      return this;
    }

    /**
     * <pre>
     * The map revision to associate the leaves with. The request will fail if
     * this revision already exists, does not match the current write revision, or
     * is not positive. Note that revision = 0 is reserved for the empty tree.
     * </pre>
     *
     * <code>int64 expect_revision = 4;</code>
     * @return The expectRevision.
     */
    @java.lang.Override
    public long getExpectRevision() {
      return instance.getExpectRevision();
    }
    /**
     * <pre>
     * The map revision to associate the leaves with. The request will fail if
     * this revision already exists, does not match the current write revision, or
     * is not positive. Note that revision = 0 is reserved for the empty tree.
     * </pre>
     *
     * <code>int64 expect_revision = 4;</code>
     * @param value The expectRevision to set.
     * @return This builder for chaining.
     */
    public Builder setExpectRevision(long value) {
      copyOnWrite();
      instance.setExpectRevision(value);
      return this;
    }
    /**
     * <pre>
     * The map revision to associate the leaves with. The request will fail if
     * this revision already exists, does not match the current write revision, or
     * is not positive. Note that revision = 0 is reserved for the empty tree.
     * </pre>
     *
     * <code>int64 expect_revision = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearExpectRevision() {
      copyOnWrite();
      instance.clearExpectRevision();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:trillian.WriteMapLeavesRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.trillian.proto.WriteMapLeavesRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "mapId_",
            "leaves_",
            google.trillian.proto.MapLeaf.class,
            "metadata_",
            "expectRevision_",
          };
          java.lang.String info =
              "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\u0002\u0002\u001b" +
              "\u0003\n\u0004\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.trillian.proto.WriteMapLeavesRequest> parser = PARSER;
        if (parser == null) {
          synchronized (google.trillian.proto.WriteMapLeavesRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.trillian.proto.WriteMapLeavesRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:trillian.WriteMapLeavesRequest)
  private static final google.trillian.proto.WriteMapLeavesRequest DEFAULT_INSTANCE;
  static {
    WriteMapLeavesRequest defaultInstance = new WriteMapLeavesRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      WriteMapLeavesRequest.class, defaultInstance);
  }

  public static google.trillian.proto.WriteMapLeavesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WriteMapLeavesRequest> PARSER;

  public static com.google.protobuf.Parser<WriteMapLeavesRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

