// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian_map_api.proto

package google.trillian.proto;

/**
 * Protobuf type {@code trillian.MapLeafInclusion}
 */
public  final class MapLeafInclusion extends
    com.google.protobuf.GeneratedMessageLite<
        MapLeafInclusion, MapLeafInclusion.Builder> implements
    // @@protoc_insertion_point(message_implements:trillian.MapLeafInclusion)
    MapLeafInclusionOrBuilder {
  private MapLeafInclusion() {
    inclusion_ = emptyProtobufList();
  }
  public static final int LEAF_FIELD_NUMBER = 1;
  private google.trillian.proto.MapLeaf leaf_;
  /**
   * <code>.trillian.MapLeaf leaf = 1;</code>
   */
  @java.lang.Override
  public boolean hasLeaf() {
    return leaf_ != null;
  }
  /**
   * <code>.trillian.MapLeaf leaf = 1;</code>
   */
  @java.lang.Override
  public google.trillian.proto.MapLeaf getLeaf() {
    return leaf_ == null ? google.trillian.proto.MapLeaf.getDefaultInstance() : leaf_;
  }
  /**
   * <code>.trillian.MapLeaf leaf = 1;</code>
   */
  private void setLeaf(google.trillian.proto.MapLeaf value) {
    value.getClass();
  leaf_ = value;
    
    }
  /**
   * <code>.trillian.MapLeaf leaf = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLeaf(google.trillian.proto.MapLeaf value) {
    value.getClass();
  if (leaf_ != null &&
        leaf_ != google.trillian.proto.MapLeaf.getDefaultInstance()) {
      leaf_ =
        google.trillian.proto.MapLeaf.newBuilder(leaf_).mergeFrom(value).buildPartial();
    } else {
      leaf_ = value;
    }
    
  }
  /**
   * <code>.trillian.MapLeaf leaf = 1;</code>
   */
  private void clearLeaf() {  leaf_ = null;
    
  }

  public static final int INCLUSION_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> inclusion_;
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @return A list containing the inclusion.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getInclusionList() {
    return inclusion_;
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @return The count of inclusion.
   */
  @java.lang.Override
  public int getInclusionCount() {
    return inclusion_.size();
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @param index The index of the element to return.
   * @return The inclusion at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getInclusion(int index) {
    return inclusion_.get(index);
  }
  private void ensureInclusionIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = inclusion_;
    if (!tmp.isModifiable()) {
      inclusion_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @param index The index to set the value at.
   * @param value The inclusion to set.
   */
  private void setInclusion(
      int index, com.google.protobuf.ByteString value) {
    value.getClass();
  ensureInclusionIsMutable();
    inclusion_.set(index, value);
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @param value The inclusion to add.
   */
  private void addInclusion(com.google.protobuf.ByteString value) {
    value.getClass();
  ensureInclusionIsMutable();
    inclusion_.add(value);
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   * @param values The inclusion to add.
   */
  private void addAllInclusion(
      java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
    ensureInclusionIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, inclusion_);
  }
  /**
   * <pre>
   * inclusion holds the inclusion proof for this leaf in the map root. It
   * holds one entry for each level of the tree; combining each of these in
   * turn with the leaf's hash (according to the tree's hash strategy)
   * reproduces the root hash.  A nil entry for a particular level indicates
   * that the node in question has an empty subtree beneath it (and so its
   * associated hash value is hasher.HashEmpty(index, height) rather than
   * hasher.HashChildren(l_hash, r_hash)).
   * </pre>
   *
   * <code>repeated bytes inclusion = 2;</code>
   */
  private void clearInclusion() {
    inclusion_ = emptyProtobufList();
  }

  public static google.trillian.proto.MapLeafInclusion parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.trillian.proto.MapLeafInclusion parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.MapLeafInclusion parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.trillian.proto.MapLeafInclusion parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.trillian.proto.MapLeafInclusion prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code trillian.MapLeafInclusion}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.trillian.proto.MapLeafInclusion, Builder> implements
      // @@protoc_insertion_point(builder_implements:trillian.MapLeafInclusion)
      google.trillian.proto.MapLeafInclusionOrBuilder {
    // Construct using google.trillian.proto.MapLeafInclusion.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    @java.lang.Override
    public boolean hasLeaf() {
      return instance.hasLeaf();
    }
    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    @java.lang.Override
    public google.trillian.proto.MapLeaf getLeaf() {
      return instance.getLeaf();
    }
    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    public Builder setLeaf(google.trillian.proto.MapLeaf value) {
      copyOnWrite();
      instance.setLeaf(value);
      return this;
      }
    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    public Builder setLeaf(
        google.trillian.proto.MapLeaf.Builder builderForValue) {
      copyOnWrite();
      instance.setLeaf(builderForValue.build());
      return this;
    }
    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    public Builder mergeLeaf(google.trillian.proto.MapLeaf value) {
      copyOnWrite();
      instance.mergeLeaf(value);
      return this;
    }
    /**
     * <code>.trillian.MapLeaf leaf = 1;</code>
     */
    public Builder clearLeaf() {  copyOnWrite();
      instance.clearLeaf();
      return this;
    }

    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @return A list containing the inclusion.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getInclusionList() {
      return java.util.Collections.unmodifiableList(
          instance.getInclusionList());
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @return The count of inclusion.
     */
    @java.lang.Override
    public int getInclusionCount() {
      return instance.getInclusionCount();
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @param index The index of the element to return.
     * @return The inclusion at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getInclusion(int index) {
      return instance.getInclusion(index);
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @param value The inclusion to set.
     * @return This builder for chaining.
     */
    public Builder setInclusion(
        int index, com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setInclusion(index, value);
      return this;
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @param value The inclusion to add.
     * @return This builder for chaining.
     */
    public Builder addInclusion(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addInclusion(value);
      return this;
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @param values The inclusion to add.
     * @return This builder for chaining.
     */
    public Builder addAllInclusion(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      copyOnWrite();
      instance.addAllInclusion(values);
      return this;
    }
    /**
     * <pre>
     * inclusion holds the inclusion proof for this leaf in the map root. It
     * holds one entry for each level of the tree; combining each of these in
     * turn with the leaf's hash (according to the tree's hash strategy)
     * reproduces the root hash.  A nil entry for a particular level indicates
     * that the node in question has an empty subtree beneath it (and so its
     * associated hash value is hasher.HashEmpty(index, height) rather than
     * hasher.HashChildren(l_hash, r_hash)).
     * </pre>
     *
     * <code>repeated bytes inclusion = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInclusion() {
      copyOnWrite();
      instance.clearInclusion();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:trillian.MapLeafInclusion)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.trillian.proto.MapLeafInclusion();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "leaf_",
            "inclusion_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\t\u0002\u001c" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.trillian.proto.MapLeafInclusion> parser = PARSER;
        if (parser == null) {
          synchronized (google.trillian.proto.MapLeafInclusion.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.trillian.proto.MapLeafInclusion>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:trillian.MapLeafInclusion)
  private static final google.trillian.proto.MapLeafInclusion DEFAULT_INSTANCE;
  static {
    MapLeafInclusion defaultInstance = new MapLeafInclusion();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MapLeafInclusion.class, defaultInstance);
  }

  public static google.trillian.proto.MapLeafInclusion getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MapLeafInclusion> PARSER;

  public static com.google.protobuf.Parser<MapLeafInclusion> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

