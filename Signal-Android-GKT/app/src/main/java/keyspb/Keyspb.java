// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: crypto/keyspb/keyspb.proto

package keyspb;

public final class Keyspb {
  private Keyspb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SpecificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:keyspb.Specification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    boolean hasEcdsaParams();
    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    keyspb.Keyspb.Specification.ECDSA getEcdsaParams();
    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    keyspb.Keyspb.Specification.ECDSAOrBuilder getEcdsaParamsOrBuilder();

    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    boolean hasRsaParams();
    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    keyspb.Keyspb.Specification.RSA getRsaParams();
    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    keyspb.Keyspb.Specification.RSAOrBuilder getRsaParamsOrBuilder();

    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    boolean hasEd25519Params();
    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    keyspb.Keyspb.Specification.Ed25519 getEd25519Params();
    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    keyspb.Keyspb.Specification.Ed25519OrBuilder getEd25519ParamsOrBuilder();

    public keyspb.Keyspb.Specification.ParamsCase getParamsCase();
  }
  /**
   * <pre>
   * Specification for a private key.
   * </pre>
   *
   * Protobuf type {@code keyspb.Specification}
   */
  public  static final class Specification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:keyspb.Specification)
      SpecificationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Specification.newBuilder() to construct.
    private Specification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Specification() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Specification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              keyspb.Keyspb.Specification.ECDSA.Builder subBuilder = null;
              if (paramsCase_ == 1) {
                subBuilder = ((keyspb.Keyspb.Specification.ECDSA) params_).toBuilder();
              }
              params_ =
                  input.readMessage(keyspb.Keyspb.Specification.ECDSA.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((keyspb.Keyspb.Specification.ECDSA) params_);
                params_ = subBuilder.buildPartial();
              }
              paramsCase_ = 1;
              break;
            }
            case 18: {
              keyspb.Keyspb.Specification.RSA.Builder subBuilder = null;
              if (paramsCase_ == 2) {
                subBuilder = ((keyspb.Keyspb.Specification.RSA) params_).toBuilder();
              }
              params_ =
                  input.readMessage(keyspb.Keyspb.Specification.RSA.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((keyspb.Keyspb.Specification.RSA) params_);
                params_ = subBuilder.buildPartial();
              }
              paramsCase_ = 2;
              break;
            }
            case 26: {
              keyspb.Keyspb.Specification.Ed25519.Builder subBuilder = null;
              if (paramsCase_ == 3) {
                subBuilder = ((keyspb.Keyspb.Specification.Ed25519) params_).toBuilder();
              }
              params_ =
                  input.readMessage(keyspb.Keyspb.Specification.Ed25519.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((keyspb.Keyspb.Specification.Ed25519) params_);
                params_ = subBuilder.buildPartial();
              }
              paramsCase_ = 3;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return keyspb.Keyspb.internal_static_keyspb_Specification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return keyspb.Keyspb.internal_static_keyspb_Specification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              keyspb.Keyspb.Specification.class, keyspb.Keyspb.Specification.Builder.class);
    }

    public interface ECDSAOrBuilder extends
        // @@protoc_insertion_point(interface_extends:keyspb.Specification.ECDSA)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The elliptic curve to use.
       * Optional. If not set, the default curve will be used.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
       */
      int getCurveValue();
      /**
       * <pre>
       * The elliptic curve to use.
       * Optional. If not set, the default curve will be used.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
       */
      keyspb.Keyspb.Specification.ECDSA.Curve getCurve();
    }
    /**
     * <pre>
     *&#47; ECDSA defines parameters for an ECDSA key.
     * </pre>
     *
     * Protobuf type {@code keyspb.Specification.ECDSA}
     */
    public  static final class ECDSA extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:keyspb.Specification.ECDSA)
        ECDSAOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ECDSA.newBuilder() to construct.
      private ECDSA(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ECDSA() {
        curve_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ECDSA(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                curve_ = rawValue;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_ECDSA_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_ECDSA_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.Specification.ECDSA.class, keyspb.Keyspb.Specification.ECDSA.Builder.class);
      }

      /**
       * <pre>
       * The supported elliptic curves.
       * </pre>
       *
       * Protobuf enum {@code keyspb.Specification.ECDSA.Curve}
       */
      public enum Curve
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * Curve will be chosen by Trillian.
         * </pre>
         *
         * <code>DEFAULT_CURVE = 0;</code>
         */
        DEFAULT_CURVE(0),
        /**
         * <code>P256 = 1;</code>
         */
        P256(1),
        /**
         * <code>P384 = 2;</code>
         */
        P384(2),
        /**
         * <code>P521 = 3;</code>
         */
        P521(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         * Curve will be chosen by Trillian.
         * </pre>
         *
         * <code>DEFAULT_CURVE = 0;</code>
         */
        public static final int DEFAULT_CURVE_VALUE = 0;
        /**
         * <code>P256 = 1;</code>
         */
        public static final int P256_VALUE = 1;
        /**
         * <code>P384 = 2;</code>
         */
        public static final int P384_VALUE = 2;
        /**
         * <code>P521 = 3;</code>
         */
        public static final int P521_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Curve valueOf(int value) {
          return forNumber(value);
        }

        public static Curve forNumber(int value) {
          switch (value) {
            case 0: return DEFAULT_CURVE;
            case 1: return P256;
            case 2: return P384;
            case 3: return P521;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Curve>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Curve> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Curve>() {
                public Curve findValueByNumber(int number) {
                  return Curve.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return keyspb.Keyspb.Specification.ECDSA.getDescriptor().getEnumTypes().get(0);
        }

        private static final Curve[] VALUES = values();

        public static Curve valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Curve(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:keyspb.Specification.ECDSA.Curve)
      }

      public static final int CURVE_FIELD_NUMBER = 1;
      private int curve_;
      /**
       * <pre>
       * The elliptic curve to use.
       * Optional. If not set, the default curve will be used.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
       */
      public int getCurveValue() {
        return curve_;
      }
      /**
       * <pre>
       * The elliptic curve to use.
       * Optional. If not set, the default curve will be used.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
       */
      public keyspb.Keyspb.Specification.ECDSA.Curve getCurve() {
        keyspb.Keyspb.Specification.ECDSA.Curve result = keyspb.Keyspb.Specification.ECDSA.Curve.valueOf(curve_);
        return result == null ? keyspb.Keyspb.Specification.ECDSA.Curve.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (curve_ != keyspb.Keyspb.Specification.ECDSA.Curve.DEFAULT_CURVE.getNumber()) {
          output.writeEnum(1, curve_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (curve_ != keyspb.Keyspb.Specification.ECDSA.Curve.DEFAULT_CURVE.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, curve_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof keyspb.Keyspb.Specification.ECDSA)) {
          return super.equals(obj);
        }
        keyspb.Keyspb.Specification.ECDSA other = (keyspb.Keyspb.Specification.ECDSA) obj;

        boolean result = true;
        result = result && curve_ == other.curve_;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CURVE_FIELD_NUMBER;
        hash = (53 * hash) + curve_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.ECDSA parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(keyspb.Keyspb.Specification.ECDSA prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *&#47; ECDSA defines parameters for an ECDSA key.
       * </pre>
       *
       * Protobuf type {@code keyspb.Specification.ECDSA}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:keyspb.Specification.ECDSA)
          keyspb.Keyspb.Specification.ECDSAOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_ECDSA_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_ECDSA_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  keyspb.Keyspb.Specification.ECDSA.class, keyspb.Keyspb.Specification.ECDSA.Builder.class);
        }

        // Construct using keyspb.Keyspb.Specification.ECDSA.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          curve_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_ECDSA_descriptor;
        }

        public keyspb.Keyspb.Specification.ECDSA getDefaultInstanceForType() {
          return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
        }

        public keyspb.Keyspb.Specification.ECDSA build() {
          keyspb.Keyspb.Specification.ECDSA result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public keyspb.Keyspb.Specification.ECDSA buildPartial() {
          keyspb.Keyspb.Specification.ECDSA result = new keyspb.Keyspb.Specification.ECDSA(this);
          result.curve_ = curve_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof keyspb.Keyspb.Specification.ECDSA) {
            return mergeFrom((keyspb.Keyspb.Specification.ECDSA)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(keyspb.Keyspb.Specification.ECDSA other) {
          if (other == keyspb.Keyspb.Specification.ECDSA.getDefaultInstance()) return this;
          if (other.curve_ != 0) {
            setCurveValue(other.getCurveValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          keyspb.Keyspb.Specification.ECDSA parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (keyspb.Keyspb.Specification.ECDSA) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int curve_ = 0;
        /**
         * <pre>
         * The elliptic curve to use.
         * Optional. If not set, the default curve will be used.
         * </pre>
         *
         * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
         */
        public int getCurveValue() {
          return curve_;
        }
        /**
         * <pre>
         * The elliptic curve to use.
         * Optional. If not set, the default curve will be used.
         * </pre>
         *
         * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
         */
        public Builder setCurveValue(int value) {
          curve_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The elliptic curve to use.
         * Optional. If not set, the default curve will be used.
         * </pre>
         *
         * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
         */
        public keyspb.Keyspb.Specification.ECDSA.Curve getCurve() {
          keyspb.Keyspb.Specification.ECDSA.Curve result = keyspb.Keyspb.Specification.ECDSA.Curve.valueOf(curve_);
          return result == null ? keyspb.Keyspb.Specification.ECDSA.Curve.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * The elliptic curve to use.
         * Optional. If not set, the default curve will be used.
         * </pre>
         *
         * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
         */
        public Builder setCurve(keyspb.Keyspb.Specification.ECDSA.Curve value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          curve_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The elliptic curve to use.
         * Optional. If not set, the default curve will be used.
         * </pre>
         *
         * <code>.keyspb.Specification.ECDSA.Curve curve = 1;</code>
         */
        public Builder clearCurve() {
          
          curve_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:keyspb.Specification.ECDSA)
      }

      // @@protoc_insertion_point(class_scope:keyspb.Specification.ECDSA)
      private static final keyspb.Keyspb.Specification.ECDSA DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new keyspb.Keyspb.Specification.ECDSA();
      }

      public static keyspb.Keyspb.Specification.ECDSA getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ECDSA>
          PARSER = new com.google.protobuf.AbstractParser<ECDSA>() {
        public ECDSA parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ECDSA(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ECDSA> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ECDSA> getParserForType() {
        return PARSER;
      }

      public keyspb.Keyspb.Specification.ECDSA getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RSAOrBuilder extends
        // @@protoc_insertion_point(interface_extends:keyspb.Specification.RSA)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Size of the keys in bits. Must be sufficiently large to allow two primes
       * to be generated.
       * Optional. If not set, the key size will be chosen by Trillian.
       * </pre>
       *
       * <code>int32 bits = 1;</code>
       */
      int getBits();
    }
    /**
     * <pre>
     * RSA defines parameters for an RSA key.
     * </pre>
     *
     * Protobuf type {@code keyspb.Specification.RSA}
     */
    public  static final class RSA extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:keyspb.Specification.RSA)
        RSAOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RSA.newBuilder() to construct.
      private RSA(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RSA() {
        bits_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RSA(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                bits_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_RSA_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_RSA_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.Specification.RSA.class, keyspb.Keyspb.Specification.RSA.Builder.class);
      }

      public static final int BITS_FIELD_NUMBER = 1;
      private int bits_;
      /**
       * <pre>
       * Size of the keys in bits. Must be sufficiently large to allow two primes
       * to be generated.
       * Optional. If not set, the key size will be chosen by Trillian.
       * </pre>
       *
       * <code>int32 bits = 1;</code>
       */
      public int getBits() {
        return bits_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (bits_ != 0) {
          output.writeInt32(1, bits_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (bits_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, bits_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof keyspb.Keyspb.Specification.RSA)) {
          return super.equals(obj);
        }
        keyspb.Keyspb.Specification.RSA other = (keyspb.Keyspb.Specification.RSA) obj;

        boolean result = true;
        result = result && (getBits()
            == other.getBits());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + BITS_FIELD_NUMBER;
        hash = (53 * hash) + getBits();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static keyspb.Keyspb.Specification.RSA parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.RSA parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.RSA parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.RSA parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(keyspb.Keyspb.Specification.RSA prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * RSA defines parameters for an RSA key.
       * </pre>
       *
       * Protobuf type {@code keyspb.Specification.RSA}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:keyspb.Specification.RSA)
          keyspb.Keyspb.Specification.RSAOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_RSA_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_RSA_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  keyspb.Keyspb.Specification.RSA.class, keyspb.Keyspb.Specification.RSA.Builder.class);
        }

        // Construct using keyspb.Keyspb.Specification.RSA.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          bits_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_RSA_descriptor;
        }

        public keyspb.Keyspb.Specification.RSA getDefaultInstanceForType() {
          return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
        }

        public keyspb.Keyspb.Specification.RSA build() {
          keyspb.Keyspb.Specification.RSA result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public keyspb.Keyspb.Specification.RSA buildPartial() {
          keyspb.Keyspb.Specification.RSA result = new keyspb.Keyspb.Specification.RSA(this);
          result.bits_ = bits_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof keyspb.Keyspb.Specification.RSA) {
            return mergeFrom((keyspb.Keyspb.Specification.RSA)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(keyspb.Keyspb.Specification.RSA other) {
          if (other == keyspb.Keyspb.Specification.RSA.getDefaultInstance()) return this;
          if (other.getBits() != 0) {
            setBits(other.getBits());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          keyspb.Keyspb.Specification.RSA parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (keyspb.Keyspb.Specification.RSA) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int bits_ ;
        /**
         * <pre>
         * Size of the keys in bits. Must be sufficiently large to allow two primes
         * to be generated.
         * Optional. If not set, the key size will be chosen by Trillian.
         * </pre>
         *
         * <code>int32 bits = 1;</code>
         */
        public int getBits() {
          return bits_;
        }
        /**
         * <pre>
         * Size of the keys in bits. Must be sufficiently large to allow two primes
         * to be generated.
         * Optional. If not set, the key size will be chosen by Trillian.
         * </pre>
         *
         * <code>int32 bits = 1;</code>
         */
        public Builder setBits(int value) {
          
          bits_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Size of the keys in bits. Must be sufficiently large to allow two primes
         * to be generated.
         * Optional. If not set, the key size will be chosen by Trillian.
         * </pre>
         *
         * <code>int32 bits = 1;</code>
         */
        public Builder clearBits() {
          
          bits_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:keyspb.Specification.RSA)
      }

      // @@protoc_insertion_point(class_scope:keyspb.Specification.RSA)
      private static final keyspb.Keyspb.Specification.RSA DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new keyspb.Keyspb.Specification.RSA();
      }

      public static keyspb.Keyspb.Specification.RSA getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RSA>
          PARSER = new com.google.protobuf.AbstractParser<RSA>() {
        public RSA parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RSA(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RSA> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RSA> getParserForType() {
        return PARSER;
      }

      public keyspb.Keyspb.Specification.RSA getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface Ed25519OrBuilder extends
        // @@protoc_insertion_point(interface_extends:keyspb.Specification.Ed25519)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Ed25519 defines (empty) parameters for an Ed25519 private key.
     * </pre>
     *
     * Protobuf type {@code keyspb.Specification.Ed25519}
     */
    public  static final class Ed25519 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:keyspb.Specification.Ed25519)
        Ed25519OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Ed25519.newBuilder() to construct.
      private Ed25519(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Ed25519() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Ed25519(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_Ed25519_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_Ed25519_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.Specification.Ed25519.class, keyspb.Keyspb.Specification.Ed25519.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof keyspb.Keyspb.Specification.Ed25519)) {
          return super.equals(obj);
        }
        keyspb.Keyspb.Specification.Ed25519 other = (keyspb.Keyspb.Specification.Ed25519) obj;

        boolean result = true;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static keyspb.Keyspb.Specification.Ed25519 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(keyspb.Keyspb.Specification.Ed25519 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ed25519 defines (empty) parameters for an Ed25519 private key.
       * </pre>
       *
       * Protobuf type {@code keyspb.Specification.Ed25519}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:keyspb.Specification.Ed25519)
          keyspb.Keyspb.Specification.Ed25519OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_Ed25519_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_Ed25519_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  keyspb.Keyspb.Specification.Ed25519.class, keyspb.Keyspb.Specification.Ed25519.Builder.class);
        }

        // Construct using keyspb.Keyspb.Specification.Ed25519.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return keyspb.Keyspb.internal_static_keyspb_Specification_Ed25519_descriptor;
        }

        public keyspb.Keyspb.Specification.Ed25519 getDefaultInstanceForType() {
          return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
        }

        public keyspb.Keyspb.Specification.Ed25519 build() {
          keyspb.Keyspb.Specification.Ed25519 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public keyspb.Keyspb.Specification.Ed25519 buildPartial() {
          keyspb.Keyspb.Specification.Ed25519 result = new keyspb.Keyspb.Specification.Ed25519(this);
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof keyspb.Keyspb.Specification.Ed25519) {
            return mergeFrom((keyspb.Keyspb.Specification.Ed25519)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(keyspb.Keyspb.Specification.Ed25519 other) {
          if (other == keyspb.Keyspb.Specification.Ed25519.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          keyspb.Keyspb.Specification.Ed25519 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (keyspb.Keyspb.Specification.Ed25519) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:keyspb.Specification.Ed25519)
      }

      // @@protoc_insertion_point(class_scope:keyspb.Specification.Ed25519)
      private static final keyspb.Keyspb.Specification.Ed25519 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new keyspb.Keyspb.Specification.Ed25519();
      }

      public static keyspb.Keyspb.Specification.Ed25519 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Ed25519>
          PARSER = new com.google.protobuf.AbstractParser<Ed25519>() {
        public Ed25519 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ed25519(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Ed25519> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Ed25519> getParserForType() {
        return PARSER;
      }

      public keyspb.Keyspb.Specification.Ed25519 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int paramsCase_ = 0;
    private java.lang.Object params_;
    public enum ParamsCase
        implements com.google.protobuf.Internal.EnumLite {
      ECDSA_PARAMS(1),
      RSA_PARAMS(2),
      ED25519_PARAMS(3),
      PARAMS_NOT_SET(0);
      private final int value;
      private ParamsCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ParamsCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParamsCase forNumber(int value) {
        switch (value) {
          case 1: return ECDSA_PARAMS;
          case 2: return RSA_PARAMS;
          case 3: return ED25519_PARAMS;
          case 0: return PARAMS_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParamsCase
    getParamsCase() {
      return ParamsCase.forNumber(
          paramsCase_);
    }

    public static final int ECDSA_PARAMS_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    public boolean hasEcdsaParams() {
      return paramsCase_ == 1;
    }
    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    public keyspb.Keyspb.Specification.ECDSA getEcdsaParams() {
      if (paramsCase_ == 1) {
         return (keyspb.Keyspb.Specification.ECDSA) params_;
      }
      return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
    }
    /**
     * <pre>
     * The parameters for an ECDSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
     */
    public keyspb.Keyspb.Specification.ECDSAOrBuilder getEcdsaParamsOrBuilder() {
      if (paramsCase_ == 1) {
         return (keyspb.Keyspb.Specification.ECDSA) params_;
      }
      return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
    }

    public static final int RSA_PARAMS_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    public boolean hasRsaParams() {
      return paramsCase_ == 2;
    }
    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    public keyspb.Keyspb.Specification.RSA getRsaParams() {
      if (paramsCase_ == 2) {
         return (keyspb.Keyspb.Specification.RSA) params_;
      }
      return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
    }
    /**
     * <pre>
     * The parameters for an RSA key.
     * </pre>
     *
     * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
     */
    public keyspb.Keyspb.Specification.RSAOrBuilder getRsaParamsOrBuilder() {
      if (paramsCase_ == 2) {
         return (keyspb.Keyspb.Specification.RSA) params_;
      }
      return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
    }

    public static final int ED25519_PARAMS_FIELD_NUMBER = 3;
    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    public boolean hasEd25519Params() {
      return paramsCase_ == 3;
    }
    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    public keyspb.Keyspb.Specification.Ed25519 getEd25519Params() {
      if (paramsCase_ == 3) {
         return (keyspb.Keyspb.Specification.Ed25519) params_;
      }
      return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
    }
    /**
     * <pre>
     * The parameters for an Ed25519 key.
     * </pre>
     *
     * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
     */
    public keyspb.Keyspb.Specification.Ed25519OrBuilder getEd25519ParamsOrBuilder() {
      if (paramsCase_ == 3) {
         return (keyspb.Keyspb.Specification.Ed25519) params_;
      }
      return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (paramsCase_ == 1) {
        output.writeMessage(1, (keyspb.Keyspb.Specification.ECDSA) params_);
      }
      if (paramsCase_ == 2) {
        output.writeMessage(2, (keyspb.Keyspb.Specification.RSA) params_);
      }
      if (paramsCase_ == 3) {
        output.writeMessage(3, (keyspb.Keyspb.Specification.Ed25519) params_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (paramsCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (keyspb.Keyspb.Specification.ECDSA) params_);
      }
      if (paramsCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (keyspb.Keyspb.Specification.RSA) params_);
      }
      if (paramsCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (keyspb.Keyspb.Specification.Ed25519) params_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof keyspb.Keyspb.Specification)) {
        return super.equals(obj);
      }
      keyspb.Keyspb.Specification other = (keyspb.Keyspb.Specification) obj;

      boolean result = true;
      result = result && getParamsCase().equals(
          other.getParamsCase());
      if (!result) return false;
      switch (paramsCase_) {
        case 1:
          result = result && getEcdsaParams()
              .equals(other.getEcdsaParams());
          break;
        case 2:
          result = result && getRsaParams()
              .equals(other.getRsaParams());
          break;
        case 3:
          result = result && getEd25519Params()
              .equals(other.getEd25519Params());
          break;
        case 0:
        default:
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (paramsCase_) {
        case 1:
          hash = (37 * hash) + ECDSA_PARAMS_FIELD_NUMBER;
          hash = (53 * hash) + getEcdsaParams().hashCode();
          break;
        case 2:
          hash = (37 * hash) + RSA_PARAMS_FIELD_NUMBER;
          hash = (53 * hash) + getRsaParams().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ED25519_PARAMS_FIELD_NUMBER;
          hash = (53 * hash) + getEd25519Params().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static keyspb.Keyspb.Specification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.Specification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.Specification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.Specification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.Specification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.Specification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(keyspb.Keyspb.Specification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specification for a private key.
     * </pre>
     *
     * Protobuf type {@code keyspb.Specification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:keyspb.Specification)
        keyspb.Keyspb.SpecificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.Specification.class, keyspb.Keyspb.Specification.Builder.class);
      }

      // Construct using keyspb.Keyspb.Specification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        paramsCase_ = 0;
        params_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return keyspb.Keyspb.internal_static_keyspb_Specification_descriptor;
      }

      public keyspb.Keyspb.Specification getDefaultInstanceForType() {
        return keyspb.Keyspb.Specification.getDefaultInstance();
      }

      public keyspb.Keyspb.Specification build() {
        keyspb.Keyspb.Specification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public keyspb.Keyspb.Specification buildPartial() {
        keyspb.Keyspb.Specification result = new keyspb.Keyspb.Specification(this);
        if (paramsCase_ == 1) {
          if (ecdsaParamsBuilder_ == null) {
            result.params_ = params_;
          } else {
            result.params_ = ecdsaParamsBuilder_.build();
          }
        }
        if (paramsCase_ == 2) {
          if (rsaParamsBuilder_ == null) {
            result.params_ = params_;
          } else {
            result.params_ = rsaParamsBuilder_.build();
          }
        }
        if (paramsCase_ == 3) {
          if (ed25519ParamsBuilder_ == null) {
            result.params_ = params_;
          } else {
            result.params_ = ed25519ParamsBuilder_.build();
          }
        }
        result.paramsCase_ = paramsCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof keyspb.Keyspb.Specification) {
          return mergeFrom((keyspb.Keyspb.Specification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(keyspb.Keyspb.Specification other) {
        if (other == keyspb.Keyspb.Specification.getDefaultInstance()) return this;
        switch (other.getParamsCase()) {
          case ECDSA_PARAMS: {
            mergeEcdsaParams(other.getEcdsaParams());
            break;
          }
          case RSA_PARAMS: {
            mergeRsaParams(other.getRsaParams());
            break;
          }
          case ED25519_PARAMS: {
            mergeEd25519Params(other.getEd25519Params());
            break;
          }
          case PARAMS_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        keyspb.Keyspb.Specification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (keyspb.Keyspb.Specification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int paramsCase_ = 0;
      private java.lang.Object params_;
      public ParamsCase
          getParamsCase() {
        return ParamsCase.forNumber(
            paramsCase_);
      }

      public Builder clearParams() {
        paramsCase_ = 0;
        params_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.ECDSA, keyspb.Keyspb.Specification.ECDSA.Builder, keyspb.Keyspb.Specification.ECDSAOrBuilder> ecdsaParamsBuilder_;
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public boolean hasEcdsaParams() {
        return paramsCase_ == 1;
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public keyspb.Keyspb.Specification.ECDSA getEcdsaParams() {
        if (ecdsaParamsBuilder_ == null) {
          if (paramsCase_ == 1) {
            return (keyspb.Keyspb.Specification.ECDSA) params_;
          }
          return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
        } else {
          if (paramsCase_ == 1) {
            return ecdsaParamsBuilder_.getMessage();
          }
          return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public Builder setEcdsaParams(keyspb.Keyspb.Specification.ECDSA value) {
        if (ecdsaParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          ecdsaParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public Builder setEcdsaParams(
          keyspb.Keyspb.Specification.ECDSA.Builder builderForValue) {
        if (ecdsaParamsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          ecdsaParamsBuilder_.setMessage(builderForValue.build());
        }
        paramsCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public Builder mergeEcdsaParams(keyspb.Keyspb.Specification.ECDSA value) {
        if (ecdsaParamsBuilder_ == null) {
          if (paramsCase_ == 1 &&
              params_ != keyspb.Keyspb.Specification.ECDSA.getDefaultInstance()) {
            params_ = keyspb.Keyspb.Specification.ECDSA.newBuilder((keyspb.Keyspb.Specification.ECDSA) params_)
                .mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          if (paramsCase_ == 1) {
            ecdsaParamsBuilder_.mergeFrom(value);
          }
          ecdsaParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public Builder clearEcdsaParams() {
        if (ecdsaParamsBuilder_ == null) {
          if (paramsCase_ == 1) {
            paramsCase_ = 0;
            params_ = null;
            onChanged();
          }
        } else {
          if (paramsCase_ == 1) {
            paramsCase_ = 0;
            params_ = null;
          }
          ecdsaParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public keyspb.Keyspb.Specification.ECDSA.Builder getEcdsaParamsBuilder() {
        return getEcdsaParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      public keyspb.Keyspb.Specification.ECDSAOrBuilder getEcdsaParamsOrBuilder() {
        if ((paramsCase_ == 1) && (ecdsaParamsBuilder_ != null)) {
          return ecdsaParamsBuilder_.getMessageOrBuilder();
        } else {
          if (paramsCase_ == 1) {
            return (keyspb.Keyspb.Specification.ECDSA) params_;
          }
          return keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an ECDSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.ECDSA ecdsa_params = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.ECDSA, keyspb.Keyspb.Specification.ECDSA.Builder, keyspb.Keyspb.Specification.ECDSAOrBuilder> 
          getEcdsaParamsFieldBuilder() {
        if (ecdsaParamsBuilder_ == null) {
          if (!(paramsCase_ == 1)) {
            params_ = keyspb.Keyspb.Specification.ECDSA.getDefaultInstance();
          }
          ecdsaParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              keyspb.Keyspb.Specification.ECDSA, keyspb.Keyspb.Specification.ECDSA.Builder, keyspb.Keyspb.Specification.ECDSAOrBuilder>(
                  (keyspb.Keyspb.Specification.ECDSA) params_,
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        paramsCase_ = 1;
        onChanged();;
        return ecdsaParamsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.RSA, keyspb.Keyspb.Specification.RSA.Builder, keyspb.Keyspb.Specification.RSAOrBuilder> rsaParamsBuilder_;
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public boolean hasRsaParams() {
        return paramsCase_ == 2;
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public keyspb.Keyspb.Specification.RSA getRsaParams() {
        if (rsaParamsBuilder_ == null) {
          if (paramsCase_ == 2) {
            return (keyspb.Keyspb.Specification.RSA) params_;
          }
          return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
        } else {
          if (paramsCase_ == 2) {
            return rsaParamsBuilder_.getMessage();
          }
          return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public Builder setRsaParams(keyspb.Keyspb.Specification.RSA value) {
        if (rsaParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          rsaParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public Builder setRsaParams(
          keyspb.Keyspb.Specification.RSA.Builder builderForValue) {
        if (rsaParamsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          rsaParamsBuilder_.setMessage(builderForValue.build());
        }
        paramsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public Builder mergeRsaParams(keyspb.Keyspb.Specification.RSA value) {
        if (rsaParamsBuilder_ == null) {
          if (paramsCase_ == 2 &&
              params_ != keyspb.Keyspb.Specification.RSA.getDefaultInstance()) {
            params_ = keyspb.Keyspb.Specification.RSA.newBuilder((keyspb.Keyspb.Specification.RSA) params_)
                .mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          if (paramsCase_ == 2) {
            rsaParamsBuilder_.mergeFrom(value);
          }
          rsaParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public Builder clearRsaParams() {
        if (rsaParamsBuilder_ == null) {
          if (paramsCase_ == 2) {
            paramsCase_ = 0;
            params_ = null;
            onChanged();
          }
        } else {
          if (paramsCase_ == 2) {
            paramsCase_ = 0;
            params_ = null;
          }
          rsaParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public keyspb.Keyspb.Specification.RSA.Builder getRsaParamsBuilder() {
        return getRsaParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      public keyspb.Keyspb.Specification.RSAOrBuilder getRsaParamsOrBuilder() {
        if ((paramsCase_ == 2) && (rsaParamsBuilder_ != null)) {
          return rsaParamsBuilder_.getMessageOrBuilder();
        } else {
          if (paramsCase_ == 2) {
            return (keyspb.Keyspb.Specification.RSA) params_;
          }
          return keyspb.Keyspb.Specification.RSA.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an RSA key.
       * </pre>
       *
       * <code>.keyspb.Specification.RSA rsa_params = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.RSA, keyspb.Keyspb.Specification.RSA.Builder, keyspb.Keyspb.Specification.RSAOrBuilder> 
          getRsaParamsFieldBuilder() {
        if (rsaParamsBuilder_ == null) {
          if (!(paramsCase_ == 2)) {
            params_ = keyspb.Keyspb.Specification.RSA.getDefaultInstance();
          }
          rsaParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              keyspb.Keyspb.Specification.RSA, keyspb.Keyspb.Specification.RSA.Builder, keyspb.Keyspb.Specification.RSAOrBuilder>(
                  (keyspb.Keyspb.Specification.RSA) params_,
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        paramsCase_ = 2;
        onChanged();;
        return rsaParamsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.Ed25519, keyspb.Keyspb.Specification.Ed25519.Builder, keyspb.Keyspb.Specification.Ed25519OrBuilder> ed25519ParamsBuilder_;
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public boolean hasEd25519Params() {
        return paramsCase_ == 3;
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public keyspb.Keyspb.Specification.Ed25519 getEd25519Params() {
        if (ed25519ParamsBuilder_ == null) {
          if (paramsCase_ == 3) {
            return (keyspb.Keyspb.Specification.Ed25519) params_;
          }
          return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
        } else {
          if (paramsCase_ == 3) {
            return ed25519ParamsBuilder_.getMessage();
          }
          return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public Builder setEd25519Params(keyspb.Keyspb.Specification.Ed25519 value) {
        if (ed25519ParamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          params_ = value;
          onChanged();
        } else {
          ed25519ParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public Builder setEd25519Params(
          keyspb.Keyspb.Specification.Ed25519.Builder builderForValue) {
        if (ed25519ParamsBuilder_ == null) {
          params_ = builderForValue.build();
          onChanged();
        } else {
          ed25519ParamsBuilder_.setMessage(builderForValue.build());
        }
        paramsCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public Builder mergeEd25519Params(keyspb.Keyspb.Specification.Ed25519 value) {
        if (ed25519ParamsBuilder_ == null) {
          if (paramsCase_ == 3 &&
              params_ != keyspb.Keyspb.Specification.Ed25519.getDefaultInstance()) {
            params_ = keyspb.Keyspb.Specification.Ed25519.newBuilder((keyspb.Keyspb.Specification.Ed25519) params_)
                .mergeFrom(value).buildPartial();
          } else {
            params_ = value;
          }
          onChanged();
        } else {
          if (paramsCase_ == 3) {
            ed25519ParamsBuilder_.mergeFrom(value);
          }
          ed25519ParamsBuilder_.setMessage(value);
        }
        paramsCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public Builder clearEd25519Params() {
        if (ed25519ParamsBuilder_ == null) {
          if (paramsCase_ == 3) {
            paramsCase_ = 0;
            params_ = null;
            onChanged();
          }
        } else {
          if (paramsCase_ == 3) {
            paramsCase_ = 0;
            params_ = null;
          }
          ed25519ParamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public keyspb.Keyspb.Specification.Ed25519.Builder getEd25519ParamsBuilder() {
        return getEd25519ParamsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      public keyspb.Keyspb.Specification.Ed25519OrBuilder getEd25519ParamsOrBuilder() {
        if ((paramsCase_ == 3) && (ed25519ParamsBuilder_ != null)) {
          return ed25519ParamsBuilder_.getMessageOrBuilder();
        } else {
          if (paramsCase_ == 3) {
            return (keyspb.Keyspb.Specification.Ed25519) params_;
          }
          return keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The parameters for an Ed25519 key.
       * </pre>
       *
       * <code>.keyspb.Specification.Ed25519 ed25519_params = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          keyspb.Keyspb.Specification.Ed25519, keyspb.Keyspb.Specification.Ed25519.Builder, keyspb.Keyspb.Specification.Ed25519OrBuilder> 
          getEd25519ParamsFieldBuilder() {
        if (ed25519ParamsBuilder_ == null) {
          if (!(paramsCase_ == 3)) {
            params_ = keyspb.Keyspb.Specification.Ed25519.getDefaultInstance();
          }
          ed25519ParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              keyspb.Keyspb.Specification.Ed25519, keyspb.Keyspb.Specification.Ed25519.Builder, keyspb.Keyspb.Specification.Ed25519OrBuilder>(
                  (keyspb.Keyspb.Specification.Ed25519) params_,
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        paramsCase_ = 3;
        onChanged();;
        return ed25519ParamsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:keyspb.Specification)
    }

    // @@protoc_insertion_point(class_scope:keyspb.Specification)
    private static final keyspb.Keyspb.Specification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new keyspb.Keyspb.Specification();
    }

    public static keyspb.Keyspb.Specification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Specification>
        PARSER = new com.google.protobuf.AbstractParser<Specification>() {
      public Specification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Specification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Specification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Specification> getParserForType() {
      return PARSER;
    }

    public keyspb.Keyspb.Specification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PEMKeyFileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:keyspb.PEMKeyFile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * File path of the private key.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * File path of the private key.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * Password for decrypting the private key.
     * If empty, indicates that the private key is not encrypted.
     * </pre>
     *
     * <code>string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <pre>
     * Password for decrypting the private key.
     * If empty, indicates that the private key is not encrypted.
     * </pre>
     *
     * <code>string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * <pre>
   * PEMKeyFile identifies a private key stored in a PEM-encoded file.
   * </pre>
   *
   * Protobuf type {@code keyspb.PEMKeyFile}
   */
  public  static final class PEMKeyFile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:keyspb.PEMKeyFile)
      PEMKeyFileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PEMKeyFile.newBuilder() to construct.
    private PEMKeyFile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PEMKeyFile() {
      path_ = "";
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PEMKeyFile(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              password_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return keyspb.Keyspb.internal_static_keyspb_PEMKeyFile_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return keyspb.Keyspb.internal_static_keyspb_PEMKeyFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              keyspb.Keyspb.PEMKeyFile.class, keyspb.Keyspb.PEMKeyFile.Builder.class);
    }

    public static final int PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * File path of the private key.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * File path of the private key.
     * </pre>
     *
     * <code>string path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <pre>
     * Password for decrypting the private key.
     * If empty, indicates that the private key is not encrypted.
     * </pre>
     *
     * <code>string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        password_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Password for decrypting the private key.
     * If empty, indicates that the private key is not encrypted.
     * </pre>
     *
     * <code>string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
      }
      if (!getPasswordBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
      }
      if (!getPasswordBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof keyspb.Keyspb.PEMKeyFile)) {
        return super.equals(obj);
      }
      keyspb.Keyspb.PEMKeyFile other = (keyspb.Keyspb.PEMKeyFile) obj;

      boolean result = true;
      result = result && getPath()
          .equals(other.getPath());
      result = result && getPassword()
          .equals(other.getPassword());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PEMKeyFile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PEMKeyFile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PEMKeyFile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(keyspb.Keyspb.PEMKeyFile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PEMKeyFile identifies a private key stored in a PEM-encoded file.
     * </pre>
     *
     * Protobuf type {@code keyspb.PEMKeyFile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:keyspb.PEMKeyFile)
        keyspb.Keyspb.PEMKeyFileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_PEMKeyFile_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_PEMKeyFile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.PEMKeyFile.class, keyspb.Keyspb.PEMKeyFile.Builder.class);
      }

      // Construct using keyspb.Keyspb.PEMKeyFile.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        path_ = "";

        password_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return keyspb.Keyspb.internal_static_keyspb_PEMKeyFile_descriptor;
      }

      public keyspb.Keyspb.PEMKeyFile getDefaultInstanceForType() {
        return keyspb.Keyspb.PEMKeyFile.getDefaultInstance();
      }

      public keyspb.Keyspb.PEMKeyFile build() {
        keyspb.Keyspb.PEMKeyFile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public keyspb.Keyspb.PEMKeyFile buildPartial() {
        keyspb.Keyspb.PEMKeyFile result = new keyspb.Keyspb.PEMKeyFile(this);
        result.path_ = path_;
        result.password_ = password_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof keyspb.Keyspb.PEMKeyFile) {
          return mergeFrom((keyspb.Keyspb.PEMKeyFile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(keyspb.Keyspb.PEMKeyFile other) {
        if (other == keyspb.Keyspb.PEMKeyFile.getDefaultInstance()) return this;
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getPassword().isEmpty()) {
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        keyspb.Keyspb.PEMKeyFile parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (keyspb.Keyspb.PEMKeyFile) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * File path of the private key.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * File path of the private key.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * File path of the private key.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File path of the private key.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File path of the private key.
       * </pre>
       *
       * <code>string path = 1;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <pre>
       * Password for decrypting the private key.
       * If empty, indicates that the private key is not encrypted.
       * </pre>
       *
       * <code>string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Password for decrypting the private key.
       * If empty, indicates that the private key is not encrypted.
       * </pre>
       *
       * <code>string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Password for decrypting the private key.
       * If empty, indicates that the private key is not encrypted.
       * </pre>
       *
       * <code>string password = 2;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password for decrypting the private key.
       * If empty, indicates that the private key is not encrypted.
       * </pre>
       *
       * <code>string password = 2;</code>
       */
      public Builder clearPassword() {
        
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password for decrypting the private key.
       * If empty, indicates that the private key is not encrypted.
       * </pre>
       *
       * <code>string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:keyspb.PEMKeyFile)
    }

    // @@protoc_insertion_point(class_scope:keyspb.PEMKeyFile)
    private static final keyspb.Keyspb.PEMKeyFile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new keyspb.Keyspb.PEMKeyFile();
    }

    public static keyspb.Keyspb.PEMKeyFile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PEMKeyFile>
        PARSER = new com.google.protobuf.AbstractParser<PEMKeyFile>() {
      public PEMKeyFile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PEMKeyFile(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PEMKeyFile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PEMKeyFile> getParserForType() {
      return PARSER;
    }

    public keyspb.Keyspb.PEMKeyFile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrivateKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:keyspb.PrivateKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The key in DER-encoded form.
     * The specific format (e.g. PKCS8) is not specified.
     * </pre>
     *
     * <code>bytes der = 1;</code>
     */
    com.google.protobuf.ByteString getDer();
  }
  /**
   * <pre>
   * PrivateKey is a private key, used for generating signatures.
   * </pre>
   *
   * Protobuf type {@code keyspb.PrivateKey}
   */
  public  static final class PrivateKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:keyspb.PrivateKey)
      PrivateKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrivateKey.newBuilder() to construct.
    private PrivateKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrivateKey() {
      der_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PrivateKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              der_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return keyspb.Keyspb.internal_static_keyspb_PrivateKey_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return keyspb.Keyspb.internal_static_keyspb_PrivateKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              keyspb.Keyspb.PrivateKey.class, keyspb.Keyspb.PrivateKey.Builder.class);
    }

    public static final int DER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString der_;
    /**
     * <pre>
     * The key in DER-encoded form.
     * The specific format (e.g. PKCS8) is not specified.
     * </pre>
     *
     * <code>bytes der = 1;</code>
     */
    public com.google.protobuf.ByteString getDer() {
      return der_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!der_.isEmpty()) {
        output.writeBytes(1, der_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!der_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, der_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof keyspb.Keyspb.PrivateKey)) {
        return super.equals(obj);
      }
      keyspb.Keyspb.PrivateKey other = (keyspb.Keyspb.PrivateKey) obj;

      boolean result = true;
      result = result && getDer()
          .equals(other.getDer());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DER_FIELD_NUMBER;
      hash = (53 * hash) + getDer().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static keyspb.Keyspb.PrivateKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PrivateKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PrivateKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PrivateKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(keyspb.Keyspb.PrivateKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PrivateKey is a private key, used for generating signatures.
     * </pre>
     *
     * Protobuf type {@code keyspb.PrivateKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:keyspb.PrivateKey)
        keyspb.Keyspb.PrivateKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_PrivateKey_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_PrivateKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.PrivateKey.class, keyspb.Keyspb.PrivateKey.Builder.class);
      }

      // Construct using keyspb.Keyspb.PrivateKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        der_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return keyspb.Keyspb.internal_static_keyspb_PrivateKey_descriptor;
      }

      public keyspb.Keyspb.PrivateKey getDefaultInstanceForType() {
        return keyspb.Keyspb.PrivateKey.getDefaultInstance();
      }

      public keyspb.Keyspb.PrivateKey build() {
        keyspb.Keyspb.PrivateKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public keyspb.Keyspb.PrivateKey buildPartial() {
        keyspb.Keyspb.PrivateKey result = new keyspb.Keyspb.PrivateKey(this);
        result.der_ = der_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof keyspb.Keyspb.PrivateKey) {
          return mergeFrom((keyspb.Keyspb.PrivateKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(keyspb.Keyspb.PrivateKey other) {
        if (other == keyspb.Keyspb.PrivateKey.getDefaultInstance()) return this;
        if (other.getDer() != com.google.protobuf.ByteString.EMPTY) {
          setDer(other.getDer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        keyspb.Keyspb.PrivateKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (keyspb.Keyspb.PrivateKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString der_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The key in DER-encoded form.
       * The specific format (e.g. PKCS8) is not specified.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public com.google.protobuf.ByteString getDer() {
        return der_;
      }
      /**
       * <pre>
       * The key in DER-encoded form.
       * The specific format (e.g. PKCS8) is not specified.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public Builder setDer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        der_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The key in DER-encoded form.
       * The specific format (e.g. PKCS8) is not specified.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public Builder clearDer() {
        
        der_ = getDefaultInstance().getDer();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:keyspb.PrivateKey)
    }

    // @@protoc_insertion_point(class_scope:keyspb.PrivateKey)
    private static final keyspb.Keyspb.PrivateKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new keyspb.Keyspb.PrivateKey();
    }

    public static keyspb.Keyspb.PrivateKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrivateKey>
        PARSER = new com.google.protobuf.AbstractParser<PrivateKey>() {
      public PrivateKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrivateKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PrivateKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrivateKey> getParserForType() {
      return PARSER;
    }

    public keyspb.Keyspb.PrivateKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PublicKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:keyspb.PublicKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The key in DER-encoded PKIX form.
     * </pre>
     *
     * <code>bytes der = 1;</code>
     */
    com.google.protobuf.ByteString getDer();
  }
  /**
   * <pre>
   * PublicKey is a public key, used for verifying signatures.
   * </pre>
   *
   * Protobuf type {@code keyspb.PublicKey}
   */
  public  static final class PublicKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:keyspb.PublicKey)
      PublicKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PublicKey.newBuilder() to construct.
    private PublicKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PublicKey() {
      der_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PublicKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              der_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return keyspb.Keyspb.internal_static_keyspb_PublicKey_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return keyspb.Keyspb.internal_static_keyspb_PublicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              keyspb.Keyspb.PublicKey.class, keyspb.Keyspb.PublicKey.Builder.class);
    }

    public static final int DER_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString der_;
    /**
     * <pre>
     * The key in DER-encoded PKIX form.
     * </pre>
     *
     * <code>bytes der = 1;</code>
     */
    public com.google.protobuf.ByteString getDer() {
      return der_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!der_.isEmpty()) {
        output.writeBytes(1, der_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!der_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, der_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof keyspb.Keyspb.PublicKey)) {
        return super.equals(obj);
      }
      keyspb.Keyspb.PublicKey other = (keyspb.Keyspb.PublicKey) obj;

      boolean result = true;
      result = result && getDer()
          .equals(other.getDer());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DER_FIELD_NUMBER;
      hash = (53 * hash) + getDer().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static keyspb.Keyspb.PublicKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PublicKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PublicKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PublicKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(keyspb.Keyspb.PublicKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PublicKey is a public key, used for verifying signatures.
     * </pre>
     *
     * Protobuf type {@code keyspb.PublicKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:keyspb.PublicKey)
        keyspb.Keyspb.PublicKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_PublicKey_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_PublicKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.PublicKey.class, keyspb.Keyspb.PublicKey.Builder.class);
      }

      // Construct using keyspb.Keyspb.PublicKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        der_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return keyspb.Keyspb.internal_static_keyspb_PublicKey_descriptor;
      }

      public keyspb.Keyspb.PublicKey getDefaultInstanceForType() {
        return keyspb.Keyspb.PublicKey.getDefaultInstance();
      }

      public keyspb.Keyspb.PublicKey build() {
        keyspb.Keyspb.PublicKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public keyspb.Keyspb.PublicKey buildPartial() {
        keyspb.Keyspb.PublicKey result = new keyspb.Keyspb.PublicKey(this);
        result.der_ = der_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof keyspb.Keyspb.PublicKey) {
          return mergeFrom((keyspb.Keyspb.PublicKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(keyspb.Keyspb.PublicKey other) {
        if (other == keyspb.Keyspb.PublicKey.getDefaultInstance()) return this;
        if (other.getDer() != com.google.protobuf.ByteString.EMPTY) {
          setDer(other.getDer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        keyspb.Keyspb.PublicKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (keyspb.Keyspb.PublicKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString der_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public com.google.protobuf.ByteString getDer() {
        return der_;
      }
      /**
       * <pre>
       * The key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public Builder setDer(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        der_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The key in DER-encoded PKIX form.
       * </pre>
       *
       * <code>bytes der = 1;</code>
       */
      public Builder clearDer() {
        
        der_ = getDefaultInstance().getDer();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:keyspb.PublicKey)
    }

    // @@protoc_insertion_point(class_scope:keyspb.PublicKey)
    private static final keyspb.Keyspb.PublicKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new keyspb.Keyspb.PublicKey();
    }

    public static keyspb.Keyspb.PublicKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PublicKey>
        PARSER = new com.google.protobuf.AbstractParser<PublicKey>() {
      public PublicKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PublicKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PublicKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PublicKey> getParserForType() {
      return PARSER;
    }

    public keyspb.Keyspb.PublicKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PKCS11ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:keyspb.PKCS11Config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The label of the PKCS#11 token.
     * </pre>
     *
     * <code>string token_label = 1;</code>
     */
    java.lang.String getTokenLabel();
    /**
     * <pre>
     * The label of the PKCS#11 token.
     * </pre>
     *
     * <code>string token_label = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenLabelBytes();

    /**
     * <pre>
     * The PIN for the specific token.
     * </pre>
     *
     * <code>string pin = 2;</code>
     */
    java.lang.String getPin();
    /**
     * <pre>
     * The PIN for the specific token.
     * </pre>
     *
     * <code>string pin = 2;</code>
     */
    com.google.protobuf.ByteString
        getPinBytes();

    /**
     * <pre>
     * The PEM public key associated with the private key to be used.
     * </pre>
     *
     * <code>string public_key = 3;</code>
     */
    java.lang.String getPublicKey();
    /**
     * <pre>
     * The PEM public key associated with the private key to be used.
     * </pre>
     *
     * <code>string public_key = 3;</code>
     */
    com.google.protobuf.ByteString
        getPublicKeyBytes();
  }
  /**
   * <pre>
   * PKCS11Config identifies a private key accessed using PKCS #11.
   * </pre>
   *
   * Protobuf type {@code keyspb.PKCS11Config}
   */
  public  static final class PKCS11Config extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:keyspb.PKCS11Config)
      PKCS11ConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PKCS11Config.newBuilder() to construct.
    private PKCS11Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PKCS11Config() {
      tokenLabel_ = "";
      pin_ = "";
      publicKey_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PKCS11Config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              tokenLabel_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              pin_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              publicKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return keyspb.Keyspb.internal_static_keyspb_PKCS11Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return keyspb.Keyspb.internal_static_keyspb_PKCS11Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              keyspb.Keyspb.PKCS11Config.class, keyspb.Keyspb.PKCS11Config.Builder.class);
    }

    public static final int TOKEN_LABEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object tokenLabel_;
    /**
     * <pre>
     * The label of the PKCS#11 token.
     * </pre>
     *
     * <code>string token_label = 1;</code>
     */
    public java.lang.String getTokenLabel() {
      java.lang.Object ref = tokenLabel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tokenLabel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The label of the PKCS#11 token.
     * </pre>
     *
     * <code>string token_label = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenLabelBytes() {
      java.lang.Object ref = tokenLabel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tokenLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PIN_FIELD_NUMBER = 2;
    private volatile java.lang.Object pin_;
    /**
     * <pre>
     * The PIN for the specific token.
     * </pre>
     *
     * <code>string pin = 2;</code>
     */
    public java.lang.String getPin() {
      java.lang.Object ref = pin_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pin_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The PIN for the specific token.
     * </pre>
     *
     * <code>string pin = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPinBytes() {
      java.lang.Object ref = pin_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pin_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 3;
    private volatile java.lang.Object publicKey_;
    /**
     * <pre>
     * The PEM public key associated with the private key to be used.
     * </pre>
     *
     * <code>string public_key = 3;</code>
     */
    public java.lang.String getPublicKey() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        publicKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The PEM public key associated with the private key to be used.
     * </pre>
     *
     * <code>string public_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPublicKeyBytes() {
      java.lang.Object ref = publicKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        publicKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tokenLabel_);
      }
      if (!getPinBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pin_);
      }
      if (!getPublicKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, publicKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tokenLabel_);
      }
      if (!getPinBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pin_);
      }
      if (!getPublicKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, publicKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof keyspb.Keyspb.PKCS11Config)) {
        return super.equals(obj);
      }
      keyspb.Keyspb.PKCS11Config other = (keyspb.Keyspb.PKCS11Config) obj;

      boolean result = true;
      result = result && getTokenLabel()
          .equals(other.getTokenLabel());
      result = result && getPin()
          .equals(other.getPin());
      result = result && getPublicKey()
          .equals(other.getPublicKey());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOKEN_LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getTokenLabel().hashCode();
      hash = (37 * hash) + PIN_FIELD_NUMBER;
      hash = (53 * hash) + getPin().hashCode();
      hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPublicKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static keyspb.Keyspb.PKCS11Config parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PKCS11Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PKCS11Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static keyspb.Keyspb.PKCS11Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(keyspb.Keyspb.PKCS11Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PKCS11Config identifies a private key accessed using PKCS #11.
     * </pre>
     *
     * Protobuf type {@code keyspb.PKCS11Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:keyspb.PKCS11Config)
        keyspb.Keyspb.PKCS11ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return keyspb.Keyspb.internal_static_keyspb_PKCS11Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return keyspb.Keyspb.internal_static_keyspb_PKCS11Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                keyspb.Keyspb.PKCS11Config.class, keyspb.Keyspb.PKCS11Config.Builder.class);
      }

      // Construct using keyspb.Keyspb.PKCS11Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tokenLabel_ = "";

        pin_ = "";

        publicKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return keyspb.Keyspb.internal_static_keyspb_PKCS11Config_descriptor;
      }

      public keyspb.Keyspb.PKCS11Config getDefaultInstanceForType() {
        return keyspb.Keyspb.PKCS11Config.getDefaultInstance();
      }

      public keyspb.Keyspb.PKCS11Config build() {
        keyspb.Keyspb.PKCS11Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public keyspb.Keyspb.PKCS11Config buildPartial() {
        keyspb.Keyspb.PKCS11Config result = new keyspb.Keyspb.PKCS11Config(this);
        result.tokenLabel_ = tokenLabel_;
        result.pin_ = pin_;
        result.publicKey_ = publicKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof keyspb.Keyspb.PKCS11Config) {
          return mergeFrom((keyspb.Keyspb.PKCS11Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(keyspb.Keyspb.PKCS11Config other) {
        if (other == keyspb.Keyspb.PKCS11Config.getDefaultInstance()) return this;
        if (!other.getTokenLabel().isEmpty()) {
          tokenLabel_ = other.tokenLabel_;
          onChanged();
        }
        if (!other.getPin().isEmpty()) {
          pin_ = other.pin_;
          onChanged();
        }
        if (!other.getPublicKey().isEmpty()) {
          publicKey_ = other.publicKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        keyspb.Keyspb.PKCS11Config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (keyspb.Keyspb.PKCS11Config) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object tokenLabel_ = "";
      /**
       * <pre>
       * The label of the PKCS#11 token.
       * </pre>
       *
       * <code>string token_label = 1;</code>
       */
      public java.lang.String getTokenLabel() {
        java.lang.Object ref = tokenLabel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tokenLabel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The label of the PKCS#11 token.
       * </pre>
       *
       * <code>string token_label = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenLabelBytes() {
        java.lang.Object ref = tokenLabel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tokenLabel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The label of the PKCS#11 token.
       * </pre>
       *
       * <code>string token_label = 1;</code>
       */
      public Builder setTokenLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tokenLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The label of the PKCS#11 token.
       * </pre>
       *
       * <code>string token_label = 1;</code>
       */
      public Builder clearTokenLabel() {
        
        tokenLabel_ = getDefaultInstance().getTokenLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The label of the PKCS#11 token.
       * </pre>
       *
       * <code>string token_label = 1;</code>
       */
      public Builder setTokenLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tokenLabel_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pin_ = "";
      /**
       * <pre>
       * The PIN for the specific token.
       * </pre>
       *
       * <code>string pin = 2;</code>
       */
      public java.lang.String getPin() {
        java.lang.Object ref = pin_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          pin_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The PIN for the specific token.
       * </pre>
       *
       * <code>string pin = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPinBytes() {
        java.lang.Object ref = pin_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pin_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The PIN for the specific token.
       * </pre>
       *
       * <code>string pin = 2;</code>
       */
      public Builder setPin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        pin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PIN for the specific token.
       * </pre>
       *
       * <code>string pin = 2;</code>
       */
      public Builder clearPin() {
        
        pin_ = getDefaultInstance().getPin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PIN for the specific token.
       * </pre>
       *
       * <code>string pin = 2;</code>
       */
      public Builder setPinBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        pin_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object publicKey_ = "";
      /**
       * <pre>
       * The PEM public key associated with the private key to be used.
       * </pre>
       *
       * <code>string public_key = 3;</code>
       */
      public java.lang.String getPublicKey() {
        java.lang.Object ref = publicKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          publicKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The PEM public key associated with the private key to be used.
       * </pre>
       *
       * <code>string public_key = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPublicKeyBytes() {
        java.lang.Object ref = publicKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          publicKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The PEM public key associated with the private key to be used.
       * </pre>
       *
       * <code>string public_key = 3;</code>
       */
      public Builder setPublicKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PEM public key associated with the private key to be used.
       * </pre>
       *
       * <code>string public_key = 3;</code>
       */
      public Builder clearPublicKey() {
        
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The PEM public key associated with the private key to be used.
       * </pre>
       *
       * <code>string public_key = 3;</code>
       */
      public Builder setPublicKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        publicKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:keyspb.PKCS11Config)
    }

    // @@protoc_insertion_point(class_scope:keyspb.PKCS11Config)
    private static final keyspb.Keyspb.PKCS11Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new keyspb.Keyspb.PKCS11Config();
    }

    public static keyspb.Keyspb.PKCS11Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PKCS11Config>
        PARSER = new com.google.protobuf.AbstractParser<PKCS11Config>() {
      public PKCS11Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PKCS11Config(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PKCS11Config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PKCS11Config> getParserForType() {
      return PARSER;
    }

    public keyspb.Keyspb.PKCS11Config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_Specification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_Specification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_Specification_ECDSA_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_Specification_ECDSA_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_Specification_RSA_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_Specification_RSA_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_Specification_Ed25519_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_Specification_Ed25519_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_PEMKeyFile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_PEMKeyFile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_PrivateKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_PrivateKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_PublicKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_PublicKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_keyspb_PKCS11Config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_keyspb_PKCS11Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032crypto/keyspb/keyspb.proto\022\006keyspb\"\315\002\n" +
      "\rSpecification\0223\n\014ecdsa_params\030\001 \001(\0132\033.k" +
      "eyspb.Specification.ECDSAH\000\022/\n\nrsa_param" +
      "s\030\002 \001(\0132\031.keyspb.Specification.RSAH\000\0227\n\016" +
      "ed25519_params\030\003 \001(\0132\035.keyspb.Specificat" +
      "ion.Ed25519H\000\032s\n\005ECDSA\0220\n\005curve\030\001 \001(\0162!." +
      "keyspb.Specification.ECDSA.Curve\"8\n\005Curv" +
      "e\022\021\n\rDEFAULT_CURVE\020\000\022\010\n\004P256\020\001\022\010\n\004P384\020\002" +
      "\022\010\n\004P521\020\003\032\023\n\003RSA\022\014\n\004bits\030\001 \001(\005\032\t\n\007Ed255" +
      "19B\010\n\006params\",\n\nPEMKeyFile\022\014\n\004path\030\001 \001(\t" +
      "\022\020\n\010password\030\002 \001(\t\"\031\n\nPrivateKey\022\013\n\003der\030" +
      "\001 \001(\014\"\030\n\tPublicKey\022\013\n\003der\030\001 \001(\014\"D\n\014PKCS1" +
      "1Config\022\023\n\013token_label\030\001 \001(\t\022\013\n\003pin\030\002 \001(" +
      "\t\022\022\n\npublic_key\030\003 \001(\tB*Z(github.com/goog" +
      "le/trillian/crypto/keyspbb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_keyspb_Specification_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_keyspb_Specification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_Specification_descriptor,
        new java.lang.String[] { "EcdsaParams", "RsaParams", "Ed25519Params", "Params", });
    internal_static_keyspb_Specification_ECDSA_descriptor =
      internal_static_keyspb_Specification_descriptor.getNestedTypes().get(0);
    internal_static_keyspb_Specification_ECDSA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_Specification_ECDSA_descriptor,
        new java.lang.String[] { "Curve", });
    internal_static_keyspb_Specification_RSA_descriptor =
      internal_static_keyspb_Specification_descriptor.getNestedTypes().get(1);
    internal_static_keyspb_Specification_RSA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_Specification_RSA_descriptor,
        new java.lang.String[] { "Bits", });
    internal_static_keyspb_Specification_Ed25519_descriptor =
      internal_static_keyspb_Specification_descriptor.getNestedTypes().get(2);
    internal_static_keyspb_Specification_Ed25519_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_Specification_Ed25519_descriptor,
        new java.lang.String[] { });
    internal_static_keyspb_PEMKeyFile_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_keyspb_PEMKeyFile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_PEMKeyFile_descriptor,
        new java.lang.String[] { "Path", "Password", });
    internal_static_keyspb_PrivateKey_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_keyspb_PrivateKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_PrivateKey_descriptor,
        new java.lang.String[] { "Der", });
    internal_static_keyspb_PublicKey_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_keyspb_PublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_PublicKey_descriptor,
        new java.lang.String[] { "Der", });
    internal_static_keyspb_PKCS11Config_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_keyspb_PKCS11Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_keyspb_PKCS11Config_descriptor,
        new java.lang.String[] { "TokenLabel", "Pin", "PublicKey", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
