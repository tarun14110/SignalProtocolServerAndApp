// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: frontend.proto

package com.google.keytransparency.v1;

public final class Frontend {
  private Frontend() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface QueueKeyUpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.google.keytransparency.v1.QueueKeyUpdateRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    java.lang.String getUserId();
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    /**
     * <pre>
     * key_data is the key data to store.
     * </pre>
     *
     * <code>bytes key_data = 3;</code>
     * @return The keyData.
     */
    com.google.protobuf.ByteString getKeyData();
  }
  /**
   * <pre>
   * QueueKeyUpdateRequest enqueues an update to a user's identity keys.
   * </pre>
   *
   * Protobuf type {@code com.google.keytransparency.v1.QueueKeyUpdateRequest}
   */
  public  static final class QueueKeyUpdateRequest extends
      com.google.protobuf.GeneratedMessageLite<
          QueueKeyUpdateRequest, QueueKeyUpdateRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:com.google.keytransparency.v1.QueueKeyUpdateRequest)
      QueueKeyUpdateRequestOrBuilder {
    private QueueKeyUpdateRequest() {
      directoryId_ = "";
      userId_ = "";
      keyData_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DIRECTORY_ID_FIELD_NUMBER = 1;
    private java.lang.String directoryId_;
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The directoryId.
     */
    @java.lang.Override
    public java.lang.String getDirectoryId() {
      return directoryId_;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @return The bytes for directoryId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(directoryId_);
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The directoryId to set.
     */
    private void setDirectoryId(
        java.lang.String value) {
      value.getClass();
  
      directoryId_ = value;
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     */
    private void clearDirectoryId() {
      
      directoryId_ = getDefaultInstance().getDirectoryId();
    }
    /**
     * <pre>
     * directory_id identifies the directory in which the user lives.
     * </pre>
     *
     * <code>string directory_id = 1;</code>
     * @param value The bytes for directoryId to set.
     */
    private void setDirectoryIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      directoryId_ = value.toStringUtf8();
      
    }

    public static final int USER_ID_FIELD_NUMBER = 2;
    private java.lang.String userId_;
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The userId.
     */
    @java.lang.Override
    public java.lang.String getUserId() {
      return userId_;
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @return The bytes for userId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(userId_);
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The userId to set.
     */
    private void setUserId(
        java.lang.String value) {
      value.getClass();
  
      userId_ = value;
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     */
    private void clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
    }
    /**
     * <pre>
     * user_id specifies the id for the user whose keys are being updated.
     * </pre>
     *
     * <code>string user_id = 2;</code>
     * @param value The bytes for userId to set.
     */
    private void setUserIdBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      userId_ = value.toStringUtf8();
      
    }

    public static final int KEY_DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString keyData_;
    /**
     * <pre>
     * key_data is the key data to store.
     * </pre>
     *
     * <code>bytes key_data = 3;</code>
     * @return The keyData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }
    /**
     * <pre>
     * key_data is the key data to store.
     * </pre>
     *
     * <code>bytes key_data = 3;</code>
     * @param value The keyData to set.
     */
    private void setKeyData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      keyData_ = value;
    }
    /**
     * <pre>
     * key_data is the key data to store.
     * </pre>
     *
     * <code>bytes key_data = 3;</code>
     */
    private void clearKeyData() {
      
      keyData_ = getDefaultInstance().getKeyData();
    }

    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * QueueKeyUpdateRequest enqueues an update to a user's identity keys.
     * </pre>
     *
     * Protobuf type {@code com.google.keytransparency.v1.QueueKeyUpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:com.google.keytransparency.v1.QueueKeyUpdateRequest)
        com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequestOrBuilder {
      // Construct using com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The directoryId.
       */
      @java.lang.Override
      public java.lang.String getDirectoryId() {
        return instance.getDirectoryId();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return The bytes for directoryId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        return instance.getDirectoryIdBytes();
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDirectoryId(value);
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectoryId() {
        copyOnWrite();
        instance.clearDirectoryId();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the directory in which the user lives.
       * </pre>
       *
       * <code>string directory_id = 1;</code>
       * @param value The bytes for directoryId to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDirectoryIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * user_id specifies the id for the user whose keys are being updated.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The userId.
       */
      @java.lang.Override
      public java.lang.String getUserId() {
        return instance.getUserId();
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose keys are being updated.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return The bytes for userId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        return instance.getUserIdBytes();
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose keys are being updated.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(
          java.lang.String value) {
        copyOnWrite();
        instance.setUserId(value);
        return this;
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose keys are being updated.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        copyOnWrite();
        instance.clearUserId();
        return this;
      }
      /**
       * <pre>
       * user_id specifies the id for the user whose keys are being updated.
       * </pre>
       *
       * <code>string user_id = 2;</code>
       * @param value The bytes for userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * key_data is the key data to store.
       * </pre>
       *
       * <code>bytes key_data = 3;</code>
       * @return The keyData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyData() {
        return instance.getKeyData();
      }
      /**
       * <pre>
       * key_data is the key data to store.
       * </pre>
       *
       * <code>bytes key_data = 3;</code>
       * @param value The keyData to set.
       * @return This builder for chaining.
       */
      public Builder setKeyData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setKeyData(value);
        return this;
      }
      /**
       * <pre>
       * key_data is the key data to store.
       * </pre>
       *
       * <code>bytes key_data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyData() {
        copyOnWrite();
        instance.clearKeyData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.google.keytransparency.v1.QueueKeyUpdateRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "directoryId_",
              "userId_",
              "keyData_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest> parser = PARSER;
          if (parser == null) {
            synchronized (com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:com.google.keytransparency.v1.QueueKeyUpdateRequest)
    private static final com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest DEFAULT_INSTANCE;
    static {
      QueueKeyUpdateRequest defaultInstance = new QueueKeyUpdateRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        QueueKeyUpdateRequest.class, defaultInstance);
    }

    public static com.google.keytransparency.v1.Frontend.QueueKeyUpdateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<QueueKeyUpdateRequest> PARSER;

    public static com.google.protobuf.Parser<QueueKeyUpdateRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
