// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor/v1/monitor.proto

package com.google.keytransparency.monitor.v1;

public final class MonitorOuterClass {
  private MonitorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GetStateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.monitor.v1.GetStateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * kt_url is the URL of the keytransparency server for which the monitoring
     * result will be returned.
     * </pre>
     *
     * <code>string kt_url = 2;</code>
     */
    java.lang.String getKtUrl();
    /**
     * <pre>
     * kt_url is the URL of the keytransparency server for which the monitoring
     * result will be returned.
     * </pre>
     *
     * <code>string kt_url = 2;</code>
     */
    com.google.protobuf.ByteString
        getKtUrlBytes();

    /**
     * <pre>
     * directory_id identifies the merkle tree being monitored.
     * </pre>
     *
     * <code>string directory_id = 3;</code>
     */
    java.lang.String getDirectoryId();
    /**
     * <pre>
     * directory_id identifies the merkle tree being monitored.
     * </pre>
     *
     * <code>string directory_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getDirectoryIdBytes();

    /**
     * <pre>
     * revision specifies the revision for which the monitoring results will
     * be returned (revisions start at 0).
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     */
    long getRevision();
  }
  /**
   * <pre>
   * GetStateRequest requests the verification state of a keytransparency
   * directory for a particular point in time.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.monitor.v1.GetStateRequest}
   */
  public  static final class GetStateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.monitor.v1.GetStateRequest)
      GetStateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetStateRequest.newBuilder() to construct.
    private GetStateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetStateRequest() {
      ktUrl_ = "";
      directoryId_ = "";
      revision_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetStateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              revision_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              ktUrl_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              directoryId_ = s;
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_GetStateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.class, google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.Builder.class);
    }

    public static final int KT_URL_FIELD_NUMBER = 2;
    private volatile java.lang.Object ktUrl_;
    /**
     * <pre>
     * kt_url is the URL of the keytransparency server for which the monitoring
     * result will be returned.
     * </pre>
     *
     * <code>string kt_url = 2;</code>
     */
    public java.lang.String getKtUrl() {
      java.lang.Object ref = ktUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ktUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * kt_url is the URL of the keytransparency server for which the monitoring
     * result will be returned.
     * </pre>
     *
     * <code>string kt_url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKtUrlBytes() {
      java.lang.Object ref = ktUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ktUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIRECTORY_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object directoryId_;
    /**
     * <pre>
     * directory_id identifies the merkle tree being monitored.
     * </pre>
     *
     * <code>string directory_id = 3;</code>
     */
    public java.lang.String getDirectoryId() {
      java.lang.Object ref = directoryId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        directoryId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * directory_id identifies the merkle tree being monitored.
     * </pre>
     *
     * <code>string directory_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDirectoryIdBytes() {
      java.lang.Object ref = directoryId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        directoryId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REVISION_FIELD_NUMBER = 1;
    private long revision_;
    /**
     * <pre>
     * revision specifies the revision for which the monitoring results will
     * be returned (revisions start at 0).
     * </pre>
     *
     * <code>int64 revision = 1;</code>
     */
    public long getRevision() {
      return revision_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (revision_ != 0L) {
        output.writeInt64(1, revision_);
      }
      if (!getKtUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ktUrl_);
      }
      if (!getDirectoryIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, directoryId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (revision_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, revision_);
      }
      if (!getKtUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ktUrl_);
      }
      if (!getDirectoryIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, directoryId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest)) {
        return super.equals(obj);
      }
      google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest other = (google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest) obj;

      boolean result = true;
      result = result && getKtUrl()
          .equals(other.getKtUrl());
      result = result && getDirectoryId()
          .equals(other.getDirectoryId());
      result = result && (getRevision()
          == other.getRevision());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KT_URL_FIELD_NUMBER;
      hash = (53 * hash) + getKtUrl().hashCode();
      hash = (37 * hash) + DIRECTORY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDirectoryId().hashCode();
      hash = (37 * hash) + REVISION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRevision());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * GetStateRequest requests the verification state of a keytransparency
     * directory for a particular point in time.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.monitor.v1.GetStateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.monitor.v1.GetStateRequest)
        google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_GetStateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.class, google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.Builder.class);
      }

      // Construct using google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        ktUrl_ = "";

        directoryId_ = "";

        revision_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor;
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest getDefaultInstanceForType() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.getDefaultInstance();
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest build() {
        google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest buildPartial() {
        google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest result = new google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest(this);
        result.ktUrl_ = ktUrl_;
        result.directoryId_ = directoryId_;
        result.revision_ = revision_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest) {
          return mergeFrom((google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest other) {
        if (other == google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest.getDefaultInstance()) return this;
        if (!other.getKtUrl().isEmpty()) {
          ktUrl_ = other.ktUrl_;
          onChanged();
        }
        if (!other.getDirectoryId().isEmpty()) {
          directoryId_ = other.directoryId_;
          onChanged();
        }
        if (other.getRevision() != 0L) {
          setRevision(other.getRevision());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object ktUrl_ = "";
      /**
       * <pre>
       * kt_url is the URL of the keytransparency server for which the monitoring
       * result will be returned.
       * </pre>
       *
       * <code>string kt_url = 2;</code>
       */
      public java.lang.String getKtUrl() {
        java.lang.Object ref = ktUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ktUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * kt_url is the URL of the keytransparency server for which the monitoring
       * result will be returned.
       * </pre>
       *
       * <code>string kt_url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getKtUrlBytes() {
        java.lang.Object ref = ktUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ktUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * kt_url is the URL of the keytransparency server for which the monitoring
       * result will be returned.
       * </pre>
       *
       * <code>string kt_url = 2;</code>
       */
      public Builder setKtUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ktUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kt_url is the URL of the keytransparency server for which the monitoring
       * result will be returned.
       * </pre>
       *
       * <code>string kt_url = 2;</code>
       */
      public Builder clearKtUrl() {
        
        ktUrl_ = getDefaultInstance().getKtUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kt_url is the URL of the keytransparency server for which the monitoring
       * result will be returned.
       * </pre>
       *
       * <code>string kt_url = 2;</code>
       */
      public Builder setKtUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ktUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object directoryId_ = "";
      /**
       * <pre>
       * directory_id identifies the merkle tree being monitored.
       * </pre>
       *
       * <code>string directory_id = 3;</code>
       */
      public java.lang.String getDirectoryId() {
        java.lang.Object ref = directoryId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          directoryId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * directory_id identifies the merkle tree being monitored.
       * </pre>
       *
       * <code>string directory_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDirectoryIdBytes() {
        java.lang.Object ref = directoryId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          directoryId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * directory_id identifies the merkle tree being monitored.
       * </pre>
       *
       * <code>string directory_id = 3;</code>
       */
      public Builder setDirectoryId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        directoryId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the merkle tree being monitored.
       * </pre>
       *
       * <code>string directory_id = 3;</code>
       */
      public Builder clearDirectoryId() {
        
        directoryId_ = getDefaultInstance().getDirectoryId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * directory_id identifies the merkle tree being monitored.
       * </pre>
       *
       * <code>string directory_id = 3;</code>
       */
      public Builder setDirectoryIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        directoryId_ = value;
        onChanged();
        return this;
      }

      private long revision_ ;
      /**
       * <pre>
       * revision specifies the revision for which the monitoring results will
       * be returned (revisions start at 0).
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       */
      public long getRevision() {
        return revision_;
      }
      /**
       * <pre>
       * revision specifies the revision for which the monitoring results will
       * be returned (revisions start at 0).
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       */
      public Builder setRevision(long value) {
        
        revision_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * revision specifies the revision for which the monitoring results will
       * be returned (revisions start at 0).
       * </pre>
       *
       * <code>int64 revision = 1;</code>
       */
      public Builder clearRevision() {
        
        revision_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.keytransparency.monitor.v1.GetStateRequest)
    }

    // @@protoc_insertion_point(class_scope:google.keytransparency.monitor.v1.GetStateRequest)
    private static final google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest();
    }

    public static google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetStateRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetStateRequest>() {
      @java.lang.Override
      public GetStateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetStateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetStateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetStateRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public google.keytransparency.monitor.v1.MonitorOuterClass.GetStateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.keytransparency.monitor.v1.State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    boolean hasSmr();
    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    com.google.trilliann.proto.SignedMapRoot getSmr();
    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    com.google.trilliann.proto.SignedMapRootOrBuilder getSmrOrBuilder();

    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    boolean hasSeenTime();
    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    com.google.protobuf.Timestamp getSeenTime();
    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getSeenTimeOrBuilder();

    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    java.util.List<com.google.rpc.Status> 
        getErrorsList();
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    com.google.rpc.Status getErrors(int index);
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    int getErrorsCount();
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    java.util.List<? extends com.google.rpc.StatusOrBuilder> 
        getErrorsOrBuilderList();
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    com.google.rpc.StatusOrBuilder getErrorsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * State represents the monitor's evaluation of a Key Transparency directory
   * at a particular revision.
   * </pre>
   *
   * Protobuf type {@code google.keytransparency.monitor.v1.State}
   */
  public  static final class State extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.keytransparency.monitor.v1.State)
      StateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private State() {
      errors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.trilliann.proto.SignedMapRoot.Builder subBuilder = null;
              if (smr_ != null) {
                subBuilder = smr_.toBuilder();
              }
              smr_ = input.readMessage(com.google.trilliann.proto.SignedMapRoot.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(smr_);
                smr_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (seenTime_ != null) {
                subBuilder = seenTime_.toBuilder();
              }
              seenTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(seenTime_);
                seenTime_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                errors_ = new java.util.ArrayList<com.google.rpc.Status>();
                mutable_bitField0_ |= 0x00000004;
              }
              errors_.add(
                  input.readMessage(com.google.rpc.Status.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_State_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.keytransparency.monitor.v1.MonitorOuterClass.State.class, google.keytransparency.monitor.v1.MonitorOuterClass.State.Builder.class);
    }

    private int bitField0_;
    public static final int SMR_FIELD_NUMBER = 1;
    private com.google.trilliann.proto.SignedMapRoot smr_;
    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    public boolean hasSmr() {
      return smr_ != null;
    }
    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    public com.google.trilliann.proto.SignedMapRoot getSmr() {
      return smr_ == null ? com.google.trilliann.proto.SignedMapRoot.getDefaultInstance() : smr_;
    }
    /**
     * <pre>
     * smr contains the map root for the sparse Merkle Tree signed with the
     * monitor's key on success. If the checks were not successful the
     * smr will be empty. The revisions are encoded into the smr map_revision.
     * </pre>
     *
     * <code>.trillian.SignedMapRoot smr = 1;</code>
     */
    public com.google.trilliann.proto.SignedMapRootOrBuilder getSmrOrBuilder() {
      return getSmr();
    }

    public static final int SEEN_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp seenTime_;
    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    public boolean hasSeenTime() {
      return seenTime_ != null;
    }
    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getSeenTime() {
      return seenTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : seenTime_;
    }
    /**
     * <pre>
     * seen_time contains the time when this particular signed map root was
     * retrieved and processed.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp seen_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getSeenTimeOrBuilder() {
      return getSeenTime();
    }

    public static final int ERRORS_FIELD_NUMBER = 3;
    private java.util.List<com.google.rpc.Status> errors_;
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    public java.util.List<com.google.rpc.Status> getErrorsList() {
      return errors_;
    }
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
        getErrorsOrBuilderList() {
      return errors_;
    }
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    public com.google.rpc.Status getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <pre>
     * errors contains a list of errors representing the verification checks
     * that failed while monitoring the key-transparency server.
     * </pre>
     *
     * <code>repeated .google.rpc.Status errors = 3;</code>
     */
    public com.google.rpc.StatusOrBuilder getErrorsOrBuilder(
        int index) {
      return errors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (smr_ != null) {
        output.writeMessage(1, getSmr());
      }
      if (seenTime_ != null) {
        output.writeMessage(2, getSeenTime());
      }
      for (int i = 0; i < errors_.size(); i++) {
        output.writeMessage(3, errors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (smr_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSmr());
      }
      if (seenTime_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSeenTime());
      }
      for (int i = 0; i < errors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, errors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.keytransparency.monitor.v1.MonitorOuterClass.State)) {
        return super.equals(obj);
      }
      google.keytransparency.monitor.v1.MonitorOuterClass.State other = (google.keytransparency.monitor.v1.MonitorOuterClass.State) obj;

      boolean result = true;
      result = result && (hasSmr() == other.hasSmr());
      if (hasSmr()) {
        result = result && getSmr()
            .equals(other.getSmr());
      }
      result = result && (hasSeenTime() == other.hasSeenTime());
      if (hasSeenTime()) {
        result = result && getSeenTime()
            .equals(other.getSeenTime());
      }
      result = result && getErrorsList()
          .equals(other.getErrorsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSmr()) {
        hash = (37 * hash) + SMR_FIELD_NUMBER;
        hash = (53 * hash) + getSmr().hashCode();
      }
      if (hasSeenTime()) {
        hash = (37 * hash) + SEEN_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getSeenTime().hashCode();
      }
      if (getErrorsCount() > 0) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.keytransparency.monitor.v1.MonitorOuterClass.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.keytransparency.monitor.v1.MonitorOuterClass.State prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * State represents the monitor's evaluation of a Key Transparency directory
     * at a particular revision.
     * </pre>
     *
     * Protobuf type {@code google.keytransparency.monitor.v1.State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.keytransparency.monitor.v1.State)
        google.keytransparency.monitor.v1.MonitorOuterClass.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_State_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.keytransparency.monitor.v1.MonitorOuterClass.State.class, google.keytransparency.monitor.v1.MonitorOuterClass.State.Builder.class);
      }

      // Construct using google.keytransparency.monitor.v1.MonitorOuterClass.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getErrorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (smrBuilder_ == null) {
          smr_ = null;
        } else {
          smr_ = null;
          smrBuilder_ = null;
        }
        if (seenTimeBuilder_ == null) {
          seenTime_ = null;
        } else {
          seenTime_ = null;
          seenTimeBuilder_ = null;
        }
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.internal_static_google_keytransparency_monitor_v1_State_descriptor;
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.State getDefaultInstanceForType() {
        return google.keytransparency.monitor.v1.MonitorOuterClass.State.getDefaultInstance();
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.State build() {
        google.keytransparency.monitor.v1.MonitorOuterClass.State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public google.keytransparency.monitor.v1.MonitorOuterClass.State buildPartial() {
        google.keytransparency.monitor.v1.MonitorOuterClass.State result = new google.keytransparency.monitor.v1.MonitorOuterClass.State(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (smrBuilder_ == null) {
          result.smr_ = smr_;
        } else {
          result.smr_ = smrBuilder_.build();
        }
        if (seenTimeBuilder_ == null) {
          result.seenTime_ = seenTime_;
        } else {
          result.seenTime_ = seenTimeBuilder_.build();
        }
        if (errorsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.errors_ = errors_;
        } else {
          result.errors_ = errorsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.keytransparency.monitor.v1.MonitorOuterClass.State) {
          return mergeFrom((google.keytransparency.monitor.v1.MonitorOuterClass.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.keytransparency.monitor.v1.MonitorOuterClass.State other) {
        if (other == google.keytransparency.monitor.v1.MonitorOuterClass.State.getDefaultInstance()) return this;
        if (other.hasSmr()) {
          mergeSmr(other.getSmr());
        }
        if (other.hasSeenTime()) {
          mergeSeenTime(other.getSeenTime());
        }
        if (errorsBuilder_ == null) {
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
        } else {
          if (!other.errors_.isEmpty()) {
            if (errorsBuilder_.isEmpty()) {
              errorsBuilder_.dispose();
              errorsBuilder_ = null;
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000004);
              errorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getErrorsFieldBuilder() : null;
            } else {
              errorsBuilder_.addAllMessages(other.errors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.keytransparency.monitor.v1.MonitorOuterClass.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.keytransparency.monitor.v1.MonitorOuterClass.State) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.trilliann.proto.SignedMapRoot smr_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.trilliann.proto.SignedMapRoot, com.google.trilliann.proto.SignedMapRoot.Builder, com.google.trilliann.proto.SignedMapRootOrBuilder> smrBuilder_;
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public boolean hasSmr() {
        return smrBuilder_ != null || smr_ != null;
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public com.google.trilliann.proto.SignedMapRoot getSmr() {
        if (smrBuilder_ == null) {
          return smr_ == null ? com.google.trilliann.proto.SignedMapRoot.getDefaultInstance() : smr_;
        } else {
          return smrBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public Builder setSmr(com.google.trilliann.proto.SignedMapRoot value) {
        if (smrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          smr_ = value;
          onChanged();
        } else {
          smrBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public Builder setSmr(
          com.google.trilliann.proto.SignedMapRoot.Builder builderForValue) {
        if (smrBuilder_ == null) {
          smr_ = builderForValue.build();
          onChanged();
        } else {
          smrBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public Builder mergeSmr(com.google.trilliann.proto.SignedMapRoot value) {
        if (smrBuilder_ == null) {
          if (smr_ != null) {
            smr_ =
              com.google.trilliann.proto.SignedMapRoot.newBuilder(smr_).mergeFrom(value).buildPartial();
          } else {
            smr_ = value;
          }
          onChanged();
        } else {
          smrBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public Builder clearSmr() {
        if (smrBuilder_ == null) {
          smr_ = null;
          onChanged();
        } else {
          smr_ = null;
          smrBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public com.google.trilliann.proto.SignedMapRoot.Builder getSmrBuilder() {
        
        onChanged();
        return getSmrFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      public com.google.trilliann.proto.SignedMapRootOrBuilder getSmrOrBuilder() {
        if (smrBuilder_ != null) {
          return smrBuilder_.getMessageOrBuilder();
        } else {
          return smr_ == null ?
              com.google.trilliann.proto.SignedMapRoot.getDefaultInstance() : smr_;
        }
      }
      /**
       * <pre>
       * smr contains the map root for the sparse Merkle Tree signed with the
       * monitor's key on success. If the checks were not successful the
       * smr will be empty. The revisions are encoded into the smr map_revision.
       * </pre>
       *
       * <code>.trillian.SignedMapRoot smr = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.trilliann.proto.SignedMapRoot, com.google.trilliann.proto.SignedMapRoot.Builder, com.google.trilliann.proto.SignedMapRootOrBuilder>
          getSmrFieldBuilder() {
        if (smrBuilder_ == null) {
          smrBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.trilliann.proto.SignedMapRoot, com.google.trilliann.proto.SignedMapRoot.Builder, com.google.trilliann.proto.SignedMapRootOrBuilder>(
                  getSmr(),
                  getParentForChildren(),
                  isClean());
          smr_ = null;
        }
        return smrBuilder_;
      }

      private com.google.protobuf.Timestamp seenTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> seenTimeBuilder_;
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public boolean hasSeenTime() {
        return seenTimeBuilder_ != null || seenTime_ != null;
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getSeenTime() {
        if (seenTimeBuilder_ == null) {
          return seenTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : seenTime_;
        } else {
          return seenTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public Builder setSeenTime(com.google.protobuf.Timestamp value) {
        if (seenTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          seenTime_ = value;
          onChanged();
        } else {
          seenTimeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public Builder setSeenTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (seenTimeBuilder_ == null) {
          seenTime_ = builderForValue.build();
          onChanged();
        } else {
          seenTimeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public Builder mergeSeenTime(com.google.protobuf.Timestamp value) {
        if (seenTimeBuilder_ == null) {
          if (seenTime_ != null) {
            seenTime_ =
              com.google.protobuf.Timestamp.newBuilder(seenTime_).mergeFrom(value).buildPartial();
          } else {
            seenTime_ = value;
          }
          onChanged();
        } else {
          seenTimeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public Builder clearSeenTime() {
        if (seenTimeBuilder_ == null) {
          seenTime_ = null;
          onChanged();
        } else {
          seenTime_ = null;
          seenTimeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getSeenTimeBuilder() {
        
        onChanged();
        return getSeenTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getSeenTimeOrBuilder() {
        if (seenTimeBuilder_ != null) {
          return seenTimeBuilder_.getMessageOrBuilder();
        } else {
          return seenTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : seenTime_;
        }
      }
      /**
       * <pre>
       * seen_time contains the time when this particular signed map root was
       * retrieved and processed.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp seen_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getSeenTimeFieldBuilder() {
        if (seenTimeBuilder_ == null) {
          seenTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getSeenTime(),
                  getParentForChildren(),
                  isClean());
          seenTime_ = null;
        }
        return seenTimeBuilder_;
      }

      private java.util.List<com.google.rpc.Status> errors_ =
        java.util.Collections.emptyList();
      private void ensureErrorsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          errors_ = new java.util.ArrayList<com.google.rpc.Status>(errors_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> errorsBuilder_;

      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public java.util.List<com.google.rpc.Status> getErrorsList() {
        if (errorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(errors_);
        } else {
          return errorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public int getErrorsCount() {
        if (errorsBuilder_ == null) {
          return errors_.size();
        } else {
          return errorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public com.google.rpc.Status getErrors(int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);
        } else {
          return errorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder setErrors(
          int index, com.google.rpc.Status value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder setErrors(
          int index, com.google.rpc.Status.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.set(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder addErrors(com.google.rpc.Status value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder addErrors(
          int index, com.google.rpc.Status value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(index, value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder addErrors(
          com.google.rpc.Status.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder addErrors(
          int index, com.google.rpc.Status.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends com.google.rpc.Status> values) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, errors_);
          onChanged();
        } else {
          errorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder clearErrors() {
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public Builder removeErrors(int index) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.remove(index);
          onChanged();
        } else {
          errorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public com.google.rpc.Status.Builder getErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public com.google.rpc.StatusOrBuilder getErrorsOrBuilder(
          int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);  } else {
          return errorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
           getErrorsOrBuilderList() {
        if (errorsBuilder_ != null) {
          return errorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(errors_);
        }
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public com.google.rpc.Status.Builder addErrorsBuilder() {
        return getErrorsFieldBuilder().addBuilder(
            com.google.rpc.Status.getDefaultInstance());
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public com.google.rpc.Status.Builder addErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().addBuilder(
            index, com.google.rpc.Status.getDefaultInstance());
      }
      /**
       * <pre>
       * errors contains a list of errors representing the verification checks
       * that failed while monitoring the key-transparency server.
       * </pre>
       *
       * <code>repeated .google.rpc.Status errors = 3;</code>
       */
      public java.util.List<com.google.rpc.Status.Builder> 
           getErrorsBuilderList() {
        return getErrorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
          getErrorsFieldBuilder() {
        if (errorsBuilder_ == null) {
          errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                  errors_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          errors_ = null;
        }
        return errorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.keytransparency.monitor.v1.State)
    }

    // @@protoc_insertion_point(class_scope:google.keytransparency.monitor.v1.State)
    private static final google.keytransparency.monitor.v1.MonitorOuterClass.State DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.keytransparency.monitor.v1.MonitorOuterClass.State();
    }

    public static google.keytransparency.monitor.v1.MonitorOuterClass.State getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<State>
        PARSER = new com.google.protobuf.AbstractParser<State>() {
      @java.lang.Override
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new State(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<State> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public google.keytransparency.monitor.v1.MonitorOuterClass.State getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_keytransparency_monitor_v1_GetStateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_keytransparency_monitor_v1_State_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_keytransparency_monitor_v1_State_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030monitor/v1/monitor.proto\022!google.keytr" +
      "ansparency.monitor.v1\032\034google/api/annota" +
      "tions.proto\032\037google/protobuf/timestamp.p" +
      "roto\032\027google/rpc/status.proto\032\016trillian." +
      "proto\"I\n\017GetStateRequest\022\016\n\006kt_url\030\002 \001(\t" +
      "\022\024\n\014directory_id\030\003 \001(\t\022\020\n\010revision\030\001 \001(\003" +
      "\"\200\001\n\005State\022$\n\003smr\030\001 \001(\0132\027.trillian.Signe" +
      "dMapRoot\022-\n\tseen_time\030\002 \001(\0132\032.google.pro" +
      "tobuf.Timestamp\022\"\n\006errors\030\003 \003(\0132\022.google" +
      ".rpc.Status2\213\003\n\007Monitor\022\267\001\n\010GetState\0222.g" +
      "oogle.keytransparency.monitor.v1.GetStat" +
      "eRequest\032(.google.keytransparency.monito" +
      "r.v1.State\"M\202\323\344\223\002G\022E/monitor/v1/servers/" +
      "{kt_url}/directories/{directory_id}/stat" +
      "es:latest\022\305\001\n\022GetStateByRevision\0222.googl" +
      "e.keytransparency.monitor.v1.GetStateReq" +
      "uest\032(.google.keytransparency.monitor.v1" +
      ".State\"Q\202\323\344\223\002K\022I/monitor/v1/servers/{kt_" +
      "url}/directories/{directory_id}/states/{" +
      "revision}BHZFgithub.com/google/keytransp" +
      "arency/core/api/monitor/v1/monitor_go_pr" +
      "otob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.rpc.StatusProto.getDescriptor(),
          com.google.trilliann.proto.TrillianProto.getDescriptor(),
        }, assigner);
    internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_keytransparency_monitor_v1_GetStateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_keytransparency_monitor_v1_GetStateRequest_descriptor,
        new java.lang.String[] { "KtUrl", "DirectoryId", "Revision", });
    internal_static_google_keytransparency_monitor_v1_State_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_google_keytransparency_monitor_v1_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_keytransparency_monitor_v1_State_descriptor,
        new java.lang.String[] { "Smr", "SeenTime", "Errors", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.rpc.StatusProto.getDescriptor();
    com.google.trilliann.proto.TrillianProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
