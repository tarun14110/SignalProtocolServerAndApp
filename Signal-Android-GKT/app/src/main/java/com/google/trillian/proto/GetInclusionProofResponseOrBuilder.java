// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian_log_api.proto

package com.google.trillian.proto;

public interface GetInclusionProofResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:trillian.GetInclusionProofResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The proof field may be empty if the requested tree_size was larger
   * than that available at the server (e.g. because there is skew between
   * server instances, and an earlier client request was processed by a
   * more up-to-date instance).  In this case, the signed_log_root
   * field will indicate the tree size that the server is aware of, and
   * the proof field will be empty.
   * </pre>
   *
   * <code>.trillian.Proof proof = 2;</code>
   */
  boolean hasProof();
  /**
   * <pre>
   * The proof field may be empty if the requested tree_size was larger
   * than that available at the server (e.g. because there is skew between
   * server instances, and an earlier client request was processed by a
   * more up-to-date instance).  In this case, the signed_log_root
   * field will indicate the tree size that the server is aware of, and
   * the proof field will be empty.
   * </pre>
   *
   * <code>.trillian.Proof proof = 2;</code>
   */
  com.google.trillian.proto.Proof getProof();
  /**
   * <pre>
   * The proof field may be empty if the requested tree_size was larger
   * than that available at the server (e.g. because there is skew between
   * server instances, and an earlier client request was processed by a
   * more up-to-date instance).  In this case, the signed_log_root
   * field will indicate the tree size that the server is aware of, and
   * the proof field will be empty.
   * </pre>
   *
   * <code>.trillian.Proof proof = 2;</code>
   */
  com.google.trillian.proto.ProofOrBuilder getProofOrBuilder();

  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  boolean hasSignedLogRoot();
  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  com.google.trillian.proto.SignedLogRoot getSignedLogRoot();
  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  com.google.trillian.proto.SignedLogRootOrBuilder getSignedLogRootOrBuilder();
}
