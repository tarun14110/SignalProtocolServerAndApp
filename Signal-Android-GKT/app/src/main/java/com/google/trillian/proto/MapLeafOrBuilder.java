// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian_map_api.proto

package com.google.trillian.proto;

public interface MapLeafOrBuilder extends
    // @@protoc_insertion_point(interface_extends:trillian.MapLeaf)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * index is the location of this leaf.
   * All indexes for a given Map must contain a constant number of bits.
   * These are not numeric indices. Note that this is typically derived using a
   * hash and thus the length of all indices in the map will match the number
   * of bits in the hash function.
   * </pre>
   *
   * <code>bytes index = 1;</code>
   */
  com.google.protobuf.ByteString getIndex();

  /**
   * <pre>
   * leaf_hash is the tree hash of leaf_value.  This does not need to be set
   * on SetMapLeavesRequest; the server will fill it in.
   * For an empty leaf (len(leaf_value)==0), there may be two possible values
   * for this hash:
   *  - If the leaf has never been set, it counts as an empty subtree and
   *    a nil value is used.
   *  - If the leaf has been explicitly set to a zero-length entry, it no
   *    longer counts as empty and the value of hasher.HashLeaf(index, nil)
   *    will be used.
   * </pre>
   *
   * <code>bytes leaf_hash = 2;</code>
   */
  com.google.protobuf.ByteString getLeafHash();

  /**
   * <pre>
   * leaf_value is the data the tree commits to.
   * </pre>
   *
   * <code>bytes leaf_value = 3;</code>
   */
  com.google.protobuf.ByteString getLeafValue();

  /**
   * <pre>
   * extra_data holds related contextual data, but is not covered by any hash.
   * </pre>
   *
   * <code>bytes extra_data = 4;</code>
   */
  com.google.protobuf.ByteString getExtraData();
}
