// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian_log_api.proto

package com.google.trillian.proto;

public interface GetLeavesByIndexResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:trillian.GetLeavesByIndexResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * TODO(gbelvin): Response syntax does not allow for some requested leaves to be available, and some not (but using QueuedLogLeaf might)
   * </pre>
   *
   * <code>repeated .trillian.LogLeaf leaves = 2;</code>
   */
  java.util.List<com.google.trillian.proto.LogLeaf> 
      getLeavesList();
  /**
   * <pre>
   * TODO(gbelvin): Response syntax does not allow for some requested leaves to be available, and some not (but using QueuedLogLeaf might)
   * </pre>
   *
   * <code>repeated .trillian.LogLeaf leaves = 2;</code>
   */
  com.google.trillian.proto.LogLeaf getLeaves(int index);
  /**
   * <pre>
   * TODO(gbelvin): Response syntax does not allow for some requested leaves to be available, and some not (but using QueuedLogLeaf might)
   * </pre>
   *
   * <code>repeated .trillian.LogLeaf leaves = 2;</code>
   */
  int getLeavesCount();
  /**
   * <pre>
   * TODO(gbelvin): Response syntax does not allow for some requested leaves to be available, and some not (but using QueuedLogLeaf might)
   * </pre>
   *
   * <code>repeated .trillian.LogLeaf leaves = 2;</code>
   */
  java.util.List<? extends com.google.trillian.proto.LogLeafOrBuilder> 
      getLeavesOrBuilderList();
  /**
   * <pre>
   * TODO(gbelvin): Response syntax does not allow for some requested leaves to be available, and some not (but using QueuedLogLeaf might)
   * </pre>
   *
   * <code>repeated .trillian.LogLeaf leaves = 2;</code>
   */
  com.google.trillian.proto.LogLeafOrBuilder getLeavesOrBuilder(
      int index);

  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  boolean hasSignedLogRoot();
  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  com.google.trillian.proto.SignedLogRoot getSignedLogRoot();
  /**
   * <code>.trillian.SignedLogRoot signed_log_root = 3;</code>
   */
  com.google.trillian.proto.SignedLogRootOrBuilder getSignedLogRootOrBuilder();
}
