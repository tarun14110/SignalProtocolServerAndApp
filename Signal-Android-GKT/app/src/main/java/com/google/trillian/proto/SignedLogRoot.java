// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian.proto

package com.google.trillian.proto;

/**
 * <pre>
 * SignedLogRoot represents a commitment by a Log to a particular tree.
 * </pre>
 *
 * Protobuf type {@code trillian.SignedLogRoot}
 */
public  final class SignedLogRoot extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:trillian.SignedLogRoot)
    SignedLogRootOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SignedLogRoot.newBuilder() to construct.
  private SignedLogRoot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SignedLogRoot() {
    keyHint_ = com.google.protobuf.ByteString.EMPTY;
    logRoot_ = com.google.protobuf.ByteString.EMPTY;
    logRootSignature_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SignedLogRoot(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 58: {

            keyHint_ = input.readBytes();
            break;
          }
          case 66: {

            logRoot_ = input.readBytes();
            break;
          }
          case 74: {

            logRootSignature_ = input.readBytes();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.trillian.proto.TrillianProto.internal_static_trillian_SignedLogRoot_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.trillian.proto.TrillianProto.internal_static_trillian_SignedLogRoot_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.trillian.proto.SignedLogRoot.class, com.google.trillian.proto.SignedLogRoot.Builder.class);
  }

  public static final int KEY_HINT_FIELD_NUMBER = 7;
  private com.google.protobuf.ByteString keyHint_;
  /**
   * <pre>
   * key_hint is a hint to identify the public key for signature verification.
   * key_hint is not authenticated and may be incorrect or missing, in which
   * case all known public keys may be used to verify the signature.
   * When directly communicating with a Trillian gRPC server, the key_hint will
   * typically contain the LogID encoded as a big-endian 64-bit integer;
   * however, in other contexts the key_hint is likely to have different
   * contents (e.g. it could be a GUID, a URL + TreeID, or it could be
   * derived from the public key itself).
   * </pre>
   *
   * <code>bytes key_hint = 7;</code>
   */
  public com.google.protobuf.ByteString getKeyHint() {
    return keyHint_;
  }

  public static final int LOG_ROOT_FIELD_NUMBER = 8;
  private com.google.protobuf.ByteString logRoot_;
  /**
   * <pre>
   * log_root holds the TLS-serialization of the following structure (described
   * in RFC5246 notation): Clients should validate log_root_signature with
   * VerifySignedLogRoot before deserializing log_root.
   * enum { v1(1), (65535)} Version;
   * struct {
   *   uint64 tree_size;
   *   opaque root_hash&lt;0..128&gt;;
   *   uint64 timestamp_nanos;
   *   uint64 revision;
   *   opaque metadata&lt;0..65535&gt;;
   * } LogRootV1;
   * struct {
   *   Version version;
   *   select(version) {
   *     case v1: LogRootV1;
   *   }
   * } LogRoot;
   * A serialized v1 log root will therefore be laid out as:
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
   * | ver=1 |          tree_size            |len|    root_hash      |
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   * |        timestamp_nanos        |      revision                 |
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   * +---+---+---+---+---+-....---+
   * |  len  |    metadata        |
   * +---+---+---+---+---+-....---+
   * (with all integers encoded big-endian).
   * </pre>
   *
   * <code>bytes log_root = 8;</code>
   */
  public com.google.protobuf.ByteString getLogRoot() {
    return logRoot_;
  }

  public static final int LOG_ROOT_SIGNATURE_FIELD_NUMBER = 9;
  private com.google.protobuf.ByteString logRootSignature_;
  /**
   * <pre>
   * log_root_signature is the raw signature over log_root.
   * </pre>
   *
   * <code>bytes log_root_signature = 9;</code>
   */
  public com.google.protobuf.ByteString getLogRootSignature() {
    return logRootSignature_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!keyHint_.isEmpty()) {
      output.writeBytes(7, keyHint_);
    }
    if (!logRoot_.isEmpty()) {
      output.writeBytes(8, logRoot_);
    }
    if (!logRootSignature_.isEmpty()) {
      output.writeBytes(9, logRootSignature_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!keyHint_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(7, keyHint_);
    }
    if (!logRoot_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(8, logRoot_);
    }
    if (!logRootSignature_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(9, logRootSignature_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.trillian.proto.SignedLogRoot)) {
      return super.equals(obj);
    }
    com.google.trillian.proto.SignedLogRoot other = (com.google.trillian.proto.SignedLogRoot) obj;

    boolean result = true;
    result = result && getKeyHint()
        .equals(other.getKeyHint());
    result = result && getLogRoot()
        .equals(other.getLogRoot());
    result = result && getLogRootSignature()
        .equals(other.getLogRootSignature());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + KEY_HINT_FIELD_NUMBER;
    hash = (53 * hash) + getKeyHint().hashCode();
    hash = (37 * hash) + LOG_ROOT_FIELD_NUMBER;
    hash = (53 * hash) + getLogRoot().hashCode();
    hash = (37 * hash) + LOG_ROOT_SIGNATURE_FIELD_NUMBER;
    hash = (53 * hash) + getLogRootSignature().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.trillian.proto.SignedLogRoot parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.trillian.proto.SignedLogRoot parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.trillian.proto.SignedLogRoot parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.trillian.proto.SignedLogRoot prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * SignedLogRoot represents a commitment by a Log to a particular tree.
   * </pre>
   *
   * Protobuf type {@code trillian.SignedLogRoot}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:trillian.SignedLogRoot)
      com.google.trillian.proto.SignedLogRootOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.trillian.proto.TrillianProto.internal_static_trillian_SignedLogRoot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.trillian.proto.TrillianProto.internal_static_trillian_SignedLogRoot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.trillian.proto.SignedLogRoot.class, com.google.trillian.proto.SignedLogRoot.Builder.class);
    }

    // Construct using com.google.trillian.proto.SignedLogRoot.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      keyHint_ = com.google.protobuf.ByteString.EMPTY;

      logRoot_ = com.google.protobuf.ByteString.EMPTY;

      logRootSignature_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.trillian.proto.TrillianProto.internal_static_trillian_SignedLogRoot_descriptor;
    }

    public com.google.trillian.proto.SignedLogRoot getDefaultInstanceForType() {
      return com.google.trillian.proto.SignedLogRoot.getDefaultInstance();
    }

    public com.google.trillian.proto.SignedLogRoot build() {
      com.google.trillian.proto.SignedLogRoot result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.trillian.proto.SignedLogRoot buildPartial() {
      com.google.trillian.proto.SignedLogRoot result = new com.google.trillian.proto.SignedLogRoot(this);
      result.keyHint_ = keyHint_;
      result.logRoot_ = logRoot_;
      result.logRootSignature_ = logRootSignature_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.trillian.proto.SignedLogRoot) {
        return mergeFrom((com.google.trillian.proto.SignedLogRoot)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.trillian.proto.SignedLogRoot other) {
      if (other == com.google.trillian.proto.SignedLogRoot.getDefaultInstance()) return this;
      if (other.getKeyHint() != com.google.protobuf.ByteString.EMPTY) {
        setKeyHint(other.getKeyHint());
      }
      if (other.getLogRoot() != com.google.protobuf.ByteString.EMPTY) {
        setLogRoot(other.getLogRoot());
      }
      if (other.getLogRootSignature() != com.google.protobuf.ByteString.EMPTY) {
        setLogRootSignature(other.getLogRootSignature());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.trillian.proto.SignedLogRoot parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.trillian.proto.SignedLogRoot) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.ByteString keyHint_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * key_hint is a hint to identify the public key for signature verification.
     * key_hint is not authenticated and may be incorrect or missing, in which
     * case all known public keys may be used to verify the signature.
     * When directly communicating with a Trillian gRPC server, the key_hint will
     * typically contain the LogID encoded as a big-endian 64-bit integer;
     * however, in other contexts the key_hint is likely to have different
     * contents (e.g. it could be a GUID, a URL + TreeID, or it could be
     * derived from the public key itself).
     * </pre>
     *
     * <code>bytes key_hint = 7;</code>
     */
    public com.google.protobuf.ByteString getKeyHint() {
      return keyHint_;
    }
    /**
     * <pre>
     * key_hint is a hint to identify the public key for signature verification.
     * key_hint is not authenticated and may be incorrect or missing, in which
     * case all known public keys may be used to verify the signature.
     * When directly communicating with a Trillian gRPC server, the key_hint will
     * typically contain the LogID encoded as a big-endian 64-bit integer;
     * however, in other contexts the key_hint is likely to have different
     * contents (e.g. it could be a GUID, a URL + TreeID, or it could be
     * derived from the public key itself).
     * </pre>
     *
     * <code>bytes key_hint = 7;</code>
     */
    public Builder setKeyHint(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyHint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * key_hint is a hint to identify the public key for signature verification.
     * key_hint is not authenticated and may be incorrect or missing, in which
     * case all known public keys may be used to verify the signature.
     * When directly communicating with a Trillian gRPC server, the key_hint will
     * typically contain the LogID encoded as a big-endian 64-bit integer;
     * however, in other contexts the key_hint is likely to have different
     * contents (e.g. it could be a GUID, a URL + TreeID, or it could be
     * derived from the public key itself).
     * </pre>
     *
     * <code>bytes key_hint = 7;</code>
     */
    public Builder clearKeyHint() {
      
      keyHint_ = getDefaultInstance().getKeyHint();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString logRoot_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * log_root holds the TLS-serialization of the following structure (described
     * in RFC5246 notation): Clients should validate log_root_signature with
     * VerifySignedLogRoot before deserializing log_root.
     * enum { v1(1), (65535)} Version;
     * struct {
     *   uint64 tree_size;
     *   opaque root_hash&lt;0..128&gt;;
     *   uint64 timestamp_nanos;
     *   uint64 revision;
     *   opaque metadata&lt;0..65535&gt;;
     * } LogRootV1;
     * struct {
     *   Version version;
     *   select(version) {
     *     case v1: LogRootV1;
     *   }
     * } LogRoot;
     * A serialized v1 log root will therefore be laid out as:
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * | ver=1 |          tree_size            |len|    root_hash      |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * |        timestamp_nanos        |      revision                 |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * +---+---+---+---+---+-....---+
     * |  len  |    metadata        |
     * +---+---+---+---+---+-....---+
     * (with all integers encoded big-endian).
     * </pre>
     *
     * <code>bytes log_root = 8;</code>
     */
    public com.google.protobuf.ByteString getLogRoot() {
      return logRoot_;
    }
    /**
     * <pre>
     * log_root holds the TLS-serialization of the following structure (described
     * in RFC5246 notation): Clients should validate log_root_signature with
     * VerifySignedLogRoot before deserializing log_root.
     * enum { v1(1), (65535)} Version;
     * struct {
     *   uint64 tree_size;
     *   opaque root_hash&lt;0..128&gt;;
     *   uint64 timestamp_nanos;
     *   uint64 revision;
     *   opaque metadata&lt;0..65535&gt;;
     * } LogRootV1;
     * struct {
     *   Version version;
     *   select(version) {
     *     case v1: LogRootV1;
     *   }
     * } LogRoot;
     * A serialized v1 log root will therefore be laid out as:
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * | ver=1 |          tree_size            |len|    root_hash      |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * |        timestamp_nanos        |      revision                 |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * +---+---+---+---+---+-....---+
     * |  len  |    metadata        |
     * +---+---+---+---+---+-....---+
     * (with all integers encoded big-endian).
     * </pre>
     *
     * <code>bytes log_root = 8;</code>
     */
    public Builder setLogRoot(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logRoot_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * log_root holds the TLS-serialization of the following structure (described
     * in RFC5246 notation): Clients should validate log_root_signature with
     * VerifySignedLogRoot before deserializing log_root.
     * enum { v1(1), (65535)} Version;
     * struct {
     *   uint64 tree_size;
     *   opaque root_hash&lt;0..128&gt;;
     *   uint64 timestamp_nanos;
     *   uint64 revision;
     *   opaque metadata&lt;0..65535&gt;;
     * } LogRootV1;
     * struct {
     *   Version version;
     *   select(version) {
     *     case v1: LogRootV1;
     *   }
     * } LogRoot;
     * A serialized v1 log root will therefore be laid out as:
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * | ver=1 |          tree_size            |len|    root_hash      |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * |        timestamp_nanos        |      revision                 |
     * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
     * +---+---+---+---+---+-....---+
     * |  len  |    metadata        |
     * +---+---+---+---+---+-....---+
     * (with all integers encoded big-endian).
     * </pre>
     *
     * <code>bytes log_root = 8;</code>
     */
    public Builder clearLogRoot() {
      
      logRoot_ = getDefaultInstance().getLogRoot();
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString logRootSignature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * log_root_signature is the raw signature over log_root.
     * </pre>
     *
     * <code>bytes log_root_signature = 9;</code>
     */
    public com.google.protobuf.ByteString getLogRootSignature() {
      return logRootSignature_;
    }
    /**
     * <pre>
     * log_root_signature is the raw signature over log_root.
     * </pre>
     *
     * <code>bytes log_root_signature = 9;</code>
     */
    public Builder setLogRootSignature(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logRootSignature_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * log_root_signature is the raw signature over log_root.
     * </pre>
     *
     * <code>bytes log_root_signature = 9;</code>
     */
    public Builder clearLogRootSignature() {
      
      logRootSignature_ = getDefaultInstance().getLogRootSignature();
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:trillian.SignedLogRoot)
  }

  // @@protoc_insertion_point(class_scope:trillian.SignedLogRoot)
  private static final com.google.trillian.proto.SignedLogRoot DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.trillian.proto.SignedLogRoot();
  }

  public static com.google.trillian.proto.SignedLogRoot getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SignedLogRoot>
      PARSER = new com.google.protobuf.AbstractParser<SignedLogRoot>() {
    public SignedLogRoot parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SignedLogRoot(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SignedLogRoot> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SignedLogRoot> getParserForType() {
    return PARSER;
  }

  public com.google.trillian.proto.SignedLogRoot getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

