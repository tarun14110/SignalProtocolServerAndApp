// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trillian.proto

package com.google.trillian.proto;

public interface SignedLogRootOrBuilder extends
    // @@protoc_insertion_point(interface_extends:trillian.SignedLogRoot)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * key_hint is a hint to identify the public key for signature verification.
   * key_hint is not authenticated and may be incorrect or missing, in which
   * case all known public keys may be used to verify the signature.
   * When directly communicating with a Trillian gRPC server, the key_hint will
   * typically contain the LogID encoded as a big-endian 64-bit integer;
   * however, in other contexts the key_hint is likely to have different
   * contents (e.g. it could be a GUID, a URL + TreeID, or it could be
   * derived from the public key itself).
   * </pre>
   *
   * <code>bytes key_hint = 7;</code>
   * @return The keyHint.
   */
  com.google.protobuf.ByteString getKeyHint();

  /**
   * <pre>
   * log_root holds the TLS-serialization of the following structure (described
   * in RFC5246 notation): Clients should validate log_root_signature with
   * VerifySignedLogRoot before deserializing log_root.
   * enum { v1(1), (65535)} Version;
   * struct {
   *   uint64 tree_size;
   *   opaque root_hash&lt;0..128&gt;;
   *   uint64 timestamp_nanos;
   *   uint64 revision;
   *   opaque metadata&lt;0..65535&gt;;
   * } LogRootV1;
   * struct {
   *   Version version;
   *   select(version) {
   *     case v1: LogRootV1;
   *   }
   * } LogRoot;
   * A serialized v1 log root will therefore be laid out as:
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
   * | ver=1 |          tree_size            |len|    root_hash      |
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+-....--+
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   * |        timestamp_nanos        |      revision                 |
   * +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
   * +---+---+---+---+---+-....---+
   * |  len  |    metadata        |
   * +---+---+---+---+---+-....---+
   * (with all integers encoded big-endian).
   * </pre>
   *
   * <code>bytes log_root = 8;</code>
   * @return The logRoot.
   */
  com.google.protobuf.ByteString getLogRoot();

  /**
   * <pre>
   * log_root_signature is the raw signature over log_root.
   * </pre>
   *
   * <code>bytes log_root_signature = 9;</code>
   * @return The logRootSignature.
   */
  com.google.protobuf.ByteString getLogRootSignature();
}
